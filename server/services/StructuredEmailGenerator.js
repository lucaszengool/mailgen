/** * Structured Email Generator for 36 Fancy Templates * This service generates structured content using Ollama that maps to specific UI components */ const axios = require('axios'); class StructuredEmailGenerator { constructor() { this.ollamaUrl = process.env.OLLAMA_URL || 'http://localhost:11434'; this.model = 'qwen2.5:0.5b'; // Fast model for quick generation // Define all 36 template structures this.templates = this.initializeTemplates(); } initializeTemplates() { return { // Template 1: Executive Summit executive_summit: { name: 'Executive Summit Style', category: 'professional', prompt: `Generate executive email content: [COMPANY_NAME]: {companyName}
[TAGLINE]: Professional Excellence
[HEADLINE]: Revolutionary Partnership Opportunity
[SUBHEADLINE]: Join industry leaders transforming business
[CTA_TEXT]: Schedule Meeting
[METRIC_1]: 450%
[METRIC_2]: $12M
[METRIC_3]: 89%
[ADVANTAGES]: Global Reach|AI Integration|Premium Support|Expert Team`, sections: [ 'companyName', 'tagline', 'headline', 'subheadline', 'ctaText', 'metric1', 'metric2', 'metric3', 'advantages' ] }, // Template 2: Tech Startup Vibrant tech_startup_vibrant: { name: 'Tech Startup Vibrant', category: 'modern', prompt: `Generate tech startup email content in this EXACT format: [STARTUP_NAME]: Generate a cool tech startup name
[STARTUP_MISSION]: Generate mission statement (max 5 words)
[BADGE]: Generate launch badge text (max 3 words)
[MAIN_HEADLINE]: Generate exciting headline (max 6 words)
[MAIN_DESCRIPTION]: Generate startup description (max 25 words)
[MAIN_CTA]: Generate CTA button text (max 3 words)
[FEATURES]: Generate 4 tech features separated by "|"
[TECH_STACK]: Generate 5 technologies separated by "|"
[GROWTH]: Generate growth percentage
[ACTIVE_USERS]: Generate user count
[API_CALLS]: Generate API metric
[RESPONSE_TIME]: Generate response time
[UPTIME]: Generate uptime percentage
[REVIEWS]: Generate review count`, sections: [ 'startupName', 'startupMission', 'badge', 'mainHeadline', 'mainDescription', 'mainCta', 'features', 'techStack', 'growth', 'activeUsers', 'apiCalls', 'responseTime', 'uptime', 'reviews' ] }, // Template 3: Luxury Brand Premium luxury_brand: { name: 'Luxury Brand Premium', category: 'luxury', prompt: `Generate luxury brand email content in this EXACT format: [BRAND_NAME]: Generate luxury brand name
[BRAND_TAGLINE]: Generate luxury tagline (3-5 words, all caps)
[COLLECTION]: Generate collection name (2-3 words)
[PRODUCT_NAME]: Generate luxury product name
[DESCRIPTION]: Generate luxury product description (30 words)
[FEATURES]: Generate 3 luxury features separated by "|"
[PRIMARY_CTA]: Generate premium CTA (2-3 words, all caps)
[PRICE]: Generate luxury price (e.g., "$45,000")
[AVAILABILITY]: Generate availability number (single digit)
[RATING]: Generate rating (always 5.0)`, sections: [ 'brandName', 'brandTagline', 'collection', 'productName', 'description', 'features', 'primaryCta', 'price', 'availability', 'rating' ] }, // Template 4: SaaS Modern Dashboard saas_modern: { name: 'SaaS Modern Dashboard', category: 'business', prompt: `Generate SaaS email content in this EXACT format: [SAAS_NAME]: Generate SaaS product name
[SAAS_TAGLINE]: Generate SaaS tagline
[TOTAL_USERS]: Generate user count (e.g., "24,583")
[ACTIVE_PROJECTS]: Generate project count
[DATA_STORED]: Generate storage amount (e.g., "2.4TB")
[API_CALLS]: Generate API calls metric
[MAIN_HEADING]: Generate main heading
[MAIN_DESCRIPTION]: Generate main description
[FEATURES]: Generate 4 SaaS features separated by "|"
[CTA_BUTTON]: Generate CTA text
[PRICE]: Generate monthly price
[PLAN_FEATURES]: Generate 4 plan features separated by "|"`, sections: [ 'saasName', 'saasTagline', 'totalUsers', 'activeProjects', 'dataStored', 'apiCalls', 'mainHeading', 'mainDescription', 'features', 'ctaButton', 'price', 'planFeatures' ] }, // Template 5: E-commerce Flash Sale ecommerce_flash: { name: 'E-commerce Flash Sale', category: 'sales', prompt: `Generate flash sale email content in this EXACT format: [STORE_NAME]: Generate store name (all caps)
[TIME_LEFT]: Generate countdown time (e.g., "2:45:30")
[DISCOUNT]: Generate discount percentage (e.g., "70% OFF")
[SALE_HEADLINE]: Generate sale headline (all caps, max 6 words)
[SALE_SUBHEADLINE]: Generate sale subheadline
[PRODUCTS]: Generate 4 products with format "name:price:originalPrice:discount" separated by "|"
[CTA_TEXT]: Generate urgent CTA (max 3 words)
[URGENCY_TEXT]: Generate urgency message`, sections: [ 'storeName', 'timeLeft', 'discount', 'saleHeadline', 'saleSubheadline', 'products', 'ctaText', 'urgencyText' ] }, // Template 6: Minimalist Creative minimalist_creative: { name: 'Minimalist Creative Agency', category: 'creative', prompt: `Generate minimalist email content in this EXACT format: [HEADLINE]: Generate minimalist headline (max 3 words)
[MAIN_CONTENT]: Generate thoughtful content (max 25 words)
[SERVICES]: Generate 3 services separated by "|"
[CTA]: Generate simple CTA (max 3 words)`, sections: ['headline', 'mainContent', 'services', 'cta'] }, // Template 7: Cyberpunk Neon cyberpunk_neon: { name: 'Cyberpunk Neon', category: 'gaming', prompt: `Generate cyberpunk email content in this EXACT format: [TITLE]: Generate cyberpunk title (with underscore)
[MISSION]: Generate mission briefing
[REWARDS]: Generate rewards description
[CTA]: Generate cyber CTA (max 3 words)`, sections: ['title', 'mission', 'rewards', 'cta'] }, // Template 8: Wellness & Health wellness_health: { name: 'Wellness & Health', category: 'health', prompt: `Generate wellness email content in this EXACT format: [HEADLINE]: Generate wellness headline
[SUBHEADLINE]: Generate wellness subheadline
[PILLARS]: Generate 3 wellness pillars separated by "|"
[CTA_HEADLINE]: Generate CTA headline
[CTA_BUTTON]: Generate CTA button text`, sections: ['headline', 'subheadline', 'pillars', 'ctaHeadline', 'ctaButton'] }, // Template 9: Financial Dashboard financial_dashboard: { name: 'Financial Dashboard', category: 'finance', prompt: `Generate financial email content in this EXACT format: [COMPANY_NAME]: Generate finance company name
[TAGLINE]: Generate financial tagline
[RETURNS]: Generate return percentage
[PORTFOLIO_VALUE]: Generate portfolio value
[DAILY_PNL]: Generate daily P&L
[CASH]: Generate cash amount
[RISK_SCORE]: Generate risk score
[OPPORTUNITIES]: Generate 3 investments as "name:apr:risk" separated by "|"`, sections: [ 'companyName', 'tagline', 'returns', 'portfolioValue', 'dailyPnl', 'cash', 'riskScore', 'opportunities' ] }, // Template 10: Gaming Tournament gaming_tournament: { name: 'Gaming Tournament', category: 'gaming', prompt: `Generate gaming tournament email content in this EXACT format: [TOURNAMENT_NAME]: Generate tournament name (all caps)
[PRIZE_POOL]: Generate prize pool amount
[TEAMS]: Generate team count
[VIEWERS]: Generate viewer count
[GAME_TITLE]: Generate game title
[DESCRIPTION]: Generate tournament description
[FEATURES]: Generate 4 features separated by "|"
[CTA]: Generate gaming CTA
[LEADERBOARD]: Generate 3 teams as "rank:team:points" separated by "|"`, sections: [ 'tournamentName', 'prizePool', 'teams', 'viewers', 'gameTitle', 'description', 'features', 'cta', 'leaderboard' ] }, // Templates 11-36... real_estate_luxury: { name: 'Real Estate Luxury', category: 'real_estate', prompt: `[PROPERTY_NAME]: Generate luxury property name|[LOCATION]: Generate prestigious location|[PRICE]: Generate property price|[SQFT]: Generate square footage|[BEDROOMS]: Generate bedroom count|[AMENITIES]: Generate 5 amenities separated by "|"`, sections: ['propertyName', 'location', 'price', 'sqft', 'bedrooms', 'amenities'] }, education_platform: { name: 'Education Platform', category: 'education', prompt: `[COURSE_NAME]: Generate course name|[INSTRUCTOR]: Generate instructor name|[DURATION]: Generate course duration|[STUDENTS]: Generate student count|[RATING]: Generate rating|[MODULES]: Generate 4 modules separated by "|"`, sections: ['courseName', 'instructor', 'duration', 'students', 'rating', 'modules'] }, music_festival: { name: 'Music Festival', category: 'entertainment', prompt: `[FESTIVAL_NAME]: Generate festival name|[DATES]: Generate festival dates|[LOCATION]: Generate venue|[HEADLINERS]: Generate 3 headliners separated by "|"|[TICKET_PRICE]: Generate ticket price`, sections: ['festivalName', 'dates', 'location', 'headliners', 'ticketPrice'] }, restaurant_menu: { name: 'Restaurant Menu', category: 'food', prompt: `[RESTAURANT_NAME]: Generate restaurant name|[CUISINE]: Generate cuisine type|[SPECIAL]: Generate daily special|[DISHES]: Generate 4 dishes with prices separated by "|"`, sections: ['restaurantName', 'cuisine', 'special', 'dishes'] }, travel_adventure: { name: 'Travel Adventure', category: 'travel', prompt: `[DESTINATION]: Generate exotic destination|[PACKAGE_NAME]: Generate package name|[DURATION]: Generate trip duration|[PRICE]: Generate package price|[HIGHLIGHTS]: Generate 4 highlights separated by "|"`, sections: ['destination', 'packageName', 'duration', 'price', 'highlights'] }, crypto_trading: { name: 'Crypto Trading', category: 'finance', prompt: `[PLATFORM_NAME]: Generate crypto platform name|[TOTAL_VALUE]: Generate portfolio value|[TOP_COIN]: Generate top performing coin|[GAIN]: Generate percentage gain|[FEATURES]: Generate 4 features separated by "|"`, sections: ['platformName', 'totalValue', 'topCoin', 'gain', 'features'] }, fashion_boutique: { name: 'Fashion Boutique', category: 'fashion', prompt: `[BRAND_NAME]: Generate fashion brand|[COLLECTION]: Generate collection name|[SEASON]: Generate season|[DISCOUNT]: Generate discount|[ITEMS]: Generate 4 fashion items separated by "|"`, sections: ['brandName', 'collection', 'season', 'discount', 'items'] }, fitness_challenge: { name: 'Fitness Challenge', category: 'fitness', prompt: `[CHALLENGE_NAME]: Generate challenge name|[DURATION]: Generate duration|[GOAL]: Generate fitness goal|[PARTICIPANTS]: Generate participant count|[REWARDS]: Generate rewards separated by "|"`, sections: ['challengeName', 'duration', 'goal', 'participants', 'rewards'] }, news_magazine: { name: 'News Magazine', category: 'media', prompt: `[PUBLICATION]: Generate publication name|[HEADLINE]: Generate news headline|[AUTHOR]: Generate author name|[CATEGORY]: Generate news category|[SUMMARY]: Generate article summary`, sections: ['publication', 'headline', 'author', 'category', 'summary'] }, social_media_campaign: { name: 'Social Media Campaign', category: 'marketing', prompt: `[CAMPAIGN_NAME]: Generate campaign name|[HASHTAG]: Generate hashtag|[REACH]: Generate reach number|[ENGAGEMENT]: Generate engagement rate|[PLATFORMS]: Generate 4 platforms separated by "|"`, sections: ['campaignName', 'hashtag', 'reach', 'engagement', 'platforms'] }, b2b_enterprise: { name: 'B2B Enterprise', category: 'enterprise', prompt: `[COMPANY]: Generate enterprise company|[SOLUTION]: Generate solution name|[ROI]: Generate ROI percentage|[CLIENTS]: Generate client count|[BENEFITS]: Generate 5 benefits separated by "|"`, sections: ['company', 'solution', 'roi', 'clients', 'benefits'] }, mobile_app_launch: { name: 'Mobile App Launch', category: 'tech', prompt: `[APP_NAME]: Generate app name|[CATEGORY]: Generate app category|[DOWNLOADS]: Generate download count|[RATING]: Generate app rating|[FEATURES]: Generate 5 features separated by "|"`, sections: ['appName', 'category', 'downloads', 'rating', 'features'] }, wedding_invitation: { name: 'Wedding Invitation', category: 'personal', prompt: `[COUPLE_NAMES]: Generate couple names|[DATE]: Generate wedding date|[VENUE]: Generate venue name|[TIME]: Generate ceremony time|[DRESS_CODE]: Generate dress code`, sections: ['coupleNames', 'date', 'venue', 'time', 'dressCode'] }, art_gallery: { name: 'Art Gallery', category: 'art', prompt: `[GALLERY_NAME]: Generate gallery name|[EXHIBITION]: Generate exhibition title|[ARTIST]: Generate artist name|[DATES]: Generate exhibition dates|[PIECES]: Generate 3 artwork pieces separated by "|"`, sections: ['galleryName', 'exhibition', 'artist', 'dates', 'pieces'] }, automotive_showroom: { name: 'Automotive Showroom', category: 'automotive', prompt: `[BRAND]: Generate car brand|[MODEL]: Generate car model|[PRICE]: Generate price|[SPECS]: Generate 4 specs separated by "|"|[FINANCING]: Generate financing option`, sections: ['brand', 'model', 'price', 'specs', 'financing'] }, beauty_cosmetics: { name: 'Beauty & Cosmetics', category: 'beauty', prompt: `[BRAND_NAME]: Generate beauty brand|[PRODUCT_LINE]: Generate product line|[PROMOTION]: Generate promotion|[INGREDIENTS]: Generate 3 key ingredients separated by "|"|[PRICE]: Generate price`, sections: ['brandName', 'productLine', 'promotion', 'ingredients', 'price'] }, sports_event: { name: 'Sports Event', category: 'sports', prompt: `[EVENT_NAME]: Generate sports event|[TEAMS]: Generate competing teams|[DATE]: Generate event date|[VENUE]: Generate venue|[TICKETS]: Generate ticket price`, sections: ['eventName', 'teams', 'date', 'venue', 'tickets'] }, podcast_promotion: { name: 'Podcast Promotion', category: 'media', prompt: `[PODCAST_NAME]: Generate podcast name|[HOST]: Generate host name|[EPISODE]: Generate episode title|[GUEST]: Generate guest name|[TOPICS]: Generate 3 topics separated by "|"`, sections: ['podcastName', 'host', 'episode', 'guest', 'topics'] }, book_launch: { name: 'Book Launch', category: 'publishing', prompt: `[TITLE]: Generate book title|[AUTHOR]: Generate author name|[GENRE]: Generate genre|[PRICE]: Generate book price|[SYNOPSIS]: Generate book synopsis (30 words)`, sections: ['title', 'author', 'genre', 'price', 'synopsis'] }, conference_invitation: { name: 'Conference Invitation', category: 'events', prompt: `[CONFERENCE_NAME]: Generate conference name|[DATE]: Generate conference date|[LOCATION]: Generate location|[SPEAKERS]: Generate 3 speakers separated by "|"|[REGISTRATION]: Generate registration fee`, sections: ['conferenceName', 'date', 'location', 'speakers', 'registration'] }, charity_fundraiser: { name: 'Charity Fundraiser', category: 'nonprofit', prompt: `[CHARITY_NAME]: Generate charity name|[CAUSE]: Generate cause|[GOAL]: Generate fundraising goal|[RAISED]: Generate amount raised|[IMPACT]: Generate impact statement`, sections: ['charityName', 'cause', 'goal', 'raised', 'impact'] }, legal_services: { name: 'Legal Services', category: 'legal', prompt: `[FIRM_NAME]: Generate law firm name|[PRACTICE_AREAS]: Generate 3 practice areas separated by "|"|[CONSULTATION]: Generate consultation offer|[SUCCESS_RATE]: Generate success rate`, sections: ['firmName', 'practiceAreas', 'consultation', 'successRate'] }, architecture_firm: { name: 'Architecture Firm', category: 'design', prompt: `[FIRM_NAME]: Generate architecture firm|[PROJECT]: Generate project name|[STYLE]: Generate architectural style|[TIMELINE]: Generate project timeline|[BUDGET]: Generate budget range`, sections: ['firmName', 'project', 'style', 'timeline', 'budget'] }, food_delivery: { name: 'Food Delivery', category: 'food', prompt: `[SERVICE_NAME]: Generate delivery service|[PROMO_CODE]: Generate promo code|[DISCOUNT]: Generate discount amount|[DELIVERY_TIME]: Generate delivery time|[CUISINES]: Generate 4 cuisines separated by "|"`, sections: ['serviceName', 'promoCode', 'discount', 'deliveryTime', 'cuisines'] }, insurance_quote: { name: 'Insurance Quote', category: 'insurance', prompt: `[COMPANY_NAME]: Generate insurance company|[COVERAGE_TYPE]: Generate coverage type|[MONTHLY_PREMIUM]: Generate monthly premium|[DEDUCTIBLE]: Generate deductible|[BENEFITS]: Generate 4 benefits separated by "|"`, sections: ['companyName', 'coverageType', 'monthlyPremium', 'deductible', 'benefits'] }, recruitment_offer: { name: 'Recruitment Offer', category: 'hr', prompt: `[COMPANY]: Generate company name|[POSITION]: Generate job position|[SALARY]: Generate salary range|[LOCATION]: Generate job location|[BENEFITS]: Generate 4 benefits separated by "|"`, sections: ['company', 'position', 'salary', 'location', 'benefits'] }, partnership_outreach: { name: 'Partnership Outreach', category: 'business', prompt: `[COMPANY_NAME]: Generate company name|[HEADLINE]: Generate partnership headline|[VALUE_PROP]: Generate value proposition|[BENEFITS]: Generate 3 partnership benefits separated by "|"|[CTA_TEXT]: Generate call-to-action text`, sections: ['companyName', 'headline', 'valueProp', 'benefits', 'ctaText'] }, cold_outreach: { name: 'Cold Outreach', category: 'first_contact', prompt: `[COMPANY_NAME]: Generate company name|[SUBJECT]: Generate compelling cold email subject|[OPENING]: Generate personalized opening line|[VALUE_PROP]: Generate value proposition|[SOCIAL_PROOF]: Generate social proof statement|[CTA_TEXT]: Generate call-to-action text`, sections: ['companyName', 'subject', 'opening', 'valueProp', 'socialProof', 'ctaText'] } }; } /** * Generate structured content for a specific template */ async generateStructuredContent(templateType, context) { const template = this.templates[templateType]; if (!template) { throw new Error(`Template ${templateType} not found`); } console.log(` Generating structured content for template: ${templateType}`); // For now, use smart fallback with context-based content instead of Ollama // This ensures fast, reliable generation while maintaining the structure try { const contextualizedContent = this.generateContextualizedContent(templateType, context, template.sections); console.log(` Generated structured content with ${Object.keys(contextualizedContent).length} sections`); return { success: true, templateType, sections: contextualizedContent, source: 'contextualized_fallback' }; } catch (error) { console.error(` Failed to generate structured content: ${error.message}`); return { success: false, error: error.message, fallback: this.generateFallbackContent(template.sections) }; } } /** * Generate contextualized content based on user data * This is faster and more reliable than Ollama for structured content */ generateContextualizedContent(templateType, context, sections) { const companyName = context.companyName || 'TechCorp'; const industry = context.industry || 'Technology'; const product = context.product || 'AI Solutions'; const goal = context.campaignGoal || 'partnership'; const prospectCompany = context.prospectCompany || 'YourCompany'; // Template-specific content generation const contentGenerators = { executive_summit: () => ({ companyName: `${companyName} Solutions`, tagline: 'Excellence Defined', headline: `Revolutionary ${industry} Partnership`, subheadline: `Transform your business with our ${product} expertise`, ctaText: 'Schedule Meeting', metric1: '450%', metric2: '$12M', metric3: '89%', advantages: ['Global Reach', `${industry} Expertise`, 'Premium Support', '24/7 Service'] }), tech_startup_vibrant: () => ({ startupName: `${companyName} Labs`, startupMission: 'Innovating Tomorrow', badge: 'LIVE NOW', mainHeadline: `The Future of ${industry}`, mainDescription: `Join 10,000+ companies transforming with our ${product}`, mainCta: 'Start Free Trial', features: ['AI-Powered', 'Real-Time Sync', 'Cloud Native', 'Zero Config'], techStack: ['React', 'Node.js', 'AWS', 'GraphQL', 'Docker'], growth: '24%', activeUsers: '45.2K', apiCalls: '1.2M', responseTime: '12ms', uptime: '99.99%', reviews: '2.8K' }), luxury_brand: () => ({ brandName: `${companyName.toUpperCase()}`, brandTagline: 'EXCELLENCE DEFINED', collection: 'PREMIUM SERIES', productName: `The ${companyName} Collection`, description: `Crafted for discerning professionals who appreciate the finest ${product} solutions`, features: ['Handcrafted Excellence', 'Premium Materials', 'Limited Edition'], primaryCta: 'RESERVE NOW', price: '$45,000', availability: '7', rating: '5.0' }), saas_modern: () => ({ saasName: `${companyName} Pro`, saasTagline: `Enterprise ${industry} Platform`, totalUsers: '24,583', activeProjects: '142', dataStored: '2.4TB', apiCalls: '1.2M', mainHeading: `Accelerate Your ${industry} Workflow`, mainDescription: `Powerful features designed to streamline your ${product} operations`, features: ['Real-time Collaboration', 'Advanced Analytics', 'API Integration', 'Custom Workflows'], ctaButton: 'Start Free Trial', price: '$299', planFeatures: ['Unlimited Users', '10TB Storage', 'Priority Support', 'Advanced Analytics'] }), ecommerce_flash: () => ({ storeName: `${companyName.toUpperCase()} STORE`, timeLeft: '2:45:30', discount: '70% OFF', saleHeadline: 'BIGGEST SALE OF THE YEAR', saleSubheadline: `Up to 70% off on ${product} and more`, products: [ { name: `${product} Starter`, price: '$99', originalPrice: '$299', discount: '67%' }, { name: `${product} Pro`, price: '$149', originalPrice: '$449', discount: '67%' }, { name: `${product} Enterprise`, price: '$299', originalPrice: '$899', discount: '67%' } ], ctaText: 'SHOP NOW', urgencyText: '2,847 people are viewing this sale' }), partnership_outreach: () => ({ companyName: companyName, headline: `Strategic Partnership: ${companyName} + ${prospectCompany}`, valueProp: `Transform your ${industry} operations with our innovative ${product} solutions`, benefits: [ 'Accelerated Growth & Market Expansion', 'Cutting-edge Technology Integration', 'Proven ROI & Performance Metrics' ], ctaText: 'Schedule Partnership Discussion' }), cold_outreach: () => ({ companyName: companyName, subject: `Strategic alliance: ${companyName} + ${prospectCompany}`, opening: `I've been following ${prospectCompany}'s remarkable growth in the ${industry} space`, valueProp: `Our partnership with similar companies resulted in 40%+ revenue growth within 6 months`, socialProof: `Trusted by 500+ industry leaders including Fortune 500 companies`, ctaText: 'Schedule Partnership Discussion' }) }; const generator = contentGenerators[templateType] || contentGenerators.executive_summit; return generator(); } /** * Parse Ollama response into structured sections */ parseStructuredResponse(response, expectedSections) { const sections = {}; const lines = response.split('\n'); lines.forEach(line => { const match = line.match(/\[([^\]]+)\]:\s*(.+)/); if (match) { const [, key, value] = match; const camelKey = this.toCamelCase(key); // Handle different value formats if (value.includes('|')) { // Array values sections[camelKey] = value.split('|').map(v => v.trim()); } else if (value.includes(':')) { // Structured values (e.g., products with multiple properties) const parts = value.split('|'); if (parts.length > 1) { sections[camelKey] = parts.map(part => { const subParts = part.split(':'); if (subParts.length > 1) { return { name: subParts[0]?.trim(), value1: subParts[1]?.trim(), value2: subParts[2]?.trim(), value3: subParts[3]?.trim() }; } return part.trim(); }); } else { sections[camelKey] = value.trim(); } } else { // Simple string values sections[camelKey] = value.trim(); } } }); // Ensure all expected sections have at least a fallback value expectedSections.forEach(section => { if (!sections[section]) { sections[section] = this.generateFallbackForSection(section); } }); return sections; } /** * Convert snake_case to camelCase */ toCamelCase(str) { return str.toLowerCase().replace(/_([a-z])/g, (match, letter) => letter.toUpperCase()); } /** * Generate fallback content for a section */ generateFallbackForSection(section) { const fallbacks = { companyName: 'TechCorp Solutions', headline: 'Transform Your Business Today', subheadline: 'Discover innovative solutions for modern challenges', ctaText: 'Get Started', price: '$299', features: ['Advanced Analytics', 'Real-time Sync', 'Cloud Storage', 'Premium Support'], description: 'Experience the next generation of business solutions designed to accelerate your growth.', // Add more fallbacks as needed }; return fallbacks[section] || 'Content pending...'; } /** * Generate complete fallback content */ generateFallbackContent(sections) { const fallback = {}; sections.forEach(section => { fallback[section] = this.generateFallbackForSection(section); }); return fallback; } /** * Call Ollama API */ async callOllama(prompt) { try { const response = await axios.post(`${this.ollamaUrl}/api/generate`, { model: this.model, prompt: prompt, stream: false, options: { temperature: 0.7, top_p: 0.9, max_tokens: 500 } }); return response.data.response || ''; } catch (error) { console.error('Ollama API error:', error.message); throw error; } } /** * Get available template types */ getAvailableTemplates() { return Object.keys(this.templates).map(key => ({ id: key, name: this.templates[key].name, category: this.templates[key].category })); } /** * Generate email with specific template */ async generateEmail(templateType, context) { const structuredContent = await this.generateStructuredContent(templateType, context); return { templateType, sections: structuredContent.success ? structuredContent.sections : structuredContent.fallback, success: structuredContent.success, timestamp: new Date().toISOString() }; }
} module.exports = StructuredEmailGenerator;