/** * Server-side Email Template Renderer * Mirrors the client-side EmailTemplateRenderer for consistent email generation */ class ServerEmailTemplateRenderer { constructor() { this.templates = { professional_partnership: { name: 'Professional Partnership', color: '#10b981', components: ['header_banner', 'feature_grid', 'cta_button', 'testimonial'] }, modern_tech: { name: 'Modern Tech', color: '#3b82f6', components: ['header_banner', 'feature_grid', 'cta_button', 'testimonial'] }, enterprise_executive: { name: 'Enterprise Executive', color: '#7c3aed', components: ['header_banner', 'feature_grid', 'cta_button', 'testimonial'] }, creative_agency: { name: 'Creative Agency', color: '#f59e0b', components: ['header_banner', 'feature_grid', 'cta_button', 'testimonial'] }, finance_consulting: { name: 'Finance Consulting', color: '#059669', components: ['header_banner', 'feature_grid', 'cta_button', 'testimonial'] }, healthcare_innovation: { name: 'Healthcare Innovation', color: '#dc2626', components: ['header_banner', 'feature_grid', 'cta_button', 'testimonial'] } }; // Default values that match the React component this.defaults = { subject: 'Partnership Opportunity with {company}', greeting: 'Hi {name},', signature: 'Best regards,\n{senderName}\n{senderCompany}', customizations: { headerTitle: 'Transform Your Business with AI', mainHeading: 'Revolutionizing {company} with AI-Powered Solutions', buttonText: 'Schedule Your Free Demo', primaryColor: '#10b981', accentColor: '#047857', testimonialText: 'This solution transformed our operations. We saw remarkable results in just weeks.', testimonialAuthor: 'CEO, Industry Leader', features: ['40% Cost Reduction', '10x Faster Processing', '100% Compliance', 'Global Scalability'] } }; } /** * Generate HTML email using the same logic as React component */ generateHTML(templateId, customizations = {}, sampleData = {}) { const template = this.templates[templateId]; if (!template) { throw new Error(`Template not found: ${templateId}`); } const merged = this.mergeCustomizations(templateId, customizations); // Apply sample data substitutions const processedData = this.processVariables(merged, sampleData); return this.renderTemplate(templateId, processedData, template); } /** * Merge customizations with defaults (same logic as React component) */ mergeCustomizations(templateId, customizations) { const template = this.templates[templateId]; if (!template) { throw new Error(`Template not found: ${templateId}`); } return { subject: customizations.subject || this.defaults.subject, greeting: customizations.greeting || this.defaults.greeting, signature: customizations.signature || this.defaults.signature, customizations: { ...this.defaults.customizations, primaryColor: customizations.primaryColor || customizations.customizations?.primaryColor || template.color, accentColor: customizations.accentColor || customizations.customizations?.accentColor || this.adjustColorBrightness(template.color, -20), ...customizations.customizations } }; } /** * Process variables in text (same as React component) */ processVariables(data, sampleData) { const processed = JSON.parse(JSON.stringify(data)); // deep clone const replaceInString = (str) => { if (typeof str !== 'string') return str; return str .replace(/{name}/g, sampleData.name || 'Sarah') .replace(/{company}/g, sampleData.company || 'TechCorp') .replace(/{senderName}/g, sampleData.senderName || 'James Wilson') .replace(/{senderCompany}/g, sampleData.senderCompany || 'Your Company') .replace(/\\n/g, '\n'); }; const traverse = (obj) => { for (let key in obj) { if (typeof obj[key] === 'string') { obj[key] = replaceInString(obj[key]); } else if (typeof obj[key] === 'object' && obj[key] !== null) { traverse(obj[key]); } } }; traverse(processed); return processed; } /** * Render template HTML (mirrors React component logic) */ renderTemplate(templateId, data, template) { const { customizations } = data; return `
<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${data.subject}</title>
</head>
<body style="margin: 0; padding: 20px; background-color: #f5f5f5; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;"> <!-- Email Container --> <div style="max-width: 600px; margin: 0 auto; background: transparent; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 20px rgba(0,0,0,0.1);"> <!-- Subject Line Preview --> <div style="padding: 15px 25px; background: #f8f9fa; border-bottom: 1px solid #e9ecef;"> <p style="margin: 0; color: #6c757d; font-size: 14px;"><strong>Subject:</strong> ${data.subject}</p> </div> ${this.renderTemplateContent(templateId, data, template)} </div> <!-- Footer --> <div style="text-align: center; margin-top: 30px; color: #6c757d; font-size: 12px;"> <p style="margin: 0;">Generated with EmailTemplateRenderer</p> </div> </body>
</html>`; } /** * Render template-specific content */ renderTemplateContent(templateId, data, template) { const { customizations } = data; // Template-specific rendering switch (templateId) { case 'professional_partnership': return this.renderProfessionalPartnership(data, template); case 'modern_tech': return this.renderModernTech(data, template); default: return this.renderProfessionalPartnership(data, template); } } /** * Render Professional Partnership template */ renderProfessionalPartnership(data, template) { const { customizations } = data; return ` <!-- Header Banner --> <div style="background: linear-gradient(135deg, ${customizations.primaryColor} 0%, ${customizations.accentColor} 100%); padding: 40px 30px; text-align: center; color: white;"> <h1 style="margin: 0 0 10px 0; font-size: 28px; font-weight: bold;">${customizations.headerTitle}</h1> <p style="margin: 0; opacity: 0.9; font-size: 16px;">Cutting-edge solutions tailored for your industry</p> </div> <!-- Main Content --> <div style="padding: 40px 30px;"> <!-- Greeting --> <p style="margin: 0 0 20px 0; color: #333; font-size: 16px;">${data.greeting}</p> <!-- Main Heading --> <h2 style="margin: 0 0 20px 0; color: ${customizations.primaryColor}; font-size: 24px; font-weight: 600;">${customizations.mainHeading}</h2> <!-- Description --> <p style="margin: 0 0 30px 0; color: #555; line-height: 1.6; font-size: 16px;"> I noticed that your company is leading innovation in your industry. Our AI-powered platform has helped similar companies achieve remarkable results, and I believe we could deliver significant value to your organization. </p> <!-- Features Grid --> <table width="100%" cellpadding="0" cellspacing="0"> ${customizations.features.map(feature => ` <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #e9ecef; text-align: center;"> <div style="color: ${customizations.primaryColor}; font-weight: 600; font-size: 14px;">${feature}</div> </div> `).join('')} </div> <!-- CTA Button --> <div style="text-align: center; margin: 40px 0;"> <a href="#" style="display: inline-block; background: ${customizations.primaryColor}; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: 600; font-size: 16px;">${customizations.buttonText} →</a> </div> <!-- Testimonial --> <div style="background: #f8f9fa; border-left: 4px solid ${customizations.primaryColor}; padding: 20px; margin: 30px 0; border-radius: 0 8px 8px 0;"> <p style="margin: 0 0 10px 0; color: #666; font-style: italic; line-height: 1.5;">"${customizations.testimonialText}"</p> <p style="margin: 0; color: #999; font-size: 14px;">- ${customizations.testimonialAuthor}</p> </div> <!-- Signature --> <div style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #e9ecef;"> <div style="color: #555; line-height: 1.5; white-space: pre-line;">${data.signature}</div> </div> </div>`; } /** * Render Modern Tech template */ renderModernTech(data, template) { const { customizations } = data; return ` <!-- Header Banner --> <div style="background: linear-gradient(135deg, ${customizations.primaryColor} 0%, ${customizations.accentColor} 100%); padding: 40px 30px; text-align: center; color: white;"> <h1 style="margin: 0 0 10px 0; font-size: 32px; font-weight: 900; letter-spacing: -0.5px;">${customizations.headerTitle}</h1> <p style="margin: 0; opacity: 0.9; font-size: 18px;">Next-generation technology for modern businesses</p> </div> <!-- Main Content --> <div style="padding: 40px 30px;"> <!-- Greeting --> <p style="margin: 0 0 20px 0; color: #333; font-size: 16px;">${data.greeting}</p> <!-- Main Heading --> <h2 style="margin: 0 0 20px 0; color: ${customizations.primaryColor}; font-size: 28px; font-weight: 700;">${customizations.mainHeading}</h2> <!-- Description --> <p style="margin: 0 0 30px 0; color: #555; line-height: 1.6; font-size: 17px;"> Transform your business with cutting-edge AI technology. Our platform delivers measurable results and positions you ahead of the competition. </p> <!-- Features Grid --> <table width="100%" cellpadding="0" cellspacing="0"> ${customizations.features.map(feature => ` <div style="background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%); padding: 25px 20px; border-radius: 12px; border: 1px solid #e2e8f0; text-align: center; box-shadow: 0 2px 8px rgba(0,0,0,0.05);"> <div style="color: ${customizations.primaryColor}; font-weight: 700; font-size: 16px;">${feature}</div> </div> `).join('')} </div> <!-- CTA Button --> <div style="text-align: center; margin: 40px 0;"> <a href="#" style="display: inline-block; background: linear-gradient(135deg, ${customizations.primaryColor} 0%, ${customizations.accentColor} 100%); color: white; padding: 18px 36px; text-decoration: none; border-radius: 12px; font-weight: 600; font-size: 17px; box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);">${customizations.buttonText} →</a> </div> <!-- Testimonial --> <div style="background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%); border-left: 4px solid ${customizations.primaryColor}; padding: 25px; margin: 30px 0; border-radius: 0 12px 12px 0;"> <p style="margin: 0 0 12px 0; color: #666; font-style: italic; line-height: 1.6; font-size: 16px;">"${customizations.testimonialText}"</p> <p style="margin: 0; color: #999; font-size: 14px; font-weight: 500;">- ${customizations.testimonialAuthor}</p> </div> <!-- Signature --> <div style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #e2e8f0;"> <div style="color: #555; line-height: 1.5; white-space: pre-line;">${data.signature}</div> </div> </div>`; } /** * Utility function to adjust color brightness */ adjustColorBrightness(hex, percent) { // Remove # if present hex = hex.replace('#', ''); // Parse r, g, b values const num = parseInt(hex, 16); const amt = Math.round(2.55 * percent); const R = (num >> 16) + amt; const G = (num >> 8 & 0x00FF) + amt; const B = (num & 0x0000FF) + amt; return '#' + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)) .toString(16).slice(1); } /** * Generate plain text version (for email clients that don't support HTML) */ generatePlainText(templateId, customizations = {}, sampleData = {}) { const merged = this.mergeCustomizations(templateId, customizations); const processedData = this.processVariables(merged, sampleData); let content = ''; content += `${processedData.subject}\n\n`; content += `${processedData.greeting}\n\n`; content += `${processedData.customizations.mainHeading}\n\n`; content += `I noticed that your company is leading innovation in your industry. Our AI-powered platform has helped similar companies achieve remarkable results, and I believe we could deliver significant value to your organization.\n\n`; content += `Key Features:\n`; processedData.customizations.features.forEach(feature => { content += `• ${feature}\n`; }); content += `\n`; content += `${processedData.customizations.buttonText}\n\n`; content += `"${processedData.customizations.testimonialText}"\n`; content += `- ${processedData.customizations.testimonialAuthor}\n\n`; content += `${processedData.signature}`; return content; }
} module.exports = ServerEmailTemplateRenderer;