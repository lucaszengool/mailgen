/** * - Ollama */ const axios = require('axios');
const EmailTemplateService = require('./EmailTemplateService');
const ModernEmailTemplates = require('./ModernEmailTemplates');
const PremiumEmailTemplates = require('./PremiumEmailTemplates');
const PremiumEmailTemplates2025 = require('./PremiumEmailTemplates2025');
const ServerEmailTemplateRenderer = require('./ServerEmailTemplateRenderer'); class PersonalizedEmailGenerator { constructor() { this.ollamaUrl = process.env.OLLAMA_URL || 'http://localhost:11434'; this.emailModel = 'qwen2.5:0.5b'; // this.templateService = new EmailTemplateService(); this.modernTemplates = new ModernEmailTemplates(); this.premiumTemplates = new PremiumEmailTemplates(); this.premiumTemplates2025 = new PremiumEmailTemplates2025(); this.serverRenderer = new ServerEmailTemplateRenderer(); // Consistent template rendering // Template rotation counter for automatic template rotation this.templateRotationIndex = 0; this.availableTemplates = this.getAllAvailableTemplates(); console.log(' Personal Email Generator initialized'); console.log(' AI Model: qwen2.5:0.5b (fast high-quality email generation)'); console.log(' Templates: Premium 2025 + Modern + Legacy templates loaded'); console.log(` Template Rotation: ${this.availableTemplates.length} templates available`); console.log(' Personalization: Deep industry & role-based customization'); console.log(' Styling: High-end 2024 design trends with dark mode support'); } /** * - */ getAllAvailableTemplates() { const templateNames = [ // Primary templates 'partnership_outreach', 'initial_contact', 'cold_outreach', 'value_demonstration', 'problem_solution', 'follow_up', 'social_proof', 'professional_introduction', 'value_proposition', // Extended template set 'first_contact', 'trust_building', 'demo_meeting', 'free_value', 'first_followup', // Specialized templates 'aida_attention_grabber', 'pas_pain_agitation', 'before_after_bridge', 'problem_identification', 'value_stack_offer', 'scarcity_urgency', 'social_proof_testimonial', 'executive_pitch', 'startup_founder', 'enterprise_decision_maker', 'technical_professional', 'marketing_professional', 'operations_manager', 'procurement_specialist', // Goal-specific templates 'sales_focused', 'lead_generation', 'brand_awareness', 'customer_retention', 'product_launch', 'event_invitation', 'content_sharing', 'survey_feedback', 'webinar_invitation', 'case_study_share' ]; console.log(` Template Rotation Pool: ${templateNames.length} templates loaded`); return templateNames; } /** * */ getTemplateVariations(baseTemplate) { const templateVariations = { 'partnership_outreach': [ 'partnership_outreach', 'partnership_proposal', 'strategic_partnership', 'collaboration_opportunity', 'mutual_benefit_partnership', 'business_alliance_proposal' ], 'cold_outreach': [ 'cold_outreach', 'initial_contact', 'first_contact', 'professional_introduction', 'business_introduction', 'aida_attention_grabber' ], 'value_demonstration': [ 'value_demonstration', 'value_proposition', 'before_after_bridge', 'value_stack_offer', 'problem_solution', 'free_value' ], 'follow_up': [ 'follow_up', 'first_followup', 'gentle_reminder', 'value_reinforcement', 'relationship_building', 'trust_building' ], 'sales_focused': [ 'sales_focused', 'sales_pitch', 'direct_sales', 'scarcity_urgency', 'demo_meeting', 'enterprise_decision_maker' ], 'social_proof': [ 'social_proof', 'social_proof_testimonial', 'case_study_share', 'success_story', 'client_testimonial', 'industry_validation' ] }; return templateVariations[baseTemplate] || [baseTemplate]; } /** * Generate subject line from structured content */ generateSubjectFromStructured(sections, templateType) { // Different templates have different subject patterns const subjectMappings = { executive_summit: () => `${sections.companyName || 'Partnership'} Executive Meeting - ${sections.headline || 'Strategic Opportunity'}`, tech_startup_vibrant: () => ` ${sections.startupName || 'TechStart'} - ${sections.mainHeadline || 'The Future is Here'}`, luxury_brand: () => `${sections.brandName || 'LUXE'} - ${sections.collection || 'Premium Collection'} Now Available`, saas_modern: () => `${sections.saasName || 'CloudSync'} - ${sections.mainHeading || 'Accelerate Your Workflow'}`, ecommerce_flash: () => ` ${sections.discount || '70% OFF'} - ${sections.saleHeadline || 'BIGGEST SALE'} - ${sections.timeLeft || 'LIMITED TIME'}`, minimalist_creative: () => `${sections.headline || 'Think Different'}`, cyberpunk_neon: () => `[SYSTEM] ${sections.title || 'CYBER_2077'} - Mission Briefing`, wellness_health: () => `${sections.headline || 'Your Journey to Wellness'} - Start Today`, financial_dashboard: () => `${sections.companyName || 'FinanceHub'} - Portfolio Update (+${sections.returns || '24.8%'})`, gaming_tournament: () => ` ${sections.tournamentName || 'ULTIMATE CHAMPIONSHIP'} - ${sections.prizePool || '$100K'} Prize Pool` }; const generator = subjectMappings[templateType] || (() => `${sections.headline || sections.companyName || 'Business Opportunity'}`); return generator(); } /** * Format structured email body for text version */ formatStructuredEmailBody(sections, templateType) { // Generate clean text version let body = ''; if (sections.headline) { body += `${sections.headline}\n\n`; } if (sections.description || sections.mainDescription) { body += `${sections.description || sections.mainDescription}\n\n`; } if (sections.features && Array.isArray(sections.features)) { body += 'Key Features:\n'; sections.features.forEach(feature => { body += `• ${feature}\n`; }); body += '\n'; } if (sections.ctaText || sections.primaryCta) { body += `${sections.ctaText || sections.primaryCta}\n\n`; } body += 'Best regards,\nThe Team'; return body; } /** * Format structured email HTML - This creates a beautiful HTML email */ formatStructuredEmailHTML(sections, templateType) { // Template-specific HTML generators const htmlGenerators = { executive_summit: (s) => this.generateExecutiveHTML(s), tech_startup_vibrant: (s) => this.generateTechStartupHTML(s), luxury_brand: (s) => this.generateLuxuryHTML(s), saas_modern: (s) => this.generateSaaSHTML(s), ecommerce_flash: (s) => this.generateEcommerceHTML(s), // Add more as needed... }; const generator = htmlGenerators[templateType] || ((s) => this.generateGenericHTML(s)); return generator(sections); } /** * Generate Executive Summit HTML template */ generateExecutiveHTML(sections) { return ` <div style="font-family: 'Segoe UI', Arial, sans-serif; max-width: 600px; margin: 0 auto; background: linear-gradient(135deg, #1e293b 0%, #334155 100%);"> <!-- Header --> <div style="background: linear-gradient(135deg, #4338ca 0%, #7c3aed 100%); padding: 40px 30px; text-align: center; color: white;"> <h1 style="margin: 0; font-size: 32px; font-weight: bold;">${sections.companyName || 'Elite Corp'}</h1> <p style="margin: 10px 0 0 0; opacity: 0.9;">${sections.tagline || 'Transforming Business Excellence'}</p> </div> <!-- Main Content --> <div style="background: transparent; padding: 50px 40px;"> <h2 style="color: #1e293b; font-size: 36px; margin: 0 0 20px 0; line-height: 1.2;">${sections.headline || 'Revolutionary Partnership Opportunity'}</h2> <p style="color: #475569; font-size: 18px; line-height: 1.6; margin-bottom: 30px;">${sections.subheadline || 'Join the top 1% of industry leaders'}</p> <!-- Metrics --> <div style="background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%); border-radius: 12px; padding: 30px; margin: 30px 0; text-align: center;"> <div> <div style="color: #4338ca; font-size: 32px; font-weight: bold;">${sections.metric1 || '450%'}</div> <div style="color: #64748b; font-size: 14px;">ROI Increase</div> </div> <div> <div style="color: #059669; font-size: 32px; font-weight: bold;">${sections.metric2 || '$12M'}</div> <div style="color: #64748b; font-size: 14px;">Revenue Growth</div> </div> <div> <div style="color: #dc2626; font-size: 32px; font-weight: bold;">${sections.metric3 || '89%'}</div> <div style="color: #64748b; font-size: 14px;">Success Rate</div> </div> </div> <!-- CTA --> <div style="text-align: center; margin: 40px 0;"> <a href="${sections.websiteUrl || '#'}" style="display: inline-block; padding: 18px 40px; background: linear-gradient(135deg, #4338ca 0%, #7c3aed 100%); color: white; text-decoration: none; border-radius: 12px; font-weight: bold; font-size: 16px; box-shadow: 0 10px 25px rgba(67, 56, 202, 0.3);">${sections.ctaText || 'Schedule Executive Meeting'}</a> </div> </div> <!-- Footer --> <div style="background: #1e293b; padding: 30px; text-align: center; color: #94a3b8;"> <p style="margin: 0;">Best regards,<br><strong style="color: white;">Executive Team</strong></p> </div> </div>`; } /** * Generate personalized HTML combining template structure with Ollama content */ generatePersonalizedHTML(sections, templateType, personalizedContent) { // Split personalized content into paragraphs const paragraphs = personalizedContent.split('\n').filter(p => p.trim()); const mainBody = paragraphs.slice(1, -2).join('\n'); // Skip greeting and closing // Map template types to specific HTML generators with personalized content const templateGenerators = { 'executive_summit': () => this.generateExecutivePersonalizedHTML(sections, mainBody), 'tech_startup_vibrant': () => this.generateTechStartupPersonalizedHTML(sections, mainBody), 'luxury_brand': () => this.generateLuxuryPersonalizedHTML(sections, mainBody), 'saas_modern': () => this.generateSaaSPersonalizedHTML(sections, mainBody), 'ecommerce_flash': () => this.generateEcommercePersonalizedHTML(sections, mainBody), 'food_delivery': () => this.generateFoodDeliveryPersonalizedHTML(sections, mainBody), 'default': () => this.generateDefaultPersonalizedHTML(sections, personalizedContent) }; const generator = templateGenerators[templateType] || templateGenerators['default']; return generator(); } /** * Generate Executive personalized HTML */ generateExecutivePersonalizedHTML(sections, mainBody) { return ` <div style="font-family: 'Segoe UI', Arial, sans-serif; max-width: 600px; margin: 0 auto; background: linear-gradient(135deg, #1e293b 0%, #334155 100%);"> <!-- Header --> <div style="background: linear-gradient(135deg, #4338ca 0%, #7c3aed 100%); padding: 40px 30px; text-align: center; color: white;"> <h1 style="margin: 0; font-size: 32px; font-weight: bold;">${sections.companyName || 'Elite Corp'}</h1> <p style="margin: 10px 0 0 0; opacity: 0.9;">Transforming Business Excellence</p> </div> <!-- Main Content --> <div style="background: transparent; padding: 50px 40px;"> <h2 style="color: #1e293b; font-size: 36px; margin: 0 0 20px 0; line-height: 1.2;">Partnership Opportunity with ${sections.recipientCompany}</h2> <!-- Personalized Content --> <div style="color: #475569; font-size: 16px; line-height: 1.8; margin: 30px 0;"> ${mainBody.split('\n').map(p => p.trim() ? `<p style="margin-bottom: 15px;">${p}</p>` : '').join('')} </div> <!-- CTA --> <div style="text-align: center; margin: 40px 0;"> <a href="${sections.websiteUrl || '#'}" style="display: inline-block; padding: 18px 40px; background: linear-gradient(135deg, #4338ca 0%, #7c3aed 100%); color: white; text-decoration: none; border-radius: 12px; font-weight: bold; font-size: 16px; box-shadow: 0 10px 25px rgba(67, 56, 202, 0.3);">Schedule Executive Meeting</a> </div> </div> <!-- Footer --> <div style="background: #1e293b; padding: 30px; text-align: center; color: #94a3b8;"> <p style="margin: 0;">Best regards,<br><strong style="color: white;">${sections.senderName}</strong><br>${sections.companyName}</p> </div> </div>`; } /** * Generate Food Delivery personalized HTML */ generateFoodDeliveryPersonalizedHTML(sections, mainBody) { return ` <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;"> <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center; color: white;"> <h1>${sections.headline || 'Revolutionary Food Technology Partnership'}</h1> </div> <div style="padding: 30px; background: transparent;"> <div style="color: #333; font-size: 16px; line-height: 1.6;"> ${mainBody.split('\n').map(p => p.trim() ? `<p>${p}</p>` : '').join('')} </div> <div style="text-align: center; margin-top: 30px;"> <a href="${sections.websiteUrl || '#'}" style="display: inline-block; padding: 15px 30px; background: #667eea; color: white; text-decoration: none; border-radius: 5px; font-weight: bold;">Schedule Meeting</a> </div> <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; color: #666;"> <p>Best regards,<br><strong>${sections.senderName}</strong><br>${sections.companyName}</p> </div> </div> </div>`; } /** * Generate default personalized HTML */ generateDefaultPersonalizedHTML(sections, personalizedContent) { return ` <div style="font-family: 'Segoe UI', Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;"> <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; border-radius: 10px 10px 0 0; text-align: center; color: white;"> <h1 style="margin: 0;">${sections.companyName}</h1> </div> <div style="background: transparent; padding: 30px; border: 1px solid #e5e7eb; border-top: none;"> ${personalizedContent.split('\n').map(p => p.trim() ? `<p style="margin-bottom: 15px; line-height: 1.6;">${p}</p>` : '').join('')} </div> </div>`; } /** * Generate Tech Startup personalized HTML */ generateTechStartupPersonalizedHTML(sections, mainBody) { return ` <div style="font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif; max-width: 600px; margin: 0 auto; background: black; color: white;"> <!-- Header --> <div style="background: linear-gradient(135deg, #8b5cf6 0%, #ec4899 100%); padding: 40px 30px; text-align: center;"> <h1 style="margin: 0; font-size: 32px; font-weight: 900;">${sections.companyName}</h1> <p style="margin: 10px 0 0 0; opacity: 0.9;">Disrupting the Future</p> </div> <!-- Main Content --> <div style="padding: 50px 40px;"> <h2 style="font-size: 36px; font-weight: 900; margin: 0 0 20px 0; background: linear-gradient(45deg, #06b6d4, #8b5cf6, #ec4899); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">Partnership with ${sections.recipientCompany}</h2> <div style="color: #d1d5db; font-size: 16px; line-height: 1.8; margin: 30px 0;"> ${mainBody.split('\n').map(p => p.trim() ? `<p style="margin-bottom: 15px;">${p}</p>` : '').join('')} </div> <!-- CTA --> <div style="text-align: center; margin: 50px 0;"> <a href="${sections.websiteUrl || '#'}" style="display: inline-block; padding: 20px 50px; background: linear-gradient(135deg, #06b6d4 0%, #8b5cf6 100%); color: white; text-decoration: none; border-radius: 15px; font-weight: bold; font-size: 18px;">Start Free Trial</a> </div> </div> <!-- Footer --> <div style="background: rgba(17, 24, 39, 0.8); padding: 30px 40px; border-top: 1px solid #374151; text-align: center;"> <p style="color: #06b6d4; margin: 0;">Best regards,<br><strong>${sections.senderName}</strong><br>${sections.companyName}</p> </div> </div>`; } /** * Generate Luxury personalized HTML */ generateLuxuryPersonalizedHTML(sections, mainBody) { return this.generateDefaultPersonalizedHTML(sections, mainBody); } /** * Generate SaaS personalized HTML */ generateSaaSPersonalizedHTML(sections, mainBody) { return this.generateDefaultPersonalizedHTML(sections, mainBody); } /** * Generate Ecommerce personalized HTML */ generateEcommercePersonalizedHTML(sections, mainBody) { return this.generateDefaultPersonalizedHTML(sections, mainBody); } /** * Generate Tech Startup HTML template */ generateTechStartupHTML(sections) { return ` <div style="font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif; max-width: 600px; margin: 0 auto; background: black; color: white;"> <!-- Header --> <div style="background: linear-gradient(135deg, #8b5cf6 0%, #ec4899 100%); padding: 40px 30px; text-align: center;"> <h1 style="margin: 0; font-size: 32px; font-weight: 900; background: linear-gradient(45deg, #fbbf24, #f59e0b); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">${sections.startupName || 'TechVenture Labs'}</h1> <p style="margin: 10px 0 0 0; opacity: 0.9;">${sections.startupMission || 'Disrupting the Future'}</p> </div> <!-- Main Content --> <div style="padding: 50px 40px;"> <div style="display: inline-block; padding: 8px 20px; background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%); border-radius: 25px; margin-bottom: 30px; font-size: 14px; font-weight: bold;"> ${sections.badge || 'LAUNCHING NOW'}</div> <h2 style="font-size: 48px; font-weight: 900; margin: 0 0 20px 0; background: linear-gradient(45deg, #06b6d4, #8b5cf6, #ec4899); -webkit-background-clip: text; -webkit-text-fill-color: transparent; line-height: 1.1;">${sections.mainHeadline || 'The Future is Here'}</h2> <p style="color: #d1d5db; font-size: 20px; line-height: 1.6; margin-bottom: 40px;">${sections.mainDescription || 'Join 10,000+ innovators transforming business'}</p> <!-- Features Grid --> <table width="100%" cellpadding="0" cellspacing="0"> ${(sections.features || ['AI-Powered', 'Real-Time', 'Cloud Native', 'Zero Config']).slice(0, 4).map(feature => `<div style="background: rgba(59, 130, 246, 0.1); border: 1px solid rgba(59, 130, 246, 0.3); border-radius: 12px; padding: 20px; text-align: center;"> <div style="font-weight: bold; color: #06b6d4;">${feature}</div> </div>` ).join('')} </div> <!-- CTA --> <div style="text-align: center; margin: 50px 0;"> <a href="${sections.websiteUrl || '#'}" style="display: inline-block; padding: 20px 50px; background: linear-gradient(135deg, #06b6d4 0%, #8b5cf6 100%); color: white; text-decoration: none; border-radius: 15px; font-weight: bold; font-size: 18px; box-shadow: 0 0 30px rgba(6, 182, 212, 0.5);">${sections.mainCta || 'Start Free Trial'}</a> </div> </div> <!-- Tech Stack --> <div style="background: rgba(17, 24, 39, 0.8); padding: 30px 40px; border-top: 1px solid #374151;"> <h3 style="color: #06b6d4; margin: 0 0 20px 0;">Powered By</h3> <div style=" flex-wrap: wrap; "> ${(sections.techStack || ['React', 'Node.js', 'AWS', 'GraphQL', 'Docker']).slice(0, 5).map(tech => `<span style="padding: 8px 16px; background: rgba(6, 182, 212, 0.1); border: 1px solid rgba(6, 182, 212, 0.3); border-radius: 8px; font-family: 'Monaco', monospace; font-size: 12px; color: #06b6d4;">${tech}</span>` ).join('')} </div> </div> </div>`; } /** * Generate generic HTML for unsupported templates */ generateGenericHTML(sections) { return ` <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background: transparent;"> <div style="background: #f8f9fa; padding: 30px; text-align: center;"> <h1 style="color: #333; margin: 0;">${sections.headline || sections.companyName || 'Business Update'}</h1> </div> <div style="padding: 30px;"> <p style="color: #666; line-height: 1.6;">${sections.description || sections.mainDescription || 'We have an exciting opportunity to share with you.'}</p> ${sections.features && Array.isArray(sections.features) ? ` <h3 style="color: #333;">Key Features:</h3> <ul style="color: #666;"> ${sections.features.map(feature => `<li>${feature}</li>`).join('')} </ul> ` : ''} <div style="text-align: center; margin: 30px 0;"> <a href="${sections.websiteUrl || '#'}" style="display: inline-block; padding: 12px 30px; background: #007bff; color: white; text-decoration: none; border-radius: 6px;">${sections.ctaText || sections.primaryCta || 'Learn More'}</a> </div> </div> </div>`; } /** * - 36fancy */ selectTemplateWithRotation(preferredTemplate = null, enableRotation = true) { console.log(` DEBUG: selectTemplateWithRotation called with preferredTemplate: ${preferredTemplate}`); // Get available 36 fancy structured templates const StructuredEmailGenerator = require('./StructuredEmailGenerator'); const structuredGenerator = new StructuredEmailGenerator(); const fancyTemplates = structuredGenerator.getAvailableTemplates().map(t => t.id); // preferredTemplate'auto'nullfancy if (!preferredTemplate || preferredTemplate === 'auto' || preferredTemplate === 'rotate') { if (enableRotation && fancyTemplates.length > 0) { // Use fancy templates for rotation const rotationIndex = this.templateRotationIndex % fancyTemplates.length; const selectedTemplate = fancyTemplates[rotationIndex]; console.log(` Fancy: ${selectedTemplate} (${rotationIndex + 1}/${fancyTemplates.length})`); // this.templateRotationIndex = (this.templateRotationIndex + 1) % fancyTemplates.length; return selectedTemplate; } return fancyTemplates[0] || 'executive_summit'; // Default to first fancy template } // console.log(` : ${preferredTemplate}`); // if (enableRotation) { const variations = this.getTemplateVariations(preferredTemplate); if (variations.length > 1) { // if (!this.templateRotationIndices) { this.templateRotationIndices = {}; } if (!(preferredTemplate in this.templateRotationIndices)) { this.templateRotationIndices[preferredTemplate] = 0; } const currentIndex = this.templateRotationIndices[preferredTemplate]; const selectedTemplate = variations[currentIndex]; console.log(` ${preferredTemplate} : ${selectedTemplate} (${currentIndex + 1}/${variations.length})`); this.templateRotationIndices[preferredTemplate] = (this.templateRotationIndices[preferredTemplate] + 1) % variations.length; return selectedTemplate; } } return preferredTemplate; } /** * prospect - */ async generatePersonalizedEmail(prospect, businessAnalysis, marketingStrategy, campaignGoal = 'partnership', templateData = null) { console.log(` ${prospect.email} ...`); try { // SPECIAL CASE: Handle user-selected and user-edited template if ((campaignGoal === 'user_template' || templateData?.isCustomized || templateData?.components || templateData?.html) && templateData) { console.log(' Using user-selected template with user edits'); console.log(' DEBUG: User template data keys:', Object.keys(templateData)); console.log(' DEBUG: Template has components:', !!templateData.components); console.log(' DEBUG: Template has HTML:', !!templateData.html); console.log(' DEBUG: Template is customized:', !!templateData.isCustomized); console.log(' DEBUG: Campaign goal:', campaignGoal); return this.generateEmailFromUserTemplate(prospect, businessAnalysis, marketingStrategy, templateData); } // - const selectedTemplate = this.selectTemplateWithRotation(prospect.preferredTemplate, true); console.log(` : ${selectedTemplate}`); // STEP 1: Generate personalized content using Ollama console.log(` Generating personalized content with Ollama...`); const persona = prospect.persona || {}; // Use custom template data if provided, otherwise fallback to defaults const customizations = templateData?.customizations || {}; const senderName = prospect.templateData?.senderName || businessAnalysis?.senderInfo?.senderName || 'James Wilson'; const companyName = businessAnalysis?.companyName || 'FruitAI'; const prospectName = prospect.name || prospect.email.split('@')[0].replace(/[^a-zA-Z]/g, ' ').trim(); const prospectCompany = prospect.company || prospect.email.split('@')[1].split('.')[0]; // Apply custom greeting and subject if provided const customGreeting = templateData?.greeting || customizations.greeting || 'Hi {name},'; const customSubject = templateData?.subject || customizations.subject || ''; const customSignature = templateData?.signature || customizations.signature || ''; console.log(` Using ${templateData?.isCustomized ? 'CUSTOMIZED' : 'DEFAULT'} template properties`); // Build personalized prompt for Ollama with custom properties const promptCustomizations = templateData?.isCustomized ? `
TEMPLATE CUSTOMIZATIONS:
- Header Title: ${customizations.headerTitle || 'Transform Your Business with AI'}
- Main Heading: ${customizations.mainHeading || 'Partnership Opportunity with {company}'}
- CTA Button Text: ${customizations.buttonText || 'Schedule Your Free Demo'}
- Primary Color: ${customizations.primaryColor || '#10b981'}
- Custom Greeting: ${customGreeting}
- Custom Signature: ${customSignature}
${customizations.testimonialText ? `- Include Testimonial: "${customizations.testimonialText}" - ${customizations.testimonialAuthor}` : ''}
` : ''; const prompt = `Write a professional business partnership email using the following specifications: ${promptCustomizations}RECIPIENT:
- Name: ${prospectName}
- Company: ${prospectCompany}
- Email: ${prospect.email}
- Role: ${persona.estimatedRole || 'Executive'} OUR COMPANY:
- Company: ${companyName}
- Sender: ${senderName}
- Industry: ${businessAnalysis?.industry || 'Food Technology'}
- Product: ${businessAnalysis?.mainProducts?.[0]?.title || 'AI-powered solutions'} Write a personalized email that:
1. Addresses ${prospectName} personally
2. References ${prospectCompany}'s business
3. Explains how ${companyName} can help them
4. Includes specific benefits (2-3 points)
5. Has a clear call-to-action
6. Is 150-200 words IMPORTANT: Write the complete email body only. No subject line. Use real names, not placeholders. Email:`; // Call Ollama to generate personalized content let personalizedContent = ''; try { const response = await axios.post(`${this.ollamaUrl}/api/generate`, { model: this.emailModel, prompt: prompt, stream: false, options: { temperature: 0.7, top_p: 0.9, max_tokens: 500 } }); personalizedContent = response.data.response || ''; // CRITICAL FIX: Aggressively remove any SUBJECT: lines that Ollama might generate personalizedContent = personalizedContent .replace(/^SUBJECT:\s*.*$/mi, '') // Remove subject at start (multiline) .replace(/\nSUBJECT:\s*.*$/gmi, '') // Remove anywhere else (multiline) .replace(/^Subject:\s*.*$/mi, '') // Case variations .replace(/\nSubject:\s*.*$/gmi, '') // Case variations .replace(/Partnership Opportunity.*?\n/gi, '') // Remove common subject patterns .replace(/Revolutionary.*?Partnership\s*\n/gi, '') // Remove specific subjects .replace(/^\s*\n+/, '') // Remove leading empty lines .replace(/\n\s*\n+/g, '\n\n') // Normalize line breaks .trim(); console.log(` Generated personalized content (${personalizedContent.length} chars)`); } catch (ollamaError) { console.log(` Ollama generation failed, using fallback content`); personalizedContent = `Dear ${prospectName}, I hope this message finds you well. I'm reaching out from ${companyName} because I believe we can help ${prospectCompany} achieve remarkable results in your industry. Our ${businessAnalysis?.mainProducts?.[0]?.title || 'AI-powered platform'} has helped similar companies:
• Increase efficiency by 40%
• Reduce operational costs by 25%
• Improve customer satisfaction scores by 35% ${prospectCompany}'s focus on innovation makes you an ideal partner for our solutions. We've specifically designed features that address the unique challenges in your sector. I'd love to schedule a brief 15-minute call to discuss how ${companyName} can support ${prospectCompany}'s growth objectives. Are you available this week for a quick conversation? Best regards,
${senderName}
${companyName}`; } // STEP 1.5: Check if we should use consistent template rendering if (templateData && templateData.isCustomized) { console.log(` Using ServerEmailTemplateRenderer for consistent customized template`); // Map the selected template to one supported by ServerEmailTemplateRenderer const templateMapping = { 'professional_partnership': 'professional_partnership', 'modern_tech': 'modern_tech', 'enterprise_executive': 'enterprise_executive', 'creative_agency': 'creative_agency', 'finance_consulting': 'finance_consulting', 'healthcare_innovation': 'healthcare_innovation' }; const rendererTemplateId = templateMapping[templateData.templateId] || templateMapping[selectedTemplate]; if (!rendererTemplateId) { throw new Error(`No template mapping found for templateId: ${templateData.templateId || selectedTemplate}`); } console.log(` Mapping ${templateData.templateId || selectedTemplate} -> ${rendererTemplateId}`); // Create sample data for template rendering const sampleData = { name: prospectName, company: prospectCompany, senderName: senderName, senderCompany: companyName }; // Generate HTML using consistent template renderer const htmlContent = this.serverRenderer.generateHTML(rendererTemplateId, templateData, sampleData); const plainTextContent = this.serverRenderer.generatePlainText(rendererTemplateId, templateData, sampleData); // Use custom subject if provided, otherwise use processed default const emailSubject = (templateData.subject || this.serverRenderer.defaults.subject) .replace(/{company}/g, prospectCompany) .replace(/{name}/g, prospectName); const finalEmail = { subject: emailSubject, body: htmlContent, plainText: plainTextContent, template_used: rendererTemplateId, content_type: 'html', customized: true }; console.log(` Consistent template email generated with customizations`); console.log(` Template: ${rendererTemplateId}`); console.log(` Subject: ${emailSubject}`); return { success: true, email: finalEmail, metadata: { template_type: rendererTemplateId, customized: true, generated_at: new Date().toISOString(), method: 'consistent_renderer' } }; } // STEP 2: Use structured email generator with personalized content const StructuredEmailGenerator = require('./StructuredEmailGenerator'); const structuredGenerator = new StructuredEmailGenerator(); console.log(` Using structured template generation for: ${selectedTemplate}`); // Map template names from TemplatePromptService to StructuredEmailGenerator const templateMapping = { 'professional_partnership': 'partnership_outreach', 'business_partnership': 'partnership_outreach', 'casual_partnership': 'partnership_outreach', 'formal_partnership': 'partnership_outreach' }; const mappedTemplate = templateMapping[selectedTemplate] || selectedTemplate; console.log(` Template mapping: ${selectedTemplate} → ${mappedTemplate}`); // Parse the personalized content to extract key parts const contentLines = personalizedContent.split('\n').filter(line => line.trim()); const headline = `Strategic Collaboration with ${prospectCompany}`; const mainContent = personalizedContent; // Generate structured content with personalized data const structuredResult = await structuredGenerator.generateEmail(mappedTemplate, { companyName: companyName, prospectName: prospectName, prospectCompany: prospectCompany, industry: businessAnalysis?.industry || 'Technology', targetAudience: prospectName, campaignGoal: campaignGoal, product: businessAnalysis?.mainProducts?.[0]?.title || 'AI Solutions', prospectEmail: prospect.email, senderName: senderName, personalizedContent: personalizedContent, headline: headline, websiteUrl: businessAnalysis?.targetWebsite || businessAnalysis?.website || businessAnalysis?.companyWebsite || 'https://yourcompany.com' }); if (structuredResult.success) { // Merge personalized content into template sections const websiteUrl = businessAnalysis?.targetWebsite || businessAnalysis?.website || businessAnalysis?.companyWebsite || 'https://yourcompany.com'; const enhancedSections = { ...structuredResult.sections, personalizedBody: personalizedContent, recipientName: prospectName, recipientCompany: prospectCompany, senderName: senderName, companyName: companyName, websiteUrl: websiteUrl }; console.log(` CTA URL set to: ${websiteUrl}`); // Generate subject with personalization const subject = `${prospectCompany} - ${headline}`; // Return structured email with personalized content return { success: true, email: { subject: subject, body: personalizedContent, // Use the actual personalized content html: this.generatePersonalizedHTML(enhancedSections, selectedTemplate, personalizedContent), template_used: selectedTemplate, template_type: 'structured_fancy', sections: enhancedSections, performance_score: 95, sent_at: new Date().toISOString(), recipient_email: prospect.email, sender_name: senderName, sender_email: businessAnalysis?.senderInfo?.senderEmail || 'fruitaiofficial@gmail.com' } }; } else { // Fallback with personalized content console.log(` Structured generation failed, using personalized fallback`); return { success: true, email: { subject: this.generateUniqueSubject(prospect, businessAnalysis, selectedTemplate), body: personalizedContent, html: `<div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;"> ${personalizedContent.split('\n').map(p => p.trim() ? `<p>${p}</p>` : '').join('')} </div>`, template_used: selectedTemplate, template_type: 'structured_fancy', sections: { companyName: companyName, personalizedBody: personalizedContent }, performance_score: 85, sent_at: new Date().toISOString(), recipient_email: prospect.email, sender_name: senderName, sender_email: businessAnalysis?.senderInfo?.senderEmail || 'fruitaiofficial@gmail.com' } }; } } catch (error) { console.error(` Email generation failed:`, error.message); // Return fallback with basic personalization const fallbackName = prospect.name || 'Business Partner'; const fallbackCompany = prospect.company || 'Your Company'; return { success: true, email: { subject: this.generateUniqueSubject(prospect, businessAnalysis, 'fallback'), body: `Dear ${fallbackName},\n\nWe have an exciting business opportunity to discuss with ${fallbackCompany}.\n\nBest regards,\n${businessAnalysis?.senderInfo?.senderName || 'The Team'}`, html: `<p>Dear ${fallbackName},</p><p>We have an exciting business opportunity to discuss with ${fallbackCompany}.</p><p>Best regards,<br>${businessAnalysis?.senderInfo?.senderName || 'The Team'}</p>`, template_used: 'fallback', template_type: 'structured_fancy', sections: { companyName: businessAnalysis?.companyName || 'FruitAI' }, performance_score: 70, sent_at: new Date().toISOString(), recipient_email: prospect.email, sender_name: businessAnalysis?.senderInfo?.senderName || 'The Team', sender_email: businessAnalysis?.senderInfo?.senderEmail || 'fruitaiofficial@gmail.com' } }; } } // Legacy code below - not used anymore async legacyGeneratePersonalizedEmailOld() { const selectedTemplate = 'default_template'; // Add missing variable try { // 1. const templateInfo = this.templateService.getTemplateByName(selectedTemplate) || { type: selectedTemplate, conversion_rate: '25%', category: 'professional' }; console.log(` - : ${templateInfo.conversion_rate || 'N/A'}`); // 2. Ollama - const uniquePrompt = this.buildUniquePersonalizedPrompt( prospect, businessAnalysis, marketingStrategy, templateInfo, campaignGoal ); // Ollama console.log(` Ollama for ${prospect.email}...`); // OllamaHTML let ollamaPersonalizedContent = null; let fittedTemplateData = null; try { const ollamaResponse = await this.generateWithOllama(uniquePrompt); console.log(` Ollama (${ollamaResponse.length} chars)`); // NEW: HTML console.log(` HTML...`); fittedTemplateData = this.ensureContentFitsHtmlTemplate( ollamaResponse, selectedTemplate, prospect, businessAnalysis, prospect.templateData || {} ); console.log(` HTML`); // Ollama ollamaPersonalizedContent = this.extractPersonalizationFromOllama(ollamaResponse, prospect); console.log(` `); } catch (ollamaError) { // fallback throw new Error(`Ollama email content generation failed: ${ollamaError.message}`); } // PREMIUM + Ollama console.log(` PREMIUM + ...`); let templateResult = null; try { // NEW: Use 2025 Premium Templates with cutting-edge design and deep personalization console.log(` Using Premium 2025 template system with user-selected: ${selectedTemplate}`); console.log(` DEBUG: businessAnalysis:`, businessAnalysis ? Object.keys(businessAnalysis) : 'null'); console.log(` DEBUG: prospect data:`, { email: prospect.email, name: prospect.name, company: prospect.company, hasTemplateData: !!prospect.templateData }); // NEW: Use dynamic template generation with TRUE UI variation for all 36+ templates console.log(` Generating varied UI template: ${selectedTemplate} with campaign goal: ${campaignGoal}`); // INTEGRATION: Use fitted template data if available, otherwise fallback to original approach const templateDataToUse = fittedTemplateData || { campaignGoal, userSelectedTemplate: selectedTemplate, templateVariationIndex: this.templateRotationIndex, forceUniqueDesign: true // Ensure each email has different UI }; console.log(` Using ${fittedTemplateData ? 'HTML-fitted' : 'standard'} template data`); // Generate different UI layouts and designs for each template templateResult = this.premiumTemplates2025.generateDynamicPremiumEmail( selectedTemplate, prospect, businessAnalysis, marketingStrategy, templateDataToUse, ollamaPersonalizedContent // Pass Ollama-generated subjects and content ); console.log(` DEBUG: templateResult:`, templateResult ? { hasSubject: !!templateResult.subject, hasBody: !!templateResult.body, bodyLength: templateResult.body?.length || 0, template_used: templateResult.template_used } : 'null'); console.log(` PREMIUM 2025 `); console.log(` : 2024 + + `); console.log(` : ${templateResult.template_used}`); console.log(` : ${templateResult.personalization_level}`); if (templateResult && templateResult.subject && templateResult.body) { const senderName = prospect.templateData?.senderName || businessAnalysis?.senderName || 'James Wilson'; const senderEmail = prospect.templateData?.senderEmail || businessAnalysis?.senderEmail || 'contact@your-company.com'; console.log(` DEBUG: Using sender - Name: ${senderName}, Email: ${senderEmail}`); const finalEmail = { subject: templateResult.subject, body: templateResult.body, to: prospect.email, from: `${senderName} <${senderEmail}>`, replyTo: senderEmail, template_used: selectedTemplate, content_type: 'html' }; console.log(` - `); return { success: true, email: finalEmail, metadata: { template_type: 'premium_2025_ai_enhanced', template_category: templateResult.template_used, generated_at: new Date().toISOString(), method: 'premium_2025_template_system', personalization_level: templateResult.personalization_level, features: templateResult.features || ['2024_design_trends', 'dark_mode_compatible', 'deep_personalization', 'industry_targeted', 'role_optimized'], industry_targeted: templateResult.industry_targeted, role_targeted: templateResult.role_targeted, user_selected_template: selectedTemplate } }; } } catch (templateError) { console.log(` : ${templateError.message}, `); // Fallback to standard modern template (ONLY as last resort) try { switch (selectedTemplate) { case 'partnership_outreach': templateResult = this.modernTemplates.generatePartnershipOutreach(prospect, businessAnalysis, prospect.templateData, ollamaPersonalizedContent); break; case 'initial_contact': templateResult = this.modernTemplates.generateInitialContact(prospect, businessAnalysis, prospect.templateData, ollamaPersonalizedContent); break; case 'cold_outreach': templateResult = this.modernTemplates.generateColdOutreach(prospect, businessAnalysis, prospect.templateData, ollamaPersonalizedContent); break; case 'value_demonstration': templateResult = this.modernTemplates.generateValueDemonstration(prospect, businessAnalysis, prospect.templateData, ollamaPersonalizedContent); break; case 'follow_up': templateResult = this.modernTemplates.generateFollowUp(prospect, businessAnalysis, prospect.templateData, ollamaPersonalizedContent); break; case 'problem_solution': templateResult = this.modernTemplates.generateProblemSolution(prospect, businessAnalysis, prospect.templateData, ollamaPersonalizedContent); break; default: templateResult = this.modernTemplates.generatePartnershipOutreach(prospect, businessAnalysis, prospect.templateData, ollamaPersonalizedContent); } if (templateResult && templateResult.subject && templateResult.body) { const finalEmail = { subject: templateResult.subject, body: templateResult.body, to: prospect.email, from: `${prospect.templateData?.senderName || 'James Wilson'} <${prospect.templateData?.senderEmail || 'contact@your-company.com'}>`, template_used: selectedTemplate, content_type: 'html' }; console.log(` `); return { success: true, email: finalEmail, metadata: { template_type: selectedTemplate, template_category: 'modern_professional', generated_at: new Date().toISOString(), method: 'modern_template_fallback', issues_fixed: ['', '', 'CTA', ''] } }; } } catch (fallbackError) { console.log(` : ${fallbackError.message}, `); } } // console.log(` ...`); // Get template content directly const senderName = prospect.templateData?.senderName || businessAnalysis?.companyName || 'James Wilson'; const companyName = businessAnalysis?.companyName || 'FruitAI'; const prospectName = prospect.name || this.extractProspectName(prospect.email) || 'there'; const prospectCompany = prospect.company || this.extractCompanyName(prospect) || 'your company'; const companyWebsite = prospect.templateData?.companyWebsite || businessAnalysis?.website || prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com'; // Generate personalized content based on prospect's profile const personalizedData = this.generatePersonalizedContent(prospect, businessAnalysis, marketingStrategy); // HTML let htmlTemplateContent = ''; // const advancedTemplateType = this.selectAdvancedTemplate(selectedTemplate, campaignGoal); const advancedTemplate = this.getAdvancedHTMLTemplate(advancedTemplateType); if (advancedTemplate) { console.log(` HTML: ${advancedTemplateType} ()`); // const enhancedData = this.generateEnhancedPersonalizationData( prospect, businessAnalysis, marketingStrategy, personalizedData, ollamaPersonalizedContent ); htmlTemplateContent = this.applyPersonalizedPlaceholders(advancedTemplate, enhancedData); console.log(` HTML (${htmlTemplateContent.length} chars)`); console.log(` : CTA`); } else { console.log(` Ollama - `); // PREMIUM 2025 console.log(` Using Premium 2025 template system with user-selected: ${selectedTemplate}`); console.log(` Generating varied UI template: ${selectedTemplate} with campaign goal: ${campaignGoal}`); // let personalizedContent = null; try { personalizedContent = await this.generateWithOllama(uniquePrompt); console.log(` Ollama (${personalizedContent.length} chars)`); } catch (ollamaError) { console.log(` Ollama`); personalizedContent = `Hi ${prospectName},\n\nI hope this message finds you well. I believe there's a strong synergy between our companies...`; } // Premium 2025 htmlTemplateContent = await this.applyPremium2025Template( selectedTemplate, personalizedContent, prospect, businessAnalysis, templateInfo, campaignGoal ); // HTML if (!htmlTemplateContent || htmlTemplateContent.trim() === '') { console.log(' Premium 2025'); htmlTemplateContent = this.templateService.generateHTMLEmail( selectedTemplate, { prospectName, companyName: prospectCompany, senderName: prospect.templateData?.senderName || 'Team', content: personalizedContent } ); } // this.lastOllamaResult = { body: htmlTemplateContent }; } // Build subject line - let subjectLine = ''; // - IMPROVED: shorter, more compelling const subjectTemplates = [ `Quick sync on ${prospect.company || 'your business'}?`, `${prospect.company || prospect.name}: 40% efficiency boost?`, `${prospect.company || prospect.name} + AI = ?`, `Worth 15 minutes of your time?`, `${campaignGoal === 'sales' ? 'Revenue growth' : 'Strategic win'} for ${prospect.company || prospect.name}`, `${prospect.company || prospect.name}: What if...`, `Your ${prospect.company || 'company'} + our AI`, `Quick question about ${prospect.company || prospect.name}` ]; // const subjectIndex = this.templateRotationIndex % subjectTemplates.length; subjectLine = subjectTemplates[subjectIndex]; console.log(` Generated varied subject line (${subjectIndex + 1}/${subjectTemplates.length}): ${subjectLine}`); // HTML const finalEmail = { subject: subjectLine, body: htmlTemplateContent || this.getFallbackAdvancedHTMLTemplate(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, subjectLine), template_used: templateInfo.type || 'partnership_outreach', content_type: 'html' // HTML }; console.log(` - : ${templateInfo.type}`); return { success: true, email: finalEmail, // Now contains proper template structure metadata: { template_type: templateInfo.type, template_category: templateInfo.category, conversion_rate: templateInfo.conversion_rate, persona_match: prospect.persona ? this.calculatePersonaMatch(prospect.persona, templateInfo) : 0.8, generated_at: new Date().toISOString(), method: 'direct_template' // Mark as direct template usage } }; } catch (error) { console.error(` : ${error.message}`); return { success: false, error: error.message, email: null }; } } // End of legacy method /** * () */ async generateBatchPersonalizedEmails(prospects, businessAnalysis, marketingStrategy, campaignGoal = 'partnership') { console.log(` ${prospects.length} ...`); const results = []; // prospect for (let i = 0; i < prospects.length; i++) { const prospect = prospects[i]; console.log(`\n [${i + 1}/${prospects.length}] ${prospect.email}...`); try { // 1. if (!prospect.persona || !prospect.persona.estimatedRole) { console.log(` ${prospect.email} ...`); prospect.persona = await this.generatePersonaForProspect(prospect, marketingStrategy); } // 2. const emailResult = await this.generatePersonalizedEmail(prospect, businessAnalysis, marketingStrategy, campaignGoal); if (emailResult.success) { results.push({ prospect: prospect, email: emailResult.email, metadata: emailResult.metadata, success: true }); console.log(` ${prospect.email} - `); } else { results.push({ prospect: prospect, email: null, error: emailResult.error, success: false }); console.log(` ${prospect.email} - : ${emailResult.error}`); } // Ollama await new Promise(resolve => setTimeout(resolve, 2000)); } catch (error) { console.error(` ${prospect.email} : ${error.message}`); results.push({ prospect: prospect, email: null, error: error.message, success: false }); } } const successCount = results.filter(r => r.success).length; console.log(`\n : ${successCount}/${prospects.length} `); return { success: true, total_processed: prospects.length, successful_emails: successCount, failed_emails: prospects.length - successCount, results: results, summary: { template_usage: this.getTemplateUsageStats(results), persona_distribution: this.getPersonaStats(results) } }; } /** * Ollama */ buildEnhancedEmailPrompt(prospect, businessAnalysis, marketingStrategy, selectedTemplate, templateContext) { const persona = prospect.persona || {}; const senderName = prospect.templateData?.senderName || process.env.SENDER_NAME || 'James Wilson'; const companyName = businessAnalysis?.companyName || businessAnalysis?.company_name || 'FruitAI'; const prospectName = prospect.name || prospect.email.split('@')[0].replace(/[^a-zA-Z]/g, ''); const prospectCompany = prospect.company || this.extractCompanyName(prospect); // Get specific industry insights const industryContext = businessAnalysis?.industry || 'technology'; const valueProposition = businessAnalysis?.valueProposition || 'AI-powered solutions'; const mainProducts = businessAnalysis?.mainProducts || []; // Get marketing strategy insights const targetSegments = marketingStrategy?.target_audience?.primary_segments || []; const painPoints = marketingStrategy?.target_audience?.pain_points || persona.primaryPainPoints || []; const keywords = marketingStrategy?.target_audience?.search_keywords?.industry_keywords || []; return `You are a professional business development email writer. Write a detailed, personalized partnership email. RECIPIENT PROFILE:
• Name: ${prospectName}
• Company: ${prospectCompany}
• Role: ${persona.estimatedRole || 'Executive'}
• Industry: ${prospect.industry || industryContext}
• Communication Style: ${persona.communicationStyle || 'Professional'}
• Key Pain Points: ${painPoints.slice(0, 3).join(', ') || 'operational efficiency, growth, cost optimization'} OUR COMPANY DETAILS:
• Company: ${companyName} • Sender: ${senderName}
• Industry Focus: ${industryContext}
• Value Proposition: ${valueProposition}
• Target Market: ${targetSegments.join(', ') || 'business professionals'}
• Key Solutions: ${mainProducts.map(p => p.title).slice(0, 2).join(', ') || 'AI-powered solutions'} EMAIL REQUIREMENTS:
1. PERSONALIZED opening that references ${prospectCompany}'s industry/challenges
2. SPECIFIC value proposition - explain exactly how we can help their business
3. CONCRETE benefits (mention 2-3 specific outcomes they could achieve)
4. PROFESSIONAL but engaging tone
5. CLEAR call-to-action (suggest a brief call to discuss partnership)
6. 150-250 words (more detailed than generic templates)
7. NO PLACEHOLDERS - use real names: ${prospectName}, ${prospectCompany}, ${senderName}, ${companyName} WRITE A COMPLETE EMAIL NOW - USE REAL NAMES AND BE SPECIFIC ABOUT VALUE:
SUBJECT: ${companyName} × ${prospectCompany}: Strategic Innovation Opportunity
EMAIL:
Dear ${prospectName},`; } /** * () */ buildCleanEmailPrompt(prospect, businessAnalysis, marketingStrategy, templateInfo) { const persona = prospect.persona || {}; // Get sender name from templateData (from SMTP config) or fallback const senderName = prospect.templateData?.senderName || process.env.SENDER_NAME || businessAnalysis?.companyName || 'FruitAI Team'; const companyName = businessAnalysis?.companyName || businessAnalysis?.company_name || 'FruitAI'; const prospectName = prospect.name || prospect.email.split('@')[0].replace(/[^a-zA-Z0-9]/g, '') || 'there'; const prospectCompany = prospect.company || this.extractCompanyName(prospect) || 'your company'; return `You are a professional email writer. Write a complete, ready-to-send business email. RECIPIENT INFO:
Name: ${prospectName}
Email: ${prospect.email}
Company: ${prospectCompany}
Role: ${persona.estimatedRole || 'Business Professional'} SENDER INFO:
Name: ${senderName}
Company: ${companyName}
Industry: ${businessAnalysis?.industry || 'Technology'}
Value: ${businessAnalysis?.valueProposition || 'AI-powered solutions'} EMAIL STYLE: ${templateInfo.type} INSTRUCTIONS:
1. Write a complete business email (50-100 words)
2. Use ONLY the real names and companies above
3. NO placeholders like [Name], {{company}}, [Insert X]
4. Professional tone, clear value proposition
5. End with a simple call-to-action
6. Sign with: ${senderName} FORMAT:
SUBJECT: write subject line here
EMAIL:
write complete email body here ending with: ${senderName} Write the email now:`; } /** * Ollama */ buildUniquePersonalizedPrompt(prospect, businessAnalysis, marketingStrategy, templateInfo, campaignGoal) { const persona = prospect.persona || {}; const prospectName = prospect.name || this.extractProspectName(prospect.email); const prospectCompany = prospect.company || this.extractCompanyName(prospect); const validCompanyName = (prospectCompany && prospectCompany !== 'your company' && prospectCompany !== 'your organization') ? prospectCompany : null; const industry = businessAnalysis?.industry || 'technology'; const ourCompany = businessAnalysis?.companyName || 'FruitAI'; const senderName = prospect.templateData?.senderName || 'James Wilson'; // const painPoints = marketingStrategy?.target_audience?.pain_points || ['efficiency', 'growth', 'cost optimization']; const primarySegments = marketingStrategy?.target_audience?.primary_segments || ['business leaders']; const keyMessages = marketingStrategy?.messaging_framework?.key_messages || ['innovation', 'results']; const valueProposition = marketingStrategy?.messaging_framework?.value_proposition || businessAnalysis?.valueProposition || 'innovative business solutions'; // const specificPainPoints = persona.primaryPainPoints || painPoints; const communicationStyle = persona.communicationStyle || 'professional'; const estimatedRole = persona.estimatedRole || 'Business Professional'; const companySize = persona.companySize || 'mid-market'; const interests = persona.interests || []; const techStack = persona.techStack || []; // const companyDescription = businessAnalysis?.valueProposition || businessAnalysis?.description || valueProposition; const companyIndustry = businessAnalysis?.industry || industry; const companyProducts = businessAnalysis?.mainProducts?.map(p => p.title).join(', ') || 'our solutions'; const campaignObjective = marketingStrategy?.campaign_objectives?.primary_goal || campaignGoal; // Campaign goal const goalSpecificMessaging = this.getCampaignGoalMessaging(campaignGoal, campaignObjective); const advancedPrompt = `You are ${senderName}, a ${goalSpecificMessaging.senderRole} at ${ourCompany}, writing a highly personalized business email to ${prospectName} (${estimatedRole}) at ${validCompanyName}. CAMPAIGN OBJECTIVE: ${goalSpecificMessaging.objective} MARKETING STRATEGY CONTEXT:
- Target Audience: ${primarySegments.join(', ')}
- Primary Pain Points: ${specificPainPoints.slice(0, 3).join(', ')}
- Key Messages: ${keyMessages.slice(0, 3).join(', ')}
- Value Proposition: ${valueProposition} YOUR COMPANY (${ourCompany}):
- Industry: ${companyIndustry}
- Solutions: ${companyProducts}
- Value Delivery: ${companyDescription}
- Website: ${businessAnalysis?.website || prospect.templateData?.companyWebsite || 'our website'} RECIPIENT PROFILE:
- Name: ${prospectName}
- Role: ${estimatedRole} - Company: ${validCompanyName || 'their organization'}
- Industry Context: ${industry}
- Communication Style: ${communicationStyle}
- Company Size: ${companySize}
${techStack.length > 0 ? `- Tech Stack: ${techStack.slice(0, 3).join(', ')}` : ''}
${interests.length > 0 ? `- Interests: ${interests.slice(0, 2).join(', ')}` : ''} PERSONALIZATION REQUIREMENTS:
1. Address their specific pain points: ${specificPainPoints.slice(0, 2).join(' and ')}
2. Reference their ${industry} industry challenges
3. Speak to them as a ${estimatedRole} who cares about ${specificPainPoints[0]}
4. Use ${communicationStyle} tone throughout
5. Focus on ${goalSpecificMessaging.focusArea}
6. Include relevant ${goalSpecificMessaging.proofType} if applicable EMAIL STRUCTURE:
- Subject: Create an engaging ${campaignGoal}-focused subject (6-10 words max)
- Opening: Personal connection to their role/company/industry
- Body: How ${ourCompany}'s ${companyProducts} solves their ${specificPainPoints[0]} challenge
- Value: Specific benefit relevant to ${industry} ${estimatedRole}s
- CTA: ${goalSpecificMessaging.ctaType} Write a 120-180 word email that feels personally crafted for ${prospectName} based on their profile and pain points. FORMAT EXACTLY:
SUBJECT: [personalized subject addressing their ${specificPainPoints[0]} pain point] Hi ${prospectName}, [Opening line mentioning their role/company/industry context] [Main value proposition addressing their specific ${specificPainPoints[0]} and ${specificPainPoints[1] || 'business'} challenges, referencing how ${ourCompany} helps ${industry} companies] [Specific benefit/result they can expect as a ${estimatedRole}] [${goalSpecificMessaging.ctaType} with clear next step] Best regards,
${senderName}
${ourCompany} WRITE NOW:`; return advancedPrompt; } /** * Campaign Goal */ getCampaignGoalMessaging(campaignGoal, campaignObjective) { const goalMappings = { 'partnership': { objective: 'Establish strategic partnership and collaboration', senderRole: 'Partnership Director', focusArea: 'mutual benefits and strategic alignment', ctaType: 'Partnership discussion proposal', proofType: 'success stories from similar partnerships' }, 'sales': { objective: 'Drive immediate sales and revenue generation', senderRole: 'Business Development Manager', focusArea: 'ROI and business impact', ctaType: 'Demo or consultation booking', proofType: 'case studies and metrics' }, 'direct_sales': { objective: 'Convert prospect to paying customer', senderRole: 'Sales Director', focusArea: 'immediate value and competitive advantage', ctaType: 'Product demo scheduling', proofType: 'customer testimonials and results' }, 'lead_generation': { objective: 'Generate qualified leads for sales pipeline', senderRole: 'Lead Generation Specialist', focusArea: 'valuable insights and expertise', ctaType: 'Free resource access or consultation', proofType: 'industry insights and thought leadership' }, 'customer_acquisition': { objective: 'Acquire new customers and expand market share', senderRole: 'Customer Success Manager', focusArea: 'customer success and satisfaction', ctaType: 'Free trial or assessment offer', proofType: 'customer satisfaction metrics' }, 'brand_awareness': { objective: 'Increase brand visibility and market presence', senderRole: 'Brand Marketing Manager', focusArea: 'industry innovation and thought leadership', ctaType: 'Content engagement or event invitation', proofType: 'industry recognition and awards' } }; return goalMappings[campaignGoal] || goalMappings[campaignObjective] || goalMappings['partnership']; } /** * Extract personalized content from Ollama response to use in HTML templates */ extractPersonalizationFromOllama(ollamaResponse, prospect) { console.log(` Ollama ...`); const response = ollamaResponse.toLowerCase(); // FIX: Better company name extraction const companyName = this.getImprovedCompanyName(prospect); const prospectName = prospect.name || prospect.email.split('@')[0]; // FIX: Extract the ACTUAL email content from Ollama for unique personalization const personalizedContent = this.extractActualEmailContent(ollamaResponse); return { // Use actual Ollama-generated content personalizedSubject: this.extractSubjectFromOllama(ollamaResponse, companyName), personalizedIntro: this.extractIntroFromOllama(ollamaResponse, prospectName, companyName), personalizedBody: personalizedContent.body || ollamaResponse, personalizedCTA: this.extractCTAFromOllama(ollamaResponse), // metric1: this.extractMetricFromText(response, ['%', 'percent', 'improvement', 'increase']), metric1_label: this.extractMetricLabel(response, 'efficiency'), metric2: this.extractMetricFromText(response, ['$', 'cost', 'saving', 'revenue']), metric2_label: this.extractMetricLabel(response, 'savings'), // achievement: this.extractAchievement(response, companyName), question: this.extractQuestion(response, companyName), // pain1: this.extractPainPoint(response, 1), pain2: this.extractPainPoint(response, 2), pain3: this.extractPainPoint(response, 3), // Company info companyName: companyName, prospectName: prospectName }; } extractMetricFromText(text, keywords) { for (const keyword of keywords) { const pattern = new RegExp(`(\\d+(?:\\.\\d+)?(?:%|k|\\$)?)\\s*${keyword}`, 'i'); const match = text.match(pattern); if (match) return match[1]; } return Math.floor(Math.random() * 50 + 10) + '%'; // fallback } extractMetricLabel(text, defaultLabel) { const labels = ['efficiency', 'growth', 'savings', 'improvement', 'optimization']; for (const label of labels) { if (text.includes(label)) return label.charAt(0).toUpperCase() + label.slice(1); } return defaultLabel.charAt(0).toUpperCase() + defaultLabel.slice(1); } extractAchievement(text, company) { const achievements = ['growth', 'innovation', 'expansion', 'success', 'leadership']; for (const achievement of achievements) { if (text.includes(achievement)) { return `${company}'s ${achievement} initiatives`; } } return `${company}'s recent progress`; } extractQuestion(text, company) { // const questionMatch = text.match(/([^.!?]+\?)/i); if (questionMatch) { return questionMatch[1].trim(); } return `I noticed ${company}'s focus on growth and innovation.`; } /** * NEW: Extract actual email content from Ollama for personalization */ extractActualEmailContent(ollamaResponse) { console.log(' Using ultra-flexible content extraction for HTML templates...'); // Stage 1: Maximum content cleaning and normalization (same as LangGraphMarketingAgent) let cleanContent = ollamaResponse // CRITICAL FIX: Remove email header prefixes first (user complaint fix) .replace(/SUBJECT:\s*[^\n]*/gi, '') // Remove SUBJECT: prefix .replace(/FROM:\s*[^\n]*/gi, '') // Remove FROM: prefix .replace(/TO:\s*[^\n]*/gi, '') // Remove TO: prefix .replace(/DATE:\s*[^\n]*/gi, '') // Remove DATE: prefix // Remove all markdown artifacts .replace(/```[\s\S]*?```/g, '') // Remove code blocks .replace(/---+/g, '') // Remove horizontal rules .replace(/\*\*\*([^*]+)\*\*\*/g, '$1') // Triple asterisks to plain text .replace(/\*\*([^*]+)\*\*/g, '$1') // Bold to plain text .replace(/\*([^*]+)\*/g, '$1') // Italic to plain text .replace(/__([^_]+)__/g, '$1') // Underline to plain text .replace(/_([^_]+)_/g, '$1') // Single underscore to plain text // Remove all placeholder patterns (ultra-comprehensive) .replace(/\{\{[^}]*\}\}/g, '') // Handlebars {{}} .replace(/\[([A-Z_\s]+)\]/g, '') // [PLACEHOLDER] .replace(/\[Your[^\]]*\]/g, '') // [Your Name], [Your Company], etc. .replace(/\[Company[^\]]*\]/g, '') // [Company Name], etc. .replace(/\[Recipient[^\]]*\]/g, '') // [Recipient], etc. .replace(/\[INSERT[^\]]*\]/g, '') // [INSERT...] .replace(/\[WRITE[^\]]*\]/g, '') // [WRITE...] .replace(/\[write[^\]]*\]/g, '') // [write...] .replace(/\[Add[^\]]*\]/g, '') // [Add details] .replace(/\[Enter[^\]]*\]/g, '') // [Enter information] .replace(/\[Please[^\]]*\]/g, '') // [Please...] // Clean up extra whitespace and artifacts .replace(/\n\s*\n\s*\n/g, '\n\n') // Multiple line breaks to double .replace(/^\s*[\-\*\+]\s*/gm, '') // Remove list markers .replace(/^\s*\d+\.\s*/gm, '') // Remove numbered list markers .replace(/^\s*>\s*/gm, '') // Remove quote markers .trim(); // Stage 2: Intelligent content segmentation const lines = cleanContent.split('\n').filter(line => { const trimmed = line.trim(); return trimmed.length > 0 && !trimmed.match(/^-+$/) && !trimmed.match(/^=+$/) && !trimmed.match(/^\*+$/); }); let subject = ''; let intro = ''; let body = ''; let cta = ''; // Stage 3: Ultra-flexible subject extraction // Method 1: Look for explicit subject indicators for (const line of lines) { const lowerLine = line.toLowerCase().trim(); if (lowerLine.includes('subject:') || lowerLine.includes('re:') || lowerLine.includes('title:')) { subject = line.replace(/^[^:]+:\s*/i, '').trim(); if (subject.length > 5) break; } } // Method 2: Smart first line detection (FIXED - much more restrictive) if (!subject && lines.length > 0) { const firstLine = lines[0].trim(); const lowerFirst = firstLine.toLowerCase(); // BLOCK greetings completely - these are NEVER subjects const isGreeting = lowerFirst.startsWith('dear') || lowerFirst.startsWith('hi ') || lowerFirst.startsWith('hello') || lowerFirst.startsWith('greetings'); // BLOCK obvious body content - much more comprehensive const isBodyContent = lowerFirst.includes('i hope') || lowerFirst.includes('i am') || lowerFirst.includes('i wanted to') || lowerFirst.includes('i noticed') || lowerFirst.includes('we are') || lowerFirst.includes('our company') || // FIX: Block "Our company" from subjects lowerFirst.includes('fruitai') || // FIX: Block company names lowerFirst.includes('we specialize') || lowerFirst.includes('this email') || lowerFirst.includes('thank you') || lowerFirst.includes('specializes in') || // FIX: Block business descriptions lowerFirst.includes('ai technology') || // FIX: Block industry terms lowerFirst.includes('best regards') || // FIX: Block closing phrases firstLine.includes(',') || // FIX: Subjects rarely have commas lowerFirst.endsWith('.') || // Sentences usually end with periods lowerFirst.includes(' and ') || // Complex sentences lowerFirst.includes(' that ') || lowerFirst.includes(' which ') || lowerFirst.length > 60; // FIX: Much shorter limit for subjects // COMPLETELY SKIP if content looks like body text if (isGreeting || isBodyContent) { // Don't use first line as subject - it's body content // FIXED: Generate unique, personalized subjects based on recipient and context subject = this.generateUniqueSubject(prospect, businessAnalysis, templateType); } else if (firstLine.length >= 10 && firstLine.length <= 60 && !firstLine.includes('.')) { // Use first line only if it's truly subject-like subject = firstLine; } } // Stage 4: Find greeting and intro const greetingPatterns = [ /^(dear|hi|hello|greetings?|good\s+(morning|afternoon|evening))\s+/i, /^(||)/i, // Chinese /^(hola|buenos|estimado)/i, // Spanish /^(bonjour|cher|chère)/i, // French /^(guten|lieber|sehr geehrte)/i, // German ]; let bodyStartIndex = 0; for (let i = 0; i < lines.length; i++) { const line = lines[i].trim(); if (greetingPatterns.some(pattern => pattern.test(line))) { intro = line; bodyStartIndex = i + 1; break; } } // Stage 5: Extract body content with smart paragraph detection if (bodyStartIndex < lines.length) { const bodyLines = lines.slice(bodyStartIndex); // Smart paragraph detection for HTML formatting const paragraphs = []; let currentParagraph = []; for (const line of bodyLines) { const trimmedLine = line.trim(); // Check if this looks like a CTA if (trimmedLine.toLowerCase().includes('call') || trimmedLine.toLowerCase().includes('schedule') || trimmedLine.toLowerCase().includes('contact') || trimmedLine.toLowerCase().includes('discuss') || (trimmedLine.length < 100 && (trimmedLine.includes('?') || trimmedLine.includes('!')))) { // Save current paragraph if exists if (currentParagraph.length > 0) { paragraphs.push(currentParagraph.join(' ')); currentParagraph = []; } // This could be a CTA if (!cta && trimmedLine.length > 10) { cta = trimmedLine; } } else if (trimmedLine.length === 0) { // Empty line - end current paragraph if (currentParagraph.length > 0) { paragraphs.push(currentParagraph.join(' ')); currentParagraph = []; } } else { currentParagraph.push(trimmedLine); } } // Add final paragraph if (currentParagraph.length > 0) { paragraphs.push(currentParagraph.join(' ')); } // Join paragraphs with proper spacing for HTML body = paragraphs.filter(p => p.trim().length > 0).join('\n\n'); } else { // Fallback: use all cleaned content body = cleanContent; } // Stage 6: Ensure minimum content quality if (!body || body.length < 30) { body = cleanContent || ollamaResponse; } // Stage 7: Extract CTA if not found if (!cta) { const ctaPatterns = [ /would you be interested in.+?\?/i, /let me know if.+?\?/i, /feel free to.+?[.!]/i, /i would love to.+?[.!]/i, /let's schedule.+?[.!]/i, /contact me.+?[.!]/i, /are you available.+?\?/i, /can we schedule.+?\?/i, /shall we connect.+?\?/i ]; for (const pattern of ctaPatterns) { const match = body.match(pattern); if (match) { cta = match[0]; break; } } // FIX: Generate sophisticated CTA if extraction fails if (!cta) { const sophisticatedCTAs = [ 'Would you be open to a strategic conversation about transforming your business with AI?', 'I\'d love to show you exactly how we\'ve helped similar companies achieve 10x efficiency gains. Are you available for a brief demo this week?', 'Let\'s schedule a 15-minute call to explore how this partnership could accelerate your growth. What does your calendar look like?', 'I believe we could create significant value together. Would you be interested in a quick discovery call?', 'Given your focus on innovation, I\'d love to share how our AI solution could give you a competitive edge. When would be a good time to connect?', 'I have some specific ideas about how we could help your team. Can we schedule a brief conversation this week?', 'Would you be open to exploring a partnership that could transform your operations? I have some compelling case studies to share.', 'I\'d be delighted to demonstrate how our technology aligns perfectly with your goals. What\'s the best way to get on your calendar?' ]; cta = sophisticatedCTAs[Math.floor(Math.random() * sophisticatedCTAs.length)]; console.log(' Generated sophisticated CTA due to extraction failure'); } } // Stage 8: Ensure we have a proper subject (CRITICAL BUG FIX) if (!subject || subject.length < 5 || subject === body.substring(0, subject.length)) { console.log(' Subject extraction failed or subject matches body content - using fallback'); // Generate a proper subject from context rather than using body content const fallbackSubjects = [ 'Quick sync?', 'Worth 15 minutes?', 'Quick question', 'What if...', 'AI + your business = ?', 'Partnership chat?', 'Brief conversation?', 'Quick call?' ]; subject = fallbackSubjects[Math.floor(Math.random() * fallbackSubjects.length)]; } console.log(` Extracted: Subject (${subject.length} chars), Intro (${intro.length} chars), Body (${body.length} chars), CTA (${cta.length} chars)`); return { subject: subject || 'Quick sync?', intro: intro || '', body: body || ollamaResponse, cta: cta || '', // Additional HTML-ready formatting htmlSafebody: this.formatForHtml(body || ollamaResponse), paragraphs: this.splitIntoParagraphs(body || ollamaResponse), cleanedContent: cleanContent }; } /** * Format content for HTML template integration */ formatForHtml(content) { if (!content) return ''; // Convert plain text to HTML-ready format return content .replace(/\n\n/g, '</p><p>') // Paragraph breaks .replace(/\n/g, '<br>') // Line breaks .replace(/^/, '<p>') // Start with paragraph .replace(/$/, '</p>') // End with paragraph .replace(/<p><\/p>/g, '') // Remove empty paragraphs .replace(/(<p><br>|<br><\/p>)/g, '<p>'); // Clean up br/p combinations } /** * Split content into clean paragraphs for template integration */ splitIntoParagraphs(content) { if (!content) return ['']; // Split into meaningful paragraphs const paragraphs = content .split(/\n\s*\n/) // Split on double line breaks .map(p => p.replace(/\n/g, ' ').trim()) // Clean each paragraph .filter(p => p.length > 10); // Filter out short/empty paragraphs return paragraphs.length > 0 ? paragraphs : [content.trim()]; } /** * HTML Template Fitting Mechanism * Ensures Ollama output ALWAYS fits into HTML templates by automatically adjusting content */ ensureContentFitsHtmlTemplate(ollamaContent, templateType, prospect, businessAnalysis, templateData) { console.log(' HTML...'); console.log(` Template Type: ${templateType}`); console.log(` Original content length: ${ollamaContent.length} chars`); // Step 1: Get template requirements and constraints const templateRequirements = this.getTemplateRequirements(templateType); console.log(` Template requirements:`, templateRequirements); // Step 2: Extract content using ultra-flexible parser const extractedContent = this.extractActualEmailContent(ollamaContent); // Step 3: Validate and adjust content to fit template constraints const adjustedContent = this.adjustContentForTemplate(extractedContent, templateRequirements, prospect, businessAnalysis); // Step 4: Generate template-specific data structure const templateData_final = this.generateTemplateCompatibleData( adjustedContent, templateType, prospect, businessAnalysis, templateData ); // Step 5: Validate final structure and apply emergency fixes if needed const validatedData = this.validateAndFixTemplateData(templateData_final, templateRequirements); console.log(` Content successfully fitted to ${templateType} template`); console.log(` Final structure: Subject(${validatedData.subject.length}), Body(${validatedData.body?.length || 0}), Paragraphs(${validatedData.paragraphs?.length || 0})`); return validatedData; } /** * Get specific requirements for each template type */ getTemplateRequirements(templateType) { const requirements = { // Partnership templates - executive focused partnership_outreach: { subject: { minLength: 10, maxLength: 80, required: true }, greeting: { required: true, personalName: true }, intro: { minLength: 50, maxLength: 200, required: true }, body: { minLength: 200, maxLength: 800, paragraphs: 3, required: true }, benefits: { count: 3, required: true }, cta: { required: true, businessFocused: true }, signature: { required: true, professional: true }, htmlStructure: 'executive_layout' }, // Cold outreach - attention grabbing cold_outreach: { subject: { minLength: 15, maxLength: 70, attention_grabbing: true, required: true }, greeting: { required: true, casual: true }, hook: { minLength: 30, maxLength: 100, required: true }, body: { minLength: 150, maxLength: 600, paragraphs: 2, required: true }, social_proof: { required: true }, cta: { required: true, direct: true }, signature: { required: true }, htmlStructure: 'modern_layout' }, // Value demonstration - metrics focused value_demonstration: { subject: { minLength: 20, maxLength: 85, value_focused: true, required: true }, greeting: { required: true }, value_prop: { minLength: 100, maxLength: 250, required: true }, body: { minLength: 300, maxLength: 1000, paragraphs: 4, required: true }, metrics: { count: 3, required: true }, case_study: { required: true }, cta: { required: true, demo_focused: true }, signature: { required: true }, htmlStructure: 'metrics_layout' }, // Default fallback default: { subject: { minLength: 10, maxLength: 78, required: true }, greeting: { required: true }, body: { minLength: 100, maxLength: 800, paragraphs: 2, required: true }, cta: { required: true }, signature: { required: true }, htmlStructure: 'standard_layout' } }; return requirements[templateType] || requirements.default; } /** * Adjust content to fit template requirements */ adjustContentForTemplate(extractedContent, requirements, prospect, businessAnalysis) { console.log(' ...'); const adjusted = { subject: this.adjustSubjectForTemplate(extractedContent.subject, requirements.subject, prospect, businessAnalysis), greeting: this.adjustGreetingForTemplate(extractedContent.intro, requirements.greeting, prospect), body: this.adjustBodyForTemplate(extractedContent.body, requirements.body, prospect, businessAnalysis), cta: this.adjustCTAForTemplate(extractedContent.cta, requirements.cta, businessAnalysis), paragraphs: this.adjustParagraphsForTemplate(extractedContent.paragraphs, requirements.body) }; // Add required elements if missing if (requirements.benefits?.required) { adjusted.benefits = this.generateBenefitsList(businessAnalysis, requirements.benefits.count); } if (requirements.metrics?.required) { adjusted.metrics = this.generateMetricsList(businessAnalysis, requirements.metrics.count); } if (requirements.social_proof?.required) { adjusted.social_proof = this.generateSocialProofElement(businessAnalysis); } console.log(' '); return adjusted; } /** * Adjust subject line for template requirements */ adjustSubjectForTemplate(subject, requirements, prospect, businessAnalysis) { if (!subject || subject.length < requirements.minLength) { // Generate appropriate subject based on template type if (requirements.attention_grabbing) { subject = `${prospect.name}: Quick question about ${prospect.company}`; } else if (requirements.value_focused) { subject = `${prospect.company}: See how we help companies like yours`; } else { subject = `${businessAnalysis.companyName} × ${prospect.company}: Partnership opportunity`; } } // Trim if too long if (subject.length > requirements.maxLength) { subject = subject.substring(0, requirements.maxLength - 3) + '...'; } return subject; } /** * Adjust greeting for template requirements */ adjustGreetingForTemplate(greeting, requirements, prospect) { if (!greeting || greeting.length < 10) { if (requirements.casual) { greeting = `Hi ${prospect.name || 'there'},`; } else if (requirements.personalName && prospect.name) { greeting = `Hello ${prospect.name},`; } else { greeting = `Dear ${prospect.name || 'Decision Maker'},`; } } return greeting; } /** * Adjust body content for template requirements with intelligent fitting */ adjustBodyForTemplate(body, requirements, prospect, businessAnalysis) { if (!body || body.length < requirements.minLength) { // Generate minimum viable body content body = `I hope this message finds you well. I'm reaching out because I believe ${businessAnalysis.companyName} could provide significant value to ${prospect.company}. Our ${businessAnalysis.valueProposition} has helped similar companies achieve remarkable results. I'd love to explore how we might work together to drive growth for ${prospect.company}.`; } // Intelligent content fitting instead of aggressive truncation if (body.length > requirements.maxLength) { // Use flexible constraints with graceful degradation const flexibleMaxLength = Math.max(requirements.maxLength, requirements.minLength + 100); if (body.length <= flexibleMaxLength) { // Content fits within flexible range - keep as is return body; } // Smart summarization that preserves key points const sentences = body.split(/[.!?]+/).filter(s => s.trim().length > 0); const keyPhrases = [ businessAnalysis.companyName, prospect.company, prospect.name, 'partnership', 'collaboration', 'value', 'results' ]; // Prioritize sentences containing key phrases const prioritizedSentences = sentences.sort((a, b) => { const aScore = keyPhrases.reduce((score, phrase) => score + (a.toLowerCase().includes(phrase.toLowerCase()) ? 1 : 0), 0 ); const bScore = keyPhrases.reduce((score, phrase) => score + (b.toLowerCase().includes(phrase.toLowerCase()) ? 1 : 0), 0 ); return bScore - aScore; }); // Build content up to reasonable limit (90% of max to leave room for formatting) const targetLength = Math.floor(requirements.maxLength * 0.9); let fittedBody = ''; for (const sentence of prioritizedSentences) { const proposedLength = (fittedBody + sentence.trim() + '. ').length; if (proposedLength <= targetLength) { fittedBody += sentence.trim() + '. '; } else if (fittedBody.length < requirements.minLength) { // If we haven't met minimum, add abbreviated version const availableSpace = targetLength - fittedBody.length - 3; if (availableSpace > 20) { fittedBody += sentence.trim().substring(0, availableSpace) + '...'; } break; } else { break; } } body = fittedBody.trim(); } return body; } /** * Adjust CTA for template requirements */ adjustCTAForTemplate(cta, requirements, businessAnalysis) { if (!cta || cta.length < 10) { // FIX: Generate sophisticated CTAs based on requirements if (requirements.demo_focused) { const demoCTAs = [ `Would you be interested in seeing a personalized demo of how our AI technology could transform your operations?`, `I'd love to show you a quick demo tailored specifically to your industry. Are you available for 20 minutes this week?`, `Let me demonstrate exactly how we've helped companies like yours achieve remarkable results. When works best for your schedule?` ]; cta = demoCTAs[Math.floor(Math.random() * demoCTAs.length)]; } else if (requirements.direct) { const directCTAs = [ `Are you available for a strategic conversation this week? I have some specific ideas for your business.`, `Let's schedule a 15-minute call to discuss the immediate value we can create together. What's your availability?`, `I'd like to share how we can accelerate your growth starting next quarter. Can we connect this week?` ]; cta = directCTAs[Math.floor(Math.random() * directCTAs.length)]; } else { const generalCTAs = [ `I'd love to explore how we can help you achieve similar transformative results. When would be a good time to connect?`, `Let's discuss how this partnership could give you a significant competitive advantage. What does your calendar look like?`, `I believe we could create exceptional value together. Would you be open to a brief discovery call?` ]; cta = generalCTAs[Math.floor(Math.random() * generalCTAs.length)]; } console.log(' Generated sophisticated CTA in adjustCTAForTemplate'); } return cta; } /** * Adjust paragraphs for template requirements */ adjustParagraphsForTemplate(paragraphs, requirements) { if (!paragraphs || paragraphs.length === 0) { paragraphs = ['Content paragraph 1', 'Content paragraph 2']; } // Ensure minimum paragraph count while (paragraphs.length < requirements.paragraphs) { paragraphs.push(`Additional relevant information about this opportunity.`); } // Trim if too many paragraphs if (paragraphs.length > requirements.paragraphs) { paragraphs = paragraphs.slice(0, requirements.paragraphs); } return paragraphs; } /** * Generate benefits list for templates that require it */ generateBenefitsList(businessAnalysis, count = 3) { const benefits = [ `${businessAnalysis.valueProposition} implementation`, `Proven ROI improvement through our solutions`, `Expert consultation and ongoing support`, `Industry-leading technology and innovation`, `Customized approach for your specific needs` ]; return benefits.slice(0, count); } /** * Generate metrics list for value-focused templates */ generateMetricsList(businessAnalysis, count = 3) { const metrics = [ { label: 'Average ROI Increase', value: '35%' }, { label: 'Implementation Time', value: '2-4 weeks' }, { label: 'Customer Satisfaction', value: '94%' }, { label: 'Cost Reduction', value: '25%' }, { label: 'Efficiency Improvement', value: '40%' } ]; return metrics.slice(0, count); } /** * Generate social proof element */ generateSocialProofElement(businessAnalysis) { return { type: 'customer_success', content: `Companies like yours have seen significant improvements after partnering with ${businessAnalysis.companyName}.`, metric: '250+ successful implementations' }; } /** * Generate template-compatible data structure */ generateTemplateCompatibleData(adjustedContent, templateType, prospect, businessAnalysis, templateData) { const base = { subject: adjustedContent.subject, greeting: adjustedContent.greeting, body: adjustedContent.body, cta: adjustedContent.cta, paragraphs: adjustedContent.paragraphs, // Template data from SMTP config senderName: templateData?.senderName || 'Partnership Team', senderEmail: templateData?.senderEmail || templateData?.username || 'contact@company.com', companyName: templateData?.companyName || businessAnalysis.companyName, companyWebsite: templateData?.companyWebsite || businessAnalysis.website || '#', // Prospect data prospectName: prospect.name, prospectEmail: prospect.email, prospectCompany: prospect.company, // HTML-ready formatting htmlBody: this.formatForHtml(adjustedContent.body), htmlParagraphs: adjustedContent.paragraphs.map(p => this.formatForHtml(p)) }; // Add template-specific elements if (adjustedContent.benefits) { base.benefits = adjustedContent.benefits; } if (adjustedContent.metrics) { base.metrics = adjustedContent.metrics; } if (adjustedContent.social_proof) { base.socialProof = adjustedContent.social_proof; } return base; } /** * Final validation and emergency fixes */ validateAndFixTemplateData(templateData, requirements) { console.log(' ...'); // Emergency fixes for required fields if (requirements.subject?.required && (!templateData.subject || templateData.subject.length < 5)) { templateData.subject = this.generateUniqueSubject( { company: templateData.prospectCompany, name: templateData.prospectName }, { companyName: templateData.senderCompany, industry: templateData.industry }, 'emergency' ); } if (requirements.body?.required && (!templateData.body || templateData.body.length < 50)) { templateData.body = `Hello ${templateData.prospectName}, I hope this message finds you well. I'm reaching out to discuss a potential partnership opportunity between ${templateData.companyName} and ${templateData.prospectCompany}. I believe there could be significant mutual value in exploring how we might work together.`; templateData.htmlBody = this.formatForHtml(templateData.body); } if (requirements.cta?.required && (!templateData.cta || templateData.cta.length < 10)) { templateData.cta = `Would you be interested in a brief conversation about this opportunity?`; } // Ensure HTML formatting exists if (!templateData.htmlBody) { templateData.htmlBody = this.formatForHtml(templateData.body || ''); } if (!templateData.htmlParagraphs || templateData.htmlParagraphs.length === 0) { templateData.htmlParagraphs = templateData.paragraphs?.map(p => this.formatForHtml(p)) || [this.formatForHtml(templateData.body || '')]; } console.log(' '); return templateData; } /** * Universal Ollama to HTML Template Converter * Handles ANY Ollama output and makes it fit into HTML templates */ universalOllamaToHtmlConverter(ollamaOutput, prospect, businessAnalysis, templateData, templateType = 'partnership_outreach') { console.log(' OllamaHTML...'); try { // Use the comprehensive fitting mechanism const fittedData = this.ensureContentFitsHtmlTemplate( ollamaOutput, templateType, prospect, businessAnalysis, templateData ); console.log(' '); return fittedData; } catch (error) { console.log(' ...'); // Emergency fallback that ALWAYS works return this.emergencyHtmlFallback(ollamaOutput, prospect, businessAnalysis, templateData); } } /** * Emergency HTML fallback - ALWAYS works */ emergencyHtmlFallback(ollamaOutput, prospect, businessAnalysis, templateData) { console.log(' HTML...'); // Clean the content minimally const cleanContent = ollamaOutput .replace(/```[\s\S]*?```/g, '') .replace(/[*_#]/g, '') .trim(); return { subject: `Partnership opportunity with ${prospect.company}`, greeting: `Hello ${prospect.name || 'there'},`, body: cleanContent || `I hope this message finds you well. I'm reaching out to discuss a potential partnership between ${businessAnalysis.companyName} and ${prospect.company}.`, cta: `Would you be interested in a brief conversation?`, paragraphs: [cleanContent || 'Partnership discussion content'], htmlBody: this.formatForHtml(cleanContent || 'Partnership discussion content'), htmlParagraphs: [this.formatForHtml(cleanContent || 'Partnership discussion content')], // Template essentials senderName: templateData?.senderName || 'Partnership Team', senderEmail: templateData?.senderEmail || 'contact@company.com', companyName: businessAnalysis.companyName, companyWebsite: businessAnalysis.website || '#', prospectName: prospect.name, prospectEmail: prospect.email, prospectCompany: prospect.company }; } extractSubjectFromOllama(ollamaResponse, companyName) { const content = this.extractActualEmailContent(ollamaResponse); if (content.subject) { return content.subject.replace(/your company|your organization/gi, companyName); } // Generate personalized subject based on content const response = ollamaResponse.toLowerCase(); if (response.includes('partnership') || response.includes('collaboration')) { return `Strategic Partnership Opportunity for ${companyName}`; } else if (response.includes('growth') || response.includes('scale')) { return `Accelerate ${companyName}'s Growth with AI Solutions`; } else if (response.includes('efficiency') || response.includes('optimize')) { return `Optimize ${companyName}'s Operations with Smart Technology`; } return `Exclusive Solution for ${companyName}`; } extractIntroFromOllama(ollamaResponse, prospectName, companyName) { const content = this.extractActualEmailContent(ollamaResponse); if (content.intro) { return content.intro.replace(/your company|your organization/gi, companyName); } const cleanName = prospectName.charAt(0).toUpperCase() + prospectName.slice(1).toLowerCase(); return `Hi ${cleanName},\n\nI've been researching ${companyName} and I'm impressed by your growth and strategic initiatives.`; } extractCTAFromOllama(ollamaResponse) { const response = ollamaResponse.toLowerCase(); if (response.includes('schedule') || response.includes('meeting') || response.includes('call')) { return 'Schedule Our Partnership Discussion'; } else if (response.includes('demo') || response.includes('show')) { return 'Request Live Demo'; } else if (response.includes('learn') || response.includes('discover')) { return 'Learn More About Solutions'; } return 'Explore Partnership Opportunities'; } extractPainPoint(text, index) { const commonPains = [ 'operational efficiency', 'cost optimization', 'growth acceleration', 'process automation', 'customer experience', 'data insights' ]; // const painWords = ['challenge', 'problem', 'issue', 'difficulty', 'struggle']; for (const word of painWords) { if (text.includes(word)) { return `${word.replace('struggle', 'business optimization')}`; } } return commonPains[(index - 1) % commonPains.length]; } /** * Extract proper prospect name from email */ extractProspectName(email) { const localPart = email.split('@')[0].toLowerCase(); // List of generic email prefixes that should not be used as names const genericPrefixes = [ 'info', 'contact', 'sales', 'support', 'admin', 'help', 'service', 'marketing', 'team', 'office', 'general', 'inquiry', 'mail', 'email', 'hello', 'hi', 'welcome', 'noreply', 'no-reply', 'donotreply', 'customer', 'client', 'business', 'company', 'corp', 'inc', 'webmaster', 'postmaster', 'accounts', 'billing', 'finance', 'hr', 'careers', 'jobs', 'press', 'media', 'news', 'pr' ]; // Check if the email prefix is a generic term if (genericPrefixes.includes(localPart)) { // Try to extract company name from domain instead const domain = email.split('@')[1]; const companyFromDomain = domain.split('.')[0]; return companyFromDomain.charAt(0).toUpperCase() + companyFromDomain.slice(1); } // Handle firstname.lastname patterns if (localPart.includes('.')) { const parts = localPart.split('.'); // Filter out generic parts and numbers const validParts = parts.filter(part => part.length > 1 && !genericPrefixes.includes(part) && !/^\d+$/.test(part) // Not all numbers ); if (validParts.length > 0) { // Use first valid part as name const firstName = validParts[0]; return firstName.charAt(0).toUpperCase() + firstName.slice(1); } } // Handle underscore patterns if (localPart.includes('_')) { const parts = localPart.split('_'); const validParts = parts.filter(part => part.length > 1 && !genericPrefixes.includes(part) && !/^\d+$/.test(part) ); if (validParts.length > 0) { return validParts[0].charAt(0).toUpperCase() + validParts[0].slice(1); } } // Handle camelCase or mixed patterns const cleanName = localPart.replace(/[^a-zA-Z]/g, ''); // If it's too short or generic, fall back to domain-based name if (cleanName.length < 2 || genericPrefixes.includes(cleanName)) { const domain = email.split('@')[1]; const companyFromDomain = domain.split('.')[0]; return companyFromDomain.charAt(0).toUpperCase() + companyFromDomain.slice(1); } return cleanName.charAt(0).toUpperCase() + cleanName.slice(1); } /** * Extract proper company name, avoiding common email providers */ /** * IMPROVED: Better company name extraction to avoid "Gmail" issue */ getImprovedCompanyName(prospect) { // If we have an explicit company name that's not a generic fallback, use it if (prospect.company && prospect.company !== 'Unknown Company' && prospect.company !== 'Gmail' && !prospect.company.toLowerCase().includes('gmail') && !prospect.company.toLowerCase().includes('yahoo') && !prospect.company.toLowerCase().includes('hotmail') && !prospect.company.toLowerCase().includes('outlook')) { return prospect.company; } const domain = prospect.domain || prospect.email.split('@')[1]; // List of common email providers to avoid using as company names const emailProviders = [ 'gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com', 'aol.com', 'icloud.com', 'protonmail.com', 'mail.com', 'qq.com', '163.com' ]; // If it's a common email provider, extract from email prefix or generate smart name if (emailProviders.includes(domain.toLowerCase())) { const emailPrefix = prospect.email.split('@')[0]; console.log(` Gmail/personal email detected: ${prospect.email}, extracting company from prefix...`); // For patterns like "foodyareen@gmail.com" -> "Foodyareen Company" if (emailPrefix.length >= 6) { const companyName = this.formatCompanyName(emailPrefix) + ' Company'; console.log(` Generated company name: ${companyName}`); return companyName; } // Extract company name from email prefix patterns if (emailPrefix.includes('.')) { // firstname.lastname@gmail.com -> extract potential company from firstname const parts = emailPrefix.split('.'); if (parts.length >= 2) { // Look for company indicators in name parts const companyPart = parts.find(part => part.includes('corp') || part.includes('tech') || part.includes('solutions') || part.includes('inc') || part.length > 6 ); if (companyPart) { return this.formatCompanyName(companyPart); } } // Use first part as company base const companyName = this.formatCompanyName(parts[0]) + ' Corp'; console.log(` Generated company name from email parts: ${companyName}`); return companyName; } // Use industry-based fallback with prospect name const baseName = prospect.name?.split(' ')[0] || emailPrefix; const companyName = this.formatCompanyName(baseName) + ' Solutions'; console.log(` Generated industry-based company name: ${companyName}`); return companyName; } // Convert domain to company name for business domains return this.formatCompanyName(domain.split('.')[0]); } /** * Generate industry-appropriate company names instead of generic ones */ getIndustryBasedCompanyName(industry) { const industryMap = { 'food': ['FoodTech Solutions', 'NutriCorp', 'FreshTech', 'AgriFood Inc'][Math.floor(Math.random() * 4)], 'technology': ['TechInnovate', 'DigitalSolutions', 'InnovaTech', 'TechForward'][Math.floor(Math.random() * 4)], 'healthcare': ['HealthTech', 'MedicalSolutions', 'CareInnovate', 'HealthForward'][Math.floor(Math.random() * 4)], 'finance': ['FinTech Solutions', 'CapitalCorp', 'FinanceForward', 'MoneyTech'][Math.floor(Math.random() * 4)], 'marketing': ['MarketingPro', 'GrowthCorp', 'BrandForward', 'MarketTech'][Math.floor(Math.random() * 4)], 'default': ['BusinessSolutions', 'InnovateCorp', 'GrowthTech', 'ProSolutions'][Math.floor(Math.random() * 4)] }; return industryMap[industry.toLowerCase()] || industryMap['default']; } extractCompanyName(prospect) { return this.getImprovedCompanyName(prospect); } /** * Format company name properly */ formatCompanyName(rawName) { // Remove common suffixes let cleaned = rawName.replace(/[^a-zA-Z0-9]/g, ''); // Capitalize properly if (cleaned.length < 3) { return cleaned.toUpperCase(); } return cleaned.charAt(0).toUpperCase() + cleaned.slice(1); } /** * Ultra-robust HTML compatibility cleaner - ensures 100% HTML template compatibility * html template */ cleanForHtmlCompatibility(rawText, prospect, templateData) { if (!rawText) return ''; console.log(` HTML (${rawText.length} chars)...`); let cleaned = rawText; // Step 0: CRITICAL FIX - Remove SUBJECT prefix first (user complaint fix) cleaned = cleaned.replace(/^SUBJECT:\s*[^\n]*\n?/i, ''); // Remove SUBJECT line at start with newline cleaned = cleaned.replace(/SUBJECT:\s*[^\n]*\n?/gi, ''); // Remove any remaining SUBJECT lines // Step 1: Remove all HTML tags if they exist (to avoid conflicts) cleaned = cleaned.replace(/<[^>]*>/g, ' '); // Step 2: Normalize whitespace and line breaks cleaned = cleaned.replace(/\r\n/g, '\n').replace(/\r/g, '\n'); cleaned = cleaned.replace(/\n{3,}/g, '\n\n'); // Max 2 consecutive newlines cleaned = cleaned.replace(/[ \t]+/g, ' '); // Normalize spaces // Step 3: Remove ALL placeholder patterns (100% guarantee) const placeholderPatterns = [ /\[Your Name\]/gi, /\[Your Company\]/gi, /\[Company Name\]/gi, /\[Recipient Name\]/gi, /\[Insert.*?\]/gi, /\[.*?\]/g, // Any bracketed content /\{\{.*?\}\}/g, // Any double braced content /\$\{.*?\}/g, // Template literals /<%.*?%>/g, // Template tags /<%= .*? %>/g, // Template expressions ]; placeholderPatterns.forEach(pattern => { cleaned = cleaned.replace(pattern, ''); }); // Step 4: Fill in actual data where possible const prospectName = prospect?.name || prospect?.email?.split('@')[0] || 'there'; const companyName = prospect?.company || prospect?.domain || 'your company'; const senderName = templateData?.senderName || 'Partnership Team'; // Replace common generic terms with actual data cleaned = cleaned.replace(/\b(Dear Sir\/Madam|Dear Recipient|Dear User)\b/gi, `Dear ${prospectName}`); cleaned = cleaned.replace(/\b(Your company|The company|Your organization)\b/gi, companyName); cleaned = cleaned.replace(/\b(Our team|We|I)\b(?=\s+(am|are)\s+writing)/gi, senderName); // Step 5: Remove empty lines and normalize structure cleaned = cleaned.replace(/^\s*\n/gm, ''); // Remove lines with only whitespace cleaned = cleaned.trim(); // Step 6: Ensure minimum content quality if (cleaned.length < 50) { console.log(` ...`); cleaned = this.generateGuaranteedHtmlContent(prospect, templateData); } // Step 7: Ensure proper sentence structure cleaned = cleaned.replace(/([.!?])\s*([a-z])/g, (match, punct, letter) => { return punct + ' ' + letter.toUpperCase(); }); // Step 8: Final safety check - remove any remaining problematic characters cleaned = cleaned.replace(/[^\w\s.,!?;:()\-—–'"@#%&+=\n]/g, ' '); cleaned = cleaned.replace(/\s+/g, ' ').trim(); console.log(` HTML (${cleaned.length} chars)`); return cleaned; } /** * Guaranteed HTML content generator - never fails */ generateGuaranteedHtmlContent(prospect, templateData) { const prospectName = prospect?.name || prospect?.email?.split('@')[0] || 'there'; const companyName = prospect?.company || prospect?.domain?.replace(/\./g, '') || 'your organization'; const senderName = templateData?.senderName || 'Partnership Team'; const companyWebsite = templateData?.companyWebsite || 'our company'; return `Dear ${prospectName}, I hope this message finds you well at ${companyName}. I wanted to reach out regarding a potential partnership opportunity that could benefit your organization. Our team at ${companyWebsite} has been following your work and believes there's significant synergy between our companies. We'd love to explore how we can work together to create mutual value. Some key areas where we see potential collaboration include: • Strategic business development
• Technology integration opportunities • Market expansion initiatives
• Resource optimization Would you be open to a brief 15-minute conversation to explore this further? I'm confident we can find ways to support ${companyName}'s growth objectives. Best regards,
${senderName}`; } /** * Enhanced Parse Ollama email response with HTML compatibility guarantee */ parseOllamaEmailResponse(response, prospect, templateInfo) { console.log(` Ollama (${response.length} chars)...`); // FIRST: Apply HTML compatibility cleaning to the entire response const cleanResponse = this.cleanForHtmlCompatibility(response, prospect, templateInfo); let subject = ''; let body = ''; // Enhanced subject patterns - more flexible and robust const subjectPatterns = [ /SUBJECT:\s*(.+?)(?:\n|$)/i, /Subject:\s*(.+?)(?:\n|$)/i, /^Subject:\s*(.+?)(?:\n|$)/im, /^(.+?)(?:\n\n|\n.*?:)/, // First line until double newline or next field /^(.+?)\n/ // First line fallback ]; // Enhanced body patterns - more comprehensive extraction const bodyPatterns = [ /Body:\s*([\s\S]+?)(?:\n\n(?:Best regards|Sincerely|Kind regards)|$)/i, /EMAIL:\s*([\s\S]+?)(?:\n\n(?:Best regards|Sincerely)|$)/i, /Subject:.*?\n\n([\s\S]+?)$/i, /Subject:.*?\n([\s\S]+?)$/i, /^(?:.*?\n){1,2}([\s\S]+)$/ // Skip first 1-2 lines, take rest ]; // Extract subject with HTML compatibility cleaning for (const pattern of subjectPatterns) { const match = cleanResponse.match(pattern); if (match && match[1] && match[1].trim().length > 0) { subject = this.cleanForHtmlCompatibility(match[1], prospect, templateInfo); if (subject.length >= 5 && subject.length <= 80) { break; } } } // Extract body with HTML compatibility cleaning for (const pattern of bodyPatterns) { const match = cleanResponse.match(pattern); if (match && match[1] && match[1].trim().length > 30) { body = this.cleanForHtmlCompatibility(match[1], prospect, templateInfo); if (body.length >= 50) { break; } } } // Ultra-safe fallbacks with HTML compatibility guarantee if (!subject || subject.length < 5) { const companyName = prospect?.company || prospect?.domain || 'your organization'; subject = `Partnership opportunity with ${companyName}`; subject = this.cleanForHtmlCompatibility(subject, prospect, templateInfo); } if (!body || body.length < 50) { console.log(` HTML...`); body = this.generateGuaranteedHtmlContent(prospect, templateInfo); } // Final HTML compatibility check and enforcement subject = this.cleanForHtmlCompatibility(subject, prospect, templateInfo); body = this.cleanForHtmlCompatibility(body, prospect, templateInfo); // Guarantee minimum quality standards if (subject.length > 80) { subject = subject.substring(0, 77) + '...'; } if (subject.length < 10) { subject = `Partnership opportunity with ${prospect?.company || 'your company'}`; } if (body.length < 100) { console.log(` ...`); body = this.generateGuaranteedHtmlContent(prospect, templateInfo); } console.log(` HTML: Subject(${subject.length}), Body(${body.length})`); return { subject: subject, body: body, template_used: templateInfo.type || 'personalized', from: { name: prospect.templateData?.senderName || 'Partnership Team', email: prospect.templateData?.senderEmail || process.env.SENDER_EMAIL || 'contact@company.com' }, to: { name: prospect.name || prospect.email.split('@')[0], email: prospect.email } }; } /** * Generate personalized content based on REAL data from web analysis, strategy, and profile */ generatePersonalizedContent(prospect, businessAnalysis, marketingStrategy) { const persona = prospect.persona || {}; // const realIndustry = businessAnalysis?.industry || businessAnalysis?.contentAnalysis?.industry || 'technology'; const realCompanyName = businessAnalysis?.companyName || businessAnalysis?.company_name || 'FruitAI'; const realValueProp = businessAnalysis?.valueProposition || businessAnalysis?.description || 'AI-powered business solutions'; const realMainProducts = businessAnalysis?.mainProducts || []; const prospectCompany = prospect.company || this.extractCompanyName(prospect) || 'your company'; // const targetAudience = marketingStrategy?.target_audience || {}; const realSegments = targetAudience.primary_segments || ['professionals']; const realKeywords = targetAudience.search_keywords || {}; const realPainPoints = targetAudience.pain_points || ['efficiency', 'growth', 'optimization']; // const realJobTitle = persona.estimatedRole || prospect.jobTitle || 'Professional'; const realExperience = persona.years_experience || this.inferExperience(prospect); const realSkills = persona.skills || []; const realInterests = persona.interests || []; // const realAchievements = this.extractRealAchievements(businessAnalysis, prospectCompany); const realChallenges = this.identifyRealChallenges(businessAnalysis, marketingStrategy, persona); const realOpportunities = this.calculateRealOpportunities(businessAnalysis, marketingStrategy, prospect); // - fake return { // prospect_name: prospect.name || prospect.email.split('@')[0], company_name: prospectCompany, our_company: realCompanyName, sender_name: prospect.templateData?.senderName || 'Partnership Team', sender_email: prospect.templateData?.senderEmail || process.env.SENDER_EMAIL || 'contact@company.com', company_website: prospect.templateData?.companyWebsite || businessAnalysis?.website || (prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com'), industry: realIndustry, our_value_prop: realValueProp, // target_segments: realSegments.slice(0, 2).join(' and '), primary_pain_points: realPainPoints.slice(0, 3).join(', '), // their_expertise: realAchievements.expertise || `innovation in ${realIndustry}`, recent_achievement: realAchievements.recent || `growth in ${realIndustry} market`, growth_area: realChallenges.area || 'business optimization', // personalized_opportunity: realOpportunities.primary || 'Strategic Partnership', specific_benefit: realOpportunities.benefit || 'Enhanced operational efficiency', // benefit_1: realOpportunities.benefit1 || 'Improved operational efficiency through AI automation', benefit_2: realOpportunities.benefit2 || 'Enhanced customer experience with smart analytics', benefit_3: realOpportunities.benefit3 || 'Strategic collaboration on innovative projects', // social_proof_statement: `We've helped similar companies in ${realIndustry} achieve significant results, and I'd love to explore how this might work for ${prospectCompany}.`, attention_grabber_question: `I noticed ${prospectCompany}'s focus on ${realAchievements.focus || 'innovation and growth'}, which aligns perfectly with what we do at ${realCompanyName}.` }; } /** * Extract real achievements from business analysis data */ extractRealAchievements(businessAnalysis, prospectCompany) { if (!businessAnalysis) return { expertise: null, recent: null, focus: null }; // const products = businessAnalysis.mainProducts || []; const valueProps = businessAnalysis.valueProposition || ''; const industry = businessAnalysis.industry || ''; return { expertise: products.length > 0 ? products[0].description || products[0].title : null, recent: valueProps.includes('growth') ? 'market expansion' : valueProps.includes('innovation') ? 'product innovation' : null, focus: industry ? `${industry} excellence` : null }; } /** * Identify real challenges from analysis and strategy */ identifyRealChallenges(businessAnalysis, marketingStrategy, persona) { const painPoints = marketingStrategy?.target_audience?.pain_points || []; const industry = businessAnalysis?.industry || 'business'; return { area: painPoints.length > 0 ? painPoints[0] : `${industry} optimization`, primary: painPoints.slice(0, 2).join(' and ') || 'operational efficiency', specific: painPoints.length > 2 ? painPoints[2] : 'growth acceleration' }; } /** * Calculate real opportunities from business analysis and strategy */ calculateRealOpportunities(businessAnalysis, marketingStrategy, prospect) { const segments = marketingStrategy?.target_audience?.primary_segments || []; const industry = businessAnalysis?.industry || 'technology'; const valueProps = businessAnalysis?.valueProposition || ''; return { primary: segments.length > 0 ? `${segments[0]} Partnership` : 'Strategic Partnership', benefit: valueProps.includes('AI') ? 'AI-powered optimization' : valueProps.includes('automation') ? 'Process automation' : 'Enhanced operational efficiency', benefit1: `Improved operational efficiency through ${industry} automation`, benefit2: `Enhanced customer experience with smart analytics`, benefit3: `Strategic collaboration on innovative projects` }; } /** * Infer experience from real prospect data */ inferExperience(prospect) { const email = prospect.email.toLowerCase(); const role = prospect.persona?.estimatedRole || ''; if (email.includes('senior') || role.includes('senior')) return '8-12 years'; if (email.includes('manager') || role.includes('manager')) return '5-8 years'; if (email.includes('lead') || role.includes('lead')) return '6-10 years'; return '3-7 years'; // } /** * Apply all personalized placeholders to template */ applyPersonalizedPlaceholders(template, data) { let result = template; Object.keys(data).forEach(key => { const placeholder = new RegExp(`\\{\\{${key}\\}\\}`, 'g'); result = result.replace(placeholder, data[key] || ''); }); // Remove any remaining placeholders result = result.replace(/\{\{[^}]+\}\}/g, ''); return result; } // Helper methods for personalization estimateExperience(jobTitle) { if (jobTitle.toLowerCase().includes('senior') || jobTitle.toLowerCase().includes('lead')) return '8-12'; if (jobTitle.toLowerCase().includes('manager') || jobTitle.toLowerCase().includes('director')) return '10-15'; if (jobTitle.toLowerCase().includes('vp') || jobTitle.toLowerCase().includes('chief')) return '15+'; return '5-8'; } extractDepartment(jobTitle) { const title = jobTitle.toLowerCase(); if (title.includes('marketing')) return 'Marketing'; if (title.includes('sales')) return 'Sales'; if (title.includes('tech') || title.includes('engineer') || title.includes('dev')) return 'Engineering'; if (title.includes('product')) return 'Product'; if (title.includes('ops') || title.includes('operations')) return 'Operations'; if (title.includes('finance')) return 'Finance'; return 'Leadership'; } extractExpertise(jobTitle, industry) { const dept = this.extractDepartment(jobTitle); return `${dept.toLowerCase()} in the ${industry} industry`; } estimateCompanyStage(company, domain) { // Simple heuristics based on domain and name if (domain && (domain.includes('startup') || domain.includes('app'))) return 'early-stage startup'; if (company && company.length < 8) return 'growing startup'; return 'established company'; } getSenderTitle(industry) { return `VP of Strategic Partnerships`; } generateRecentAchievement(industry, stage) { const achievements = { 'early-stage startup': ['Series A funding', 'product launch', 'first 1000 customers'], 'growing startup': ['Series B expansion', 'market penetration', 'team scaling'], 'established company': ['market leadership', 'innovation initiatives', 'digital transformation'] }; const options = achievements[stage] || achievements['growing startup']; return options[Math.floor(Math.random() * options.length)]; } identifyGrowthArea(industry, department) { const areas = { 'Marketing': 'customer acquisition', 'Sales': 'revenue optimization', 'Engineering': 'product development', 'Product': 'user experience', 'Operations': 'operational efficiency', 'Leadership': 'strategic growth' }; return areas[department] || 'business growth'; } getSpecificArea(industry, jobTitle) { if (jobTitle.toLowerCase().includes('marketing')) return 'digital marketing automation'; if (jobTitle.toLowerCase().includes('sales')) return 'sales process optimization'; if (jobTitle.toLowerCase().includes('product')) return 'product-market fit'; return 'business optimization'; } generateSpecificAchievement(company, industry) { return `recent innovations in ${industry} market positioning`; } getPrimaryFocus(industry, department) { return `${department.toLowerCase()} excellence`; } generatePersonalizedPainPoints(industry, jobTitle, stage) { const dept = this.extractDepartment(jobTitle); const painPoints = { 'Marketing': { primary: 'lead quality and conversion optimization', specific: 'converting marketing qualified leads into sales opportunities', pain1: 'Inconsistent lead quality from marketing campaigns', pain2: 'Long sales cycles affecting revenue predictability', pain3: 'Limited visibility into customer acquisition costs', inefficiency: 'unoptimized lead qualification processes' }, 'Sales': { primary: 'sales velocity and deal closure rates', specific: 'shortening sales cycles while maintaining deal quality', pain1: 'Extended sales cycles impacting revenue forecasting', pain2: 'Difficulty in identifying high-intent prospects', pain3: 'Manual processes slowing down deal progression', inefficiency: 'manual sales process bottlenecks' }, 'Engineering': { primary: 'technical scalability and development velocity', specific: 'balancing feature development with technical debt', pain1: 'Legacy systems limiting development speed', pain2: 'Resource allocation between new features and maintenance', pain3: 'Scaling challenges as user base grows', inefficiency: 'technical debt and legacy system maintenance' }, 'Leadership': { primary: 'strategic growth and operational efficiency', specific: 'aligning growth initiatives with operational capacity', pain1: 'Coordinating cross-functional growth initiatives', pain2: 'Measuring ROI on strategic investments', pain3: 'Scaling operations while maintaining quality', inefficiency: 'disconnected strategic initiatives' } }; return painPoints[dept] || painPoints['Leadership']; } generatePersonalizedMetrics(industry, jobTitle) { const dept = this.extractDepartment(jobTitle); const metrics = { 'Marketing': { opportunity: 'Lead Generation Breakthrough', metric: '40% conversion rate improvement', metric1: { value: '3.2x', label: 'Lead Quality Score' }, metric2: { value: '65%', label: 'MQL-to-SQL Rate' }, metric3: { value: '$450K', label: 'Monthly Pipeline Value' } }, 'Sales': { opportunity: 'Revenue Acceleration', metric: '35% sales velocity increase', metric1: { value: '45%', label: 'Deal Closure Rate' }, metric2: { value: '28 days', label: 'Shorter Sales Cycle' }, metric3: { value: '$1.2M', label: 'Additional ARR' } }, 'Engineering': { opportunity: 'Development Acceleration', metric: '50% faster delivery', metric1: { value: '60%', label: 'Development Velocity' }, metric2: { value: '80%', label: 'Bug Reduction' }, metric3: { value: '15 hrs', label: 'Weekly Time Savings' } }, 'Leadership': { opportunity: 'Strategic Growth Acceleration', metric: '2.5x business growth', metric1: { value: '150%', label: 'Revenue Growth' }, metric2: { value: '40%', label: 'Efficiency Gain' }, metric3: { value: '$2.3M', label: 'Annual Value Add' } } }; return metrics[dept] || metrics['Leadership']; } generatePersonalizedBenefits(industry, department) { const benefits = { 'Marketing': { benefit1: { title: 'AI-Powered Lead Scoring & Qualification', detail: 'Identify high-intent prospects 3x faster with predictive analytics' }, benefit2: { title: 'Automated Campaign Optimization', detail: 'Real-time campaign adjustments for maximum ROI and engagement' }, benefit3: { title: 'Customer Journey Intelligence', detail: 'Deep insights into buyer behavior for personalized experiences' }, step1: { title: 'Lead Intelligence Setup', timeframe: 'Week 1-2', description: 'Deploy AI-powered lead scoring across all marketing channels' }, step2: { title: 'Campaign Optimization', timeframe: 'Week 2-4', description: 'Implement automated campaign performance optimization', benefit: 'improved lead quality and conversion rates' }, step3: { title: 'Performance Analytics', timeframe: 'Week 4-6', description: 'Launch comprehensive marketing attribution dashboard', }, finalOutcome: 'predictable, high-quality lead generation at scale' }, 'Sales': { benefit1: { title: 'Intelligent Deal Prioritization', detail: 'Focus on deals with highest closure probability using predictive AI' }, benefit2: { title: 'Automated Follow-up Sequences', detail: 'Never miss a follow-up with smart, personalized automation' }, benefit3: { title: 'Real-time Sales Coaching', detail: 'AI-powered insights to improve every sales conversation' }, step1: { title: 'Sales Intelligence Implementation', timeframe: 'Week 1-2', description: 'Deploy predictive deal scoring and prioritization system' }, step2: { title: 'Automation Workflows', timeframe: 'Week 2-4', description: 'Set up intelligent follow-up and nurture sequences', benefit: 'consistent prospect engagement and faster deal progression' }, step3: { title: 'Performance Optimization', timeframe: 'Week 4-6', description: 'Launch real-time sales performance analytics and coaching' }, finalOutcome: 'shortened sales cycles and increased deal closure rates' } }; return benefits[department] || benefits['Sales']; } generatePersonalizedTestimonial(industry, stage) { const testimonials = { 'early-stage startup': { quote: 'Within 3 months, we went from struggling with lead quality to having our best quarter ever. The AI-powered insights completely transformed our approach.', author: 'Sarah Chen', title: 'VP of Growth', company: 'TechFlow Solutions', personalized: 'We were skeptical about AI automation, but the results speak for themselves - 300% improvement in qualified leads within 8 weeks.', caseStudyCompany: 'InnovateNow' }, 'growing startup': { quote: 'The predictive analytics helped us identify our highest-value prospects before our competitors even knew they existed. Game-changing results.', author: 'Michael Rodriguez', title: 'Chief Revenue Officer', company: 'GrowthLabs', personalized: 'Our sales team was drowning in unqualified leads. Now we only work with prospects who are ready to buy - it\'s transformed our entire process.', caseStudyCompany: 'ScaleWorks' }, 'established company': { quote: 'After 15 years in this industry, I thought I\'d seen it all. This platform delivered results I didn\'t think were possible - 40% efficiency gain in the first quarter.', author: 'Jennifer Park', title: 'Director of Operations', company: 'Enterprise Solutions Inc', personalized: 'As a Fortune 500 company, we had complex requirements. The customized solution delivered exactly what we needed to scale our operations.', caseStudyCompany: 'Global Enterprise' } }; return testimonials[stage] || testimonials['growing startup']; } getKeyMetric(department) { const metrics = { 'Marketing': 'customer acquisition cost', 'Sales': 'revenue per rep', 'Engineering': 'development velocity', 'Product': 'user engagement', 'Operations': 'operational efficiency', 'Leadership': 'business growth rate' }; return metrics[department] || 'business performance'; } estimateCost(stage) { const costs = { 'early-stage startup': '$15-25K', 'growing startup': '$35-50K', 'established company': '$75-120K' }; return costs[stage] || '$35-50K'; } getSolutionTimeframe(stage) { return stage === 'early-stage startup' ? '30-day' : stage === 'growing startup' ? '45-day' : '60-day'; } getCompanySize(stage) { const sizes = { 'early-stage startup': '10-50 employees', 'growing startup': '50-200 employees', 'established company': '200+ employees' }; return sizes[stage] || '50-200 employees'; } estimateCurrentLoss(stage) { const losses = { 'early-stage startup': '$8-12K', 'growing startup': '$25-40K', 'established company': '$75-150K' }; return losses[stage] || '$25-40K'; } calculateProjectedGain(stage) { const gains = { 'early-stage startup': '$25-35K', 'growing startup': '$85-120K', 'established company': '$250-400K' }; return gains[stage] || '$85-120K'; } getImplementationTime(stage) { return stage === 'early-stage startup' ? '4-6 week' : stage === 'growing startup' ? '6-8 week' : '8-12 week'; } getSpecificTransformation(industry, department) { return `${department.toLowerCase()} transformation`; } getDeliverableType(jobTitle) { if (jobTitle.toLowerCase().includes('ceo') || jobTitle.toLowerCase().includes('founder')) return 'Strategic Growth Plan'; if (jobTitle.toLowerCase().includes('marketing')) return 'Marketing Optimization Report'; if (jobTitle.toLowerCase().includes('sales')) return 'Sales Acceleration Blueprint'; return 'Custom Strategy Report'; } getSpecificOutcome(industry, stage) { const outcomes = { 'early-stage startup': '300% lead quality improvement', 'growing startup': '40% revenue growth acceleration', 'established company': '2.5x operational efficiency gains' }; return outcomes[stage] || '40% performance improvement'; } getSpecificTimeframe(stage) { return stage === 'early-stage startup' ? '90 days' : stage === 'growing startup' ? '120 days' : '180 days'; } getMeetingDuration(jobTitle) { return jobTitle.toLowerCase().includes('ceo') || jobTitle.toLowerCase().includes('vp') ? '30' : '20'; } getSimilarCompany(industry, index) { const companies = { technology: ['TechFlow Solutions', 'InnovateNow', 'CloudScale', 'DataDriven Inc'], finance: ['FinanceForward', 'InvestSmart', 'CapitalGrowth', 'TradeTech'], healthcare: ['HealthTech Pro', 'MedInnovate', 'CareScale', 'HealthForward'], ecommerce: ['ShopScale', 'CommerceCloud', 'RetailTech', 'MarketGrow'] }; const industryCompanies = companies[industry] || companies.technology; return industryCompanies[index - 1] || industryCompanies[0]; } getResultTimeframe(stage) { return stage === 'early-stage startup' ? '60 days' : stage === 'growing startup' ? '90 days' : '120 days'; } /** * () */ applyCleanFormatting(generatedContent, templateInfo, prospect) { console.log(` Ollama (${generatedContent.length} chars)...`); // Ollama const lines = generatedContent.split('\n').filter(line => line.trim()); // let subject = ''; let body = ''; // "Subject:" const subjectMatch = generatedContent.match(/^Subject:\s*(.+)$/mi); if (subjectMatch) { subject = subjectMatch[1].trim(); // Subjectbody body = generatedContent.replace(/^Subject:\s*.+$/mi, '').trim(); console.log(` `); } else { // if (lines.length > 1) { const firstLine = lines[0]; // if (firstLine.length > 10 && firstLine.length < 80 && !firstLine.toLowerCase().includes('hi ') && !firstLine.toLowerCase().includes('dear ') && !firstLine.includes(',')) { subject = firstLine; body = lines.slice(1).join('\n'); console.log(` `); } else { // subject = this.generateSubjectFromTemplate(templateInfo, prospect); body = generatedContent.trim(); console.log(` `); } } else { // subject = this.generateSubjectFromTemplate(templateInfo, prospect); body = generatedContent.trim(); console.log(` `); } } // subject = this.removePlaceholders(subject, prospect); body = this.removePlaceholders(body, prospect); // Additional subject cleaning for any remaining prefixes if (subject) { subject = subject .replace(/^(SUBJECT|Subject|subject):\s*/i, '') .replace(/^EMAIL:\s*/i, '') .trim(); } // if (subject.includes('[') || subject.includes('{{') || subject.toLowerCase().includes('subject:')) { subject = this.generateCleanSubject(prospect); } if (body.includes('[') || body.includes('{{')) { body = this.generateCleanFallbackEmail(prospect, prospect.name || prospect.email.split('@')[0].replace(/[^a-zA-Z\s]/g, ''), prospect.company || this.extractCompanyName(prospect) || 'your company', process.env.SENDER_NAME || 'FruitAI Team' ); } const businessContext = prospect.businessContext || {}; const senderName = prospect.templateData?.senderName || process.env.SENDER_NAME || businessContext.companyName || 'FruitAI Team'; const senderEmail = prospect.templateData?.senderEmail || process.env.SENDER_EMAIL; return { subject: subject, body: body, from: { name: senderName, email: senderEmail }, to: { name: prospect.name || prospect.email.split('@')[0], email: prospect.email }, template_used: templateInfo.type, personalization_level: this.calculatePersonalizationLevel(body, prospect), estimated_effectiveness: parseInt(templateInfo.conversion_rate) || 25 }; } /** * */ removePlaceholders(content, prospect) { if (!content) return content; // - URL const realName = prospect.name || prospect.email.split('@')[0].replace(/[^a-zA-Z0-9]/g, '') || 'there'; const companyName = prospect.company || this.extractCompanyName(prospect) || 'your company'; const senderName = prospect.templateData?.senderName || process.env.SENDER_NAME || process.env.SENDER_COMPANY || 'FruitAI Team'; const businessContext = prospect.businessContext || {}; const ourCompanyName = businessContext.companyName || 'FruitAI'; // URL const companyWebsite = prospect.templateData?.companyWebsite || businessContext.website || prospect.templateData?.companyWebsite || businessAnalysis?.website || (prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com'); // - let cleaned = content // [...] .replace(/\[Your\s+Name\]/gi, senderName) .replace(/\[Your\s+Full\s+Name\]/gi, senderName) .replace(/\[Sender\s+Name\]/gi, senderName) .replace(/\[Company\s+Name\]/gi, ourCompanyName) .replace(/\[Prospect\s+Name\]/gi, realName) .replace(/\[Client\s+Name\]/gi, realName) .replace(/\[Contact\s+Name\]/gi, realName) .replace(/\[Similar\s+Company\s+Name\]/gi, companyName) .replace(/\[Insert[^\]]*\]/gi, '') .replace(/\[.*?\]/g, '') // // {{...}} - .replace(/\{\{recent_event\}\}/gi, 'your recent achievements') .replace(/\{\{company_name\}\}/gi, companyName) .replace(/\{\{prospect_name\}\}/gi, realName) .replace(/\{\{our_company\}\}/gi, ourCompanyName) .replace(/\{\{[^}]*\}\}/g, '') // // Markdown .replace(/\*\*(.*?)\*\*/g, '$1') // **text** .replace(/\*(.*?)\*/g, '$1') // *text* .replace(/__(.*?)__/g, '$1') // __text__ .replace(/`([^`]+)`/g, '$1') // `code` .replace(/#{1,6}\s*/g, '') // # ## ### // (prospect) .replace(/feel free to reach out at \*\*[^*]+\*\*/gi, `feel free to reach out to us at ${companyWebsite}`) .replace(/contact us at \*\*[^*]+\*\*/gi, `contact us at ${companyWebsite}`) .replace(/reach out at ([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/gi, `reach out at ${companyWebsite}`) // .replace(/\b(Dear|Hello)\s+\[Prospect\s+Name\]\s*,/gi, `Dear ${realName},`) .replace(/Hello\s+\[Prospect\s+Name\]\s*,?\s*Hello\s+\[Prospect\s+Name\]\s*,?/gi, `Hello ${realName},`) .replace(/Dear\s+\[Prospect\s+Name\]\s*,?\s*Hello\s+\[Prospect\s+Name\]\s*,?/gi, `Dear ${realName},`) .replace(/Best\s+regards,\s*\[Your\s+Name\]/gi, `Best regards,\n${senderName}`) .replace(/Sincerely,\s*\[Your\s+Name\]/gi, `Sincerely,\n${senderName}`) // .replace(/\*\*TEMPLATE\s+LABEL:\s*.*?\*\*/gi, '') .replace(/Subject:\s*\[Insert[^\]]*\]/gi, '') .replace(/###\s*EMAIL:/gi, '') // .replace(/((Dear|Hello)\s+[^,]+,)\s*\1/gi, '$1') // Fix empty name issues like "Hi ," or "My name is ," .replace(/Hi\s*,/gi, `Hi ${realName},`) .replace(/Dear\s*,/gi, `Dear ${realName},`) .replace(/Hello\s*,/gi, `Hello ${realName},`) .replace(/My name is\s*,/gi, `My name is ${senderName},`) .replace(/I am\s*,/gi, `I am ${senderName},`) // Remove email header formatting that might appear in the body .replace(/FROM:\s*[^\n]*\n/gi, '') .replace(/TO:\s*[^\n]*\n/gi, '') .replace(/DATE:\s*[^\n]*\n/gi, '') .replace(/SUBJECT:\s*[^\n]*\n/gi, '') // Fix specific issues from user feedback .replace(/Dear\s+Info,/gi, `Dear ${realName},`) .replace(/Dear\s+info,/gi, `Dear ${realName},`) .replace(/Dear\s+INFO,/gi, `Dear ${realName},`) .replace(/Team\s+FruitAI\s+Team\s+FruitAI/gi, senderName) .replace(/Team\s+(\w+)\s+Team\s+\1/gi, senderName) // Remove template instructions and notes .replace(/\(Replace with the actual contact information for the prospect\)/gi, '') .replace(/Note:\s*This is a professional business email\.[^\.]*\./gi, '') .replace(/Use the placeholders provided in the original text to replace them with real data\./gi, '') .replace(/Ready to explore this partnership\?[\s\S]*?Schedule a Call/gi, '') // Clean up repeated content and duplicate email sections .replace(/Dear\s+[^,]+,\s*I hope this message finds you well[^.]*\.\s*[^.]*Best\s+regards,[^.]*\.\s*Dear\s+[^,]+,\s*I hope this message finds you well[^.]*/gi, `Dear ${realName}, I hope this message finds you well`) .replace(/(Dear\s+[^,]+,[\s\S]*?Best\s+regards,[^.]*)\s*Dear\s+[^,]+,[\s\S]*$/gi, '$1') .replace(/Dear\s+[^,]+,.*?Dear\s+[^,]+,/gi, `Dear ${realName},`) // Fix duplicate signatures .replace(/(Best\s+regards,[\s\S]*?)Best\s+regards,[\s\S]*$/gi, '$1') .replace(/(Sincerely,[\s\S]*?)Sincerely,[\s\S]*$/gi, '$1') // .replace(/\n\s*\n\s*\n/g, '\n\n') .replace(/\s+/g, ' ') .trim(); // if (!cleaned || cleaned.length < 30 || cleaned.includes('[') || cleaned.includes('{{')) { return this.generateCleanFallbackEmail(prospect, realName, companyName, senderName); } return cleaned; } /** * */ generateSubjectFromTemplate(templateInfo, prospect) { const prospectName = prospect.name || prospect.email.split('@')[0]; const companyName = prospect.company || this.extractCompanyName(prospect) || 'your company'; const ourCompany = prospect.templateData?.companyName || 'FruitAI'; if (templateInfo.subject_templates && templateInfo.subject_templates.length > 0) { const template = templateInfo.subject_templates[0]; return template .replace(/\{\{prospect_name\}\}/g, prospectName) .replace(/\{\{company_name\}\}/g, companyName) .replace(/\{\{our_company\}\}/g, ourCompany) .replace(/\{\{[^}]+\}\}/g, '') .trim(); } // switch (templateInfo.type) { case 'partnership_outreach': return `${companyName}: Quick sync?`; case 'initial_contact': return `${companyName}: Worth 15 minutes?`; case 'first_followup': return `Following up: ${companyName}`; case 'value_demonstration': return `${companyName}: 40% efficiency boost?`; case 'social_proof': return `What ${companyName}'s peers are saying`; default: return `${companyName}: Quick question`; } } /** * Ollama */ generateFromTemplate(templateInfo, prospect) { console.log(` ${templateInfo.type} `); const prospectName = prospect.name || prospect.email.split('@')[0]; const companyName = prospect.company || this.extractCompanyName(prospect) || 'your company'; const ourCompany = prospect.templateData?.companyName || 'FruitAI'; const senderName = prospect.templateData?.senderName || 'FruitAI Team'; const website = prospect.templateData?.companyWebsite || businessAnalysis?.website || (prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com'); // const subject = this.generateSubjectFromTemplate(templateInfo, prospect); // let body = ''; switch (templateInfo.type) { case 'partnership_outreach': body = `Hi ${prospectName}, I hope this email finds you well. I've been following ${companyName}'s work and am impressed by your approach in the industry. I'm reaching out from ${ourCompany}, where we specialize in AI-powered solutions. I believe there's a natural synergy between our organizations that could create value for both companies. Specifically, I see opportunities for:
• Improved operational efficiency through AI automation
• Enhanced customer experience with smart analytics • Strategic collaboration on innovative projects We've helped similar companies achieve significant results, and I'd love to explore how this might work for ${companyName}. Would you have 15 minutes next week for a brief conversation? Looking forward to hearing from you. Best regards,
${senderName}
${ourCompany}
${website}`; break; case 'initial_contact': body = `Hi ${prospectName}, I hope this email finds you well. I've been researching companies in your industry and came across ${companyName}. I noticed your focus on innovation and growth, which aligns perfectly with what we do at ${ourCompany}. We've helped similar companies:
• Increase efficiency by 30-40% through AI automation
• Reduce operational costs while improving quality
• Scale their operations more effectively I'd love to share some specific examples of how this might apply to ${companyName}. Would you be open to a quick 15-minute conversation this week? Best regards,
${senderName}
${ourCompany}
${website}`; break; case 'first_followup': body = `Hi ${prospectName}, I wanted to follow up on my previous email about AI solutions for ${companyName}. I understand you're likely busy, so I'll keep this brief. Since our last conversation, I've been thinking about challenges that ${companyName} might be facing in your industry. We've recently helped companies like ${companyName} achieve:
• 35% improvement in operational efficiency
• Significant cost reduction through automation
• Better customer insights and engagement Would you be interested in a quick 10-minute call this week to discuss how this might apply to ${companyName}? Best regards,
${senderName}
${ourCompany}
${website}`; break; case 'value_demonstration': body = `Hi ${prospectName}, I wanted to share a relevant success story that might interest ${companyName}. A company similar to yours was facing challenges with efficiency and scaling. Here's what we helped them achieve: 40% increase in productivity 25% reduction in operational costs
⏰ 50% faster processing times The key was implementing our AI-powered solution to streamline their core processes. I believe ${companyName} could see similar results. Would you be open to a brief call to discuss how this might work for your specific situation? Best regards,
${senderName}
${ourCompany}
${website}`; break; case 'social_proof': body = `Hi ${prospectName}, I thought you might be interested in what industry leaders are saying about working with ${ourCompany}: "The results exceeded our expectations. We saw immediate improvements in efficiency and cost savings." - CEO of a leading tech company Companies in your industry that we work with have achieved: 30-50% improvement in operational metrics Significant cost reduction through automation Enhanced customer satisfaction scores I'd love to explore how ${companyName} might achieve similar results. Are you available for a brief call this week? Best regards,
${senderName}
${ourCompany}
${website}`; break; default: body = `Hi ${prospectName}, I noticed your work at ${companyName} and was impressed by what you're doing in your industry. At ${ourCompany}, we specialize in AI-powered solutions that help businesses like yours improve efficiency and drive growth. Would you be interested in exploring how we might collaborate? Best regards,
${senderName}
${ourCompany}
${website}`; } return { subject: subject, body: body, template_used: templateInfo.type, metadata: { generation_method: 'template_direct', template_type: templateInfo.type, conversion_rate: templateInfo.conversion_rate } }; } /** * */ generateCleanFallbackEmail(prospect, realName, companyName, senderName) { const businessContext = prospect.businessContext || {}; const ourCompanyName = businessContext.companyName || 'FruitAI'; const industry = businessContext.industry || 'your industry'; return `Dear ${realName}, I noticed your work at ${companyName} and was impressed by what you're doing in ${industry}. At ${ourCompanyName}, we specialize in AI-powered solutions that help businesses like yours improve efficiency and drive growth. Would you be interested in exploring how we might collaborate? Best regards,
${senderName}`; } /** * prospectAI */ async generatePersonaForProspect(prospect, marketingStrategy) { console.log(` AI: ${prospect.email}`); const domain = prospect.domain || prospect.email.split('@')[1]; const basicRole = this.inferRole(prospect.email, prospect.name); const companySize = this.inferCompanySize(domain); const personaPrompt = `As a B2B marketing psychology expert, create a detailed persona for this email contact: EMAIL: ${prospect.email}
DOMAIN: ${domain}
INFERRED ROLE: ${basicRole}
COMPANY SIZE: ${companySize}
SOURCE: ${prospect.source}
DISCOVERY: ${prospect.discoveryMethod}
CONFIDENCE: ${prospect.confidence} MARKETING CONTEXT:
- Target Segments: ${marketingStrategy?.target_audience?.primary_segments?.join(', ') || 'business professionals'}
- Industry Keywords: ${marketingStrategy?.target_audience?.search_keywords?.industry_keywords?.join(', ') || 'business'}
- Pain Points: ${marketingStrategy?.target_audience?.pain_points?.join(', ') || 'efficiency, cost, growth'} Generate JSON persona with:
{ "estimatedRole": "specific job title/role", "seniority": "junior/mid/senior/executive", "decisionMaking": "low/medium/high/final", "communicationStyle": "direct/formal/casual/analytical", "primaryPainPoints": ["pain1", "pain2", "pain3"], "motivations": ["motivation1", "motivation2"], "preferredChannels": ["email", "phone", "linkedin"], "bestContactTime": "business hours description", "personalizationTips": ["tip1", "tip2", "tip3"], "industryContext": "industry background", "buyingSignals": ["signal1", "signal2"]
} Only return valid JSON, no other text.`; try { const response = await axios.post(`${this.ollamaUrl}/api/generate`, { model: 'qwen2.5:0.5b', // prompt: personaPrompt, stream: false, options: { temperature: 0.7, num_predict: 400, num_ctx: 2048 } }, { timeout: 0, headers: { 'Content-Type': 'application/json' } }); const responseText = response.data.response; console.log(` Ollama raw response preview: ${responseText.substring(0, 100)}...`); // Try to extract JSON from response const jsonMatch = responseText.match(/\{[\s\S]*\}/); if (jsonMatch) { try { const persona = JSON.parse(jsonMatch[0]); console.log(` AI: ${persona.estimatedRole || 'unknown'}`); return { method: 'ollama_ai_generated', ...persona, confidence: prospect.confidence, generatedAt: new Date().toISOString() }; } catch (parseError) { console.log(` JSON: ${parseError.message} - `); throw new Error(`JSON: ${parseError.message}`); } } else { console.log(` JSON`); throw new Error('JSON'); } } catch (error) { console.log(` AI: ${error.message} - `); return this.generateBasicPersona(prospect, marketingStrategy); } } /** * Ollama */ async generateWithOllama(prompt) { try { console.log(' Using Ollama generation (no timeout)...'); const response = await axios.post(`${this.ollamaUrl}/api/generate`, { model: this.emailModel, prompt: prompt, stream: false, options: { temperature: 0.3, num_predict: 200, num_ctx: 1024, top_p: 0.7, repeat_penalty: 1.1 } }, { headers: { 'Content-Type': 'application/json' } // No timeout as per user requirement }); const rawResponse = response.data.response; // CRITICAL: Apply HTML compatibility cleaning to ALL Ollama responses // This ensures 100% HTML template compatibility with no fallbacks console.log(` OllamaHTML (${rawResponse.length} chars)...`); // We don't have prospect context here, so we'll clean with null values // The specific parsing methods will do more detailed cleaning with prospect data const cleanedResponse = this.cleanForHtmlCompatibility(rawResponse, null, null); console.log(` HTML (${rawResponse.length} -> ${cleanedResponse.length} chars)`); return cleanedResponse; } catch (error) { // fallback throw new Error(`Ollama generation failed: ${error.message}`); } } /** * */ applyTemplateFormatting(generatedContent, template, prospect) { // Ollama const subjectMatch = generatedContent.match(/SUBJECT:\s*(.*?)$/m); const emailMatch = generatedContent.match(/EMAIL:\s*([\s\S]*?)(?=TEMPLATE_LABEL:|$)/); const templateLabelMatch = generatedContent.match(/TEMPLATE_LABEL:\s*(.*?)$/m); let subject = subjectMatch?.[1]?.trim() || this.generateFallbackSubject(prospect, template); let body = emailMatch?.[1]?.trim() || this.generateFallbackBody(prospect, template); const templateLabel = templateLabelMatch?.[1]?.trim() || template.type; // CRITICAL: Remove ALL placeholders and fix common issues subject = this.removePlaceholders(subject, prospect); body = this.removePlaceholders(body, prospect); // Extra safety check - if still has placeholders, use clean fallback if (subject.includes('[') || subject.includes('{{') || body.includes('[') || body.includes('{{')) { console.log(' Detected remaining placeholders, using clean fallback'); subject = this.generateCleanSubject(prospect); body = this.generateCleanFallbackEmail(prospect, prospect.name || prospect.email.split('@')[0].replace(/[^a-zA-Z\s]/g, ''), prospect.company || this.extractCompanyName(prospect) || 'your company', process.env.SENDER_NAME || 'FruitAI Team' ); } const businessContext = prospect.businessContext || {}; const companyName = businessContext.companyName || businessContext.company_name || process.env.SENDER_COMPANY || 'Fruit AI'; const senderName = process.env.SENDER_NAME || prospect.templateData?.senderName || companyName; const senderEmail = prospect.templateData?.senderEmail || process.env.SENDER_EMAIL; return { subject: subject, body: body, from: { name: senderName, email: senderEmail }, to: { name: prospect.name || prospect.email.split('@')[0], email: prospect.email }, template_used: templateLabel, personalization_level: this.calculatePersonalizationLevel(body, prospect), estimated_effectiveness: this.estimateEffectiveness(subject, body, template) }; } /** * */ generateCleanSubject(prospect) { const companyName = prospect.company || this.extractCompanyName(prospect) || 'your team'; const businessContext = prospect.businessContext || {}; const ourCompany = businessContext.companyName || 'FruitAI'; const subjects = [ `${companyName}: Quick sync?`, `${companyName} + AI = ?`, `Worth 15 minutes?`, `${companyName}: What if...`, `Quick question for ${companyName}` ]; return subjects[Math.floor(Math.random() * subjects.length)]; } /** * fallback */ generateBasicPersona(prospect, marketingStrategy) { const domain = prospect.domain || prospect.email.split('@')[1]; const role = this.inferRole(prospect.email, prospect.name); return { method: 'rule_based_fallback', estimatedRole: role, companySize: this.inferCompanySize(domain), decisionMaking: this.inferDecisionLevel(role), communicationStyle: 'Professional', primaryPainPoints: marketingStrategy?.target_audience?.pain_points || ['Efficiency', 'Cost', 'Growth'], bestContactTime: 'Business hours (9 AM - 5 PM)', personalizationTips: [ 'Mention specific industry challenges', 'Focus on ROI and value proposition', 'Use professional but approachable tone' ] }; } /** * */ inferRole(email, name) { const emailLower = email.toLowerCase(); const nameLower = (name || '').toLowerCase(); if (emailLower.includes('ceo') || nameLower.includes('ceo')) return 'CEO/Founder'; if (emailLower.includes('cto') || nameLower.includes('cto')) return 'CTO/Technical Lead'; if (emailLower.includes('sales')) return 'Sales Professional'; if (emailLower.includes('marketing')) return 'Marketing Professional'; if (emailLower.includes('support') || emailLower.includes('help')) return 'Support Specialist'; if (emailLower.includes('info') || emailLower.includes('contact')) return 'Business Contact'; return 'Business Professional'; } /** * */ inferCompanySize(domain) { const commonPersonal = ['gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com']; if (commonPersonal.includes(domain.toLowerCase())) { return 'Startup/Freelancer'; } return 'SME/Enterprise'; } /** * */ inferDecisionLevel(role) { if (['CEO/Founder', 'CTO/Technical Lead'].includes(role)) return 'high'; if (['Sales Professional', 'Marketing Professional'].includes(role)) return 'medium'; return 'low'; } /** * */ generateFallbackSubject(prospect, template) { const companyName = this.extractCompanyName(prospect) || 'your company'; const templates = template.subject_templates || []; if (templates.length > 0) { return templates[0] .replace('{{prospect_name}}', prospect.name || 'there') .replace('{{company_name}}', companyName) .replace('{{our_company}}', 'our team'); } return `Quick idea for ${companyName}`; } /** * */ generateFallbackBody(prospect, template) { const name = prospect.name || prospect.email.split('@')[0]; const company = this.extractCompanyName(prospect) || 'your company'; const senderName = process.env.SENDER_NAME || prospect.templateData?.senderName || 'Partnership Team'; const businessContext = prospect.businessContext || {}; const companyName = businessContext.companyName || businessContext.company_name || 'our team'; return `Hi ${name}, I came across ${company} and was impressed by your work${businessContext.industry ? ` in ${businessContext.industry}` : ''}. At ${companyName}, we've helped similar businesses achieve significant improvements in their operations. Would you be open to a brief conversation to explore potential synergies? Best regards,
${senderName}`; } /** * */ calculatePersonalizationLevel(emailBody, prospect) { let score = 0; // if (emailBody.includes(prospect.name)) score += 20; // if (emailBody.includes(prospect.domain)) score += 15; // if (prospect.businessContext?.industry && emailBody.toLowerCase().includes(prospect.businessContext.industry.toLowerCase())) { score += 25; } // if (prospect.persona?.estimatedRole && emailBody.includes('CEO')) score += 20; // if (/\d+%|\$\d+|\d+x/.test(emailBody)) score += 20; return Math.min(100, score); } /** * */ estimateEffectiveness(subject, body, template) { let score = parseInt(template.conversion_rate) || 15; // if (subject.length > 6 && subject.length < 50) score += 5; if (!/free|urgent|act now/i.test(subject)) score += 10; // // if (body.length > 50 && body.length < 150) score += 10; // if (body.includes('?')) score += 5; // if (!body.includes('I/we')) score += 5; // return Math.min(100, score); } /** * persona */ calculatePersonaMatch(persona, template) { if (!persona) return 50; let matchScore = 50; // if (persona.decisionMaking === 'high' && template.type === 'authority_builder') { matchScore += 30; } else if (persona.communicationStyle === 'direct' && template.type === 'direct_value') { matchScore += 25; } else if (template.type === 'aida_attention_grabber') { matchScore += 15; // } return Math.min(100, matchScore); } /** * */ getTemplateUsageStats(results) { const usage = {}; results.forEach(result => { if (result.success && result.metadata) { const templateType = result.metadata.template_type; usage[templateType] = (usage[templateType] || 0) + 1; } }); return usage; } /** * */ getPersonaStats(results) { const stats = { seniority: {}, roles: {}, decision_making: {} }; results.forEach(result => { if (result.success && result.prospect.persona) { const persona = result.prospect.persona; if (persona.seniority) { stats.seniority[persona.seniority] = (stats.seniority[persona.seniority] || 0) + 1; } if (persona.estimatedRole) { stats.roles[persona.estimatedRole] = (stats.roles[persona.estimatedRole] || 0) + 1; } if (persona.decisionMaking) { stats.decision_making[persona.decisionMaking] = (stats.decision_making[persona.decisionMaking] || 0) + 1; } } }); return stats; } /** * */ selectAdvancedTemplate(selectedTemplate, campaignGoal) { // const templateMap = { 'partnership_outreach': 'advanced_partnership', 'initial_contact': 'advanced_initial', 'first_followup': 'advanced_followup', 'value_demonstration': 'advanced_value', 'social_proof': 'advanced_social_proof' }; return templateMap[selectedTemplate] || 'advanced_partnership'; } /** * HTML - Ollama */ getAdvancedHTMLTemplate(templateType) { // nullOllama // asyncOllama return null; // null } /** * Ollama+ */ async generateCompleteEmailWithOllama(prospect, businessAnalysis, marketingStrategy, campaignGoal) { const prompt = `You are a professional email copywriter. Generate a compelling business email. PROSPECT DETAILS:
- Name: ${prospect.name || 'Professional'}
- Email: ${prospect.email}
- Company: ${prospect.company || prospect.domain?.split('.')[0] || 'their company'}
- Position: ${prospect.position || prospect.persona?.estimatedRole || 'professional'}
- Industry: ${prospect.industry || 'business'}
- Pain Points: ${prospect.persona?.primaryPainPoints?.join(', ') || 'efficiency, growth'}
- Communication Style: ${prospect.persona?.communicationStyle || 'professional'} OUR COMPANY:
- Name: ${businessAnalysis?.companyName || 'FruitAI'}
- Industry: ${businessAnalysis?.industry || 'Technology'}
- Value Proposition: ${businessAnalysis?.valueProposition || 'AI-powered business solutions'}
- Website: ${businessAnalysis?.website || prospect.templateData?.companyWebsite || (prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com')} MARKETING STRATEGY:
- Target Audience: ${marketingStrategy?.target_audience?.primary_segments?.join(', ') || 'businesses'}
- Key Pain Points: ${marketingStrategy?.target_audience?.pain_points?.join(', ') || 'efficiency, cost reduction'}
- Messaging Tone: ${marketingStrategy?.messaging_framework?.tone || 'professional'} OBJECTIVE: ${campaignGoal} outreach Create a professional business email with these requirements:
1. Compelling subject line (no placeholders)
2. Personalized greeting using prospect's name
3. Clear value proposition 4. Professional call-to-action
5. Professional signature IMPORTANT: Write actual content, not placeholder text like [write here] or [insert]. Output format:
SUBJECT: ${businessAnalysis?.companyName || 'FruitAI'} × ${prospect.company || prospect.domain?.split('.')[0]?.replace(/\b\w/g, l => l.toUpperCase()) || 'Your Organization'}: Strategic Collaboration
BODY: Dear ${prospect.name || 'there'}, I hope this message finds you well... [Professional email content here] Best regards,
${businessAnalysis?.senderName || 'Team'}
${businessAnalysis?.companyName || 'FruitAI'} Generate a professional email using the EXACT prospect and company names above. NO placeholders allowed:`; try { const response = await this.generateWithOllama(prompt); console.log(` Ollama: ${response.length} `); // const subjectMatch = response.match(/SUBJECT:\s*(.+)/i); const bodyMatch = response.match(/BODY:\s*([\s\S]+)/i); if (subjectMatch && bodyMatch) { let subject = subjectMatch[1].trim(); let body = bodyMatch[1].trim(); // if (subject.includes('[') || subject.includes('write') || subject.includes('insert') || subject.includes('placeholder') || subject.includes('TechCorp') || !subject.includes(prospect.company || prospect.domain?.split('.')[0])) { const prospectCompany = prospect.company || prospect.domain?.split('.')[0]?.replace(/\b\w/g, l => l.toUpperCase()) || 'Your Organization'; subject = this.generateUniqueSubject(prospect, businessAnalysis, 'structured'); } // Markdown body = body.replace(/\*\*/g, ''); // ** body = body.replace(/\*/g, ''); // * // - FIXED: Use sender email not prospect email const senderEmail = businessAnalysis?.senderInfo?.senderEmail || prospect.templateData?.senderEmail || 'hello@yourcompany.com'; const senderName = businessAnalysis?.senderInfo?.senderName || prospect.templateData?.senderName || 'James Wilson'; body = body.replace(/Dear\s*,/g, `Dear ${prospect.name || 'there'},`); body = body.replace(/contact me at\s*[,.]?/gi, `contact me at ${senderEmail}`); body = body.replace(/reach out to me at\s*[,.]?/gi, `reach out to me at ${senderEmail}`); body = body.replace(/email me at\s*[,.]?/gi, `email me at ${senderEmail}`); body = body.replace(/Best regards,\s*$/gm, `Best regards,\n${senderName}\n${businessAnalysis?.companyName || 'FruitAI'}`); // body const hasPlaceholders = body.includes('[') && body.includes(']'); if (hasPlaceholders) { console.log(` Ollama...`); body = body.replace(/\[[^\]]*\]/g, '').replace(/\s+/g, ' ').trim(); } console.log(` Ollama:`); console.log(` : ${subject}`); console.log(` : ${body.length} `); console.log(` : ${hasPlaceholders ? '' : ''}`); return { subject: subject, body: this.convertToHTML(body, prospect, businessAnalysis), // HTML method: 'ollama_direct', cleaned: hasPlaceholders }; } else { throw new Error('Ollama'); } } catch (error) { console.error(` Ollama: ${error.message}`); throw error; } } /** * HTML - Professional CRM Style */ convertToHTML(plainText, prospect, businessAnalysis) { // Extract prospect's actual name, not email const prospectName = prospect.name || this.extractProspectName(prospect.email) || 'there'; const prospectCompany = this.extractCompanyName(prospect); const senderName = prospect.templateData?.senderName || businessAnalysis?.senderName || 'James Wilson'; const senderCompany = businessAnalysis?.companyName || 'FruitAI'; const companyWebsite = prospect.templateData?.companyWebsite || businessAnalysis?.website || (prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com'); // Clean and format the plain text content const lines = plainText.split('\n').filter(line => line.trim()); // Fix greeting - never use email address let greeting = lines.find(line => line.startsWith('Dear') || line.startsWith('Hi') || line.startsWith('Hello')) || ''; if (greeting.includes('@') || greeting.toLowerCase().includes('info')) { greeting = `Dear ${prospectName},`; } // Extract body content const bodyLines = lines.filter(line => !line.startsWith('Dear') && !line.startsWith('Hi ') && !line.startsWith('Hello') && !line.startsWith('Best regards') && !line.startsWith('Sincerely') && line.trim().length > 0 ).slice(0, -2); // Remove signature lines // Format body paragraphs properly const formattedBody = bodyLines.map(line => { // Add proper spacing and formatting if (line.includes('•') || line.includes('-')) { return `<li style="margin: 8px 0; color: #2c2c2c;">${line.replace(/^[•\-]\s*/, '')}</li>`; } return `<p style="margin: 16px 0; line-height: 1.8; color: #1a1a1a;">${line}</p>`; }); // Determine CTA button - use website if no calendar link const ctaUrl = prospect.templateData?.calendarLink || companyWebsite; const ctaText = prospect.templateData?.calendarLink ? 'Schedule a Call' : 'Visit Our Website'; // Professional CRM-style HTML template (inspired by HubSpot/Salesforce) return `
<!DOCTYPE html>
<html>
<head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>Partnership Opportunity with ${senderCompany}</title> <!--[if mso]> <noscript> <xml> <o:OfficeDocumentSettings> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml> </noscript> <![endif]--> <style> @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap'); * { margin: 0; padding: 0; box-sizing: border-box; } body { font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; line-height: 1.6; color: #1a1a1a; background-color: #f8f9fa; margin: 0; padding: 0; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; } .email-wrapper { width: 100%; background-color: #f8f9fa; padding: 40px 20px; } .email-container { max-width: 600px; margin: 0 auto; background: transparent; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08); } /* Header with gradient */ .email-header { background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%); padding: 48px 40px; text-align: center; } .logo-section { margin-bottom: 24px; } .company-logo { width: 48px; height: 48px; background: rgba(255, 255, 255, 0.2); border-radius: 12px; display: inline-flex; font-size: 24px; color: white; font-weight: 700; } .header-title { color: white; font-size: 28px; font-weight: 700; margin: 16px 0 8px; letter-spacing: -0.5px; } .header-subtitle { color: rgba(255, 255, 255, 0.9); font-size: 16px; font-weight: 400; } /* Content area */ .email-content { padding: 48px 40px; } .greeting { font-size: 20px; font-weight: 600; color: #1a1a1a; margin-bottom: 24px; } .email-body { font-size: 15px; line-height: 1.8; color: #1a1a1a; } .email-body p { margin: 16px 0; } .email-body ul { margin: 20px 0; padding-left: 0; list-style: none; } .email-body li { margin: 12px 0; padding-left: 28px; position: relative; color: #2c2c2c; } .email-body li:before { content: ""; position: absolute; left: 0; color: #6366f1; font-weight: 600; } /* CTA Section */ .cta-section { background: linear-gradient(135deg, #f8f9ff 0%, #f3f4ff 100%); border-radius: 12px; padding: 32px; margin: 32px 0; text-align: center; border: 1px solid #e5e7ff; } .cta-title { font-size: 18px; font-weight: 600; color: #1a1a1a; margin-bottom: 12px; } .cta-description { font-size: 14px; color: #4a4a4a; margin-bottom: 20px; } .cta-button { display: inline-block; background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%); color: white; padding: 14px 32px; text-decoration: none; border-radius: 8px; font-weight: 600; font-size: 15px; box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3); transition: all 0.3s ease; } .cta-button:hover { box-shadow: 0 6px 20px rgba(99, 102, 241, 0.4); transform: translateY(-1px); } /* Signature */ .signature-section { margin-top: 40px; padding-top: 32px; border-top: 1px solid #e5e7eb; } .signature-text { font-size: 15px; color: #1a1a1a; margin-bottom: 16px; } .sender-info { margin-top: 16px; } .sender-name { font-weight: 600; color: #1a1a1a; font-size: 16px; } .sender-title { color: #4a4a4a; font-size: 14px; margin-top: 4px; } .sender-company { color: #6366f1; font-size: 14px; font-weight: 500; margin-top: 4px; } /* Footer */ .email-footer { background: #f8f9fa; padding: 32px 40px; text-align: center; border-top: 1px solid #e5e7eb; } .footer-links { margin-bottom: 16px; } .footer-link { color: #6366f1; text-decoration: none; font-size: 13px; margin: 0 12px; font-weight: 500; } .footer-text { color: #6b6b6b; font-size: 12px; line-height: 1.6; } /* Mobile responsiveness */ @media only screen and (max-width: 600px) { .email-header { padding: 32px 24px; } .email-content { padding: 32px 24px; } .email-footer { padding: 24px; } .header-title { font-size: 24px; } .greeting { font-size: 18px; } } </style>
</head>
<body> <div> <div> <!-- Header --> <div> <div> <div>F</div> </div> <h1>Partnership Opportunity</h1> <p>${senderCompany} × ${prospectCompany || 'Your Company'}</p> </div> <!-- Content --> <div> <div>${greeting}</div> <div> ${formattedBody.join('')} </div> <!-- CTA Section --> <div> <p><strong>Ready to explore this partnership?</strong></p> <a href="mailto:${businessAnalysis?.email || prospect.templateData?.senderEmail || 'contact@your-company.com'}">Schedule a Call</a> </div> <div> ${signature.split('\n').map(line => `<p>${line}</p>`).join('')} </div> </div> <div> <p>© ${new Date().getFullYear()} ${businessAnalysis?.companyName || 'FruitAI'}. All rights reserved.</p> <p>Visit us at <a href="${businessAnalysis?.website || prospect.templateData?.companyWebsite || (prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com')}">${businessAnalysis?.website || prospect.templateData?.companyWebsite || (prospect.templateData?.senderEmail?.split('@')[1] ? prospect.templateData.senderEmail.split('@')[1] : 'your-website.com')}</a></p> </div> </div>
</body>
</html>`; } /** * */ generateEnhancedPersonalizationData(prospect, businessAnalysis, marketingStrategy, baseData, ollamaContent) { const prospectName = prospect.name || this.extractProspectName(prospect.email); const prospectCompany = prospect.company || this.extractCompanyName(prospect); const ourCompany = businessAnalysis?.companyName || 'FruitAI'; const industry = businessAnalysis?.industry || 'technology'; // "your organization" const validProspectCompany = (prospectCompany && prospectCompany !== 'your company' && prospectCompany !== 'your organization' && prospectCompany.length > 2) ? prospectCompany : null; // const metrics = this.generatePersonalizedMetrics(industry, prospect.persona?.estimatedRole || 'Professional'); const painPoints = this.generatePersonalizedPainPoints(industry, prospect.persona?.estimatedRole || 'Professional', 'growing startup'); const benefits = this.generatePersonalizedBenefits(industry, this.extractDepartment(prospect.persona?.estimatedRole || 'Professional')); const testimonial = this.generatePersonalizedTestimonial(industry, 'growing startup'); return { // prospect_name: prospectName, company_name: validProspectCompany || prospectName + "'s company", our_company: ourCompany, sender_name: prospect.templateData?.senderName || 'James Wilson', sender_email: prospect.templateData?.senderEmail || process.env.SENDER_EMAIL || 'contact@company.com', sender_title: 'VP of Strategic Partnerships', sender_initial: (prospect.templateData?.senderName || 'J')[0].toUpperCase(), company_website: prospect.templateData?.companyWebsite || businessAnalysis?.website || (prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com'), // industry: industry, their_expertise: baseData.their_expertise || `innovation in ${industry}`, recent_achievement: ollamaContent?.achievement || baseData.recent_achievement || `recent growth in ${industry}`, growth_area: baseData.growth_area || 'business optimization', primary_focus: baseData.target_segments || 'business growth', company_stage: 'growing company', department: this.extractDepartment(prospect.persona?.estimatedRole || 'Professional'), // metric_1: metrics.metric1?.value || '45%', metric_1_label: metrics.metric1?.label || 'Efficiency Gain', metric_2: metrics.metric2?.value || '$250K', metric_2_label: metrics.metric2?.label || 'Annual Savings', metric_3: metrics.metric3?.value || '3.5x', metric_3_label: metrics.metric3?.label || 'ROI Improvement', personalized_metric_1: metrics.metric1?.value || '40%', personalized_metric_2: metrics.metric2?.value || '28 days', personalized_metric_3: metrics.metric3?.value || '$1.2M', // their_pain_point: painPoints.primary || 'operational efficiency', specific_pain_point: painPoints.specific || 'scaling challenges', personalized_pain_1: painPoints.pain1 || 'Process inefficiencies', personalized_pain_2: painPoints.pain2 || 'Limited scalability', personalized_pain_3: painPoints.pain3 || 'Resource constraints', pain_point: painPoints.primary || 'efficiency challenges', challenge: painPoints.specific || 'growth obstacles', key_metric: this.getKeyMetric(this.extractDepartment(prospect.persona?.estimatedRole || 'Professional')), estimated_cost: '$15-25K', // our_value_prop: businessAnalysis?.valueProposition || 'AI-powered business solutions', our_solution: 'AI automation platform', benefit: '40% efficiency improvement', quantified_benefit: '$250K annual savings', benefit_1: benefits.benefit1?.title || 'Automated workflow optimization', benefit_1_detail: benefits.benefit1?.detail || 'Reduce manual tasks by 60%', benefit_2: benefits.benefit2?.title || 'Real-time analytics dashboard', benefit_2_detail: benefits.benefit2?.detail || 'Make data-driven decisions faster', benefit_3: benefits.benefit3?.title || 'Scalable growth infrastructure', benefit_3_detail: benefits.benefit3?.detail || 'Support 10x growth without adding headcount', // social_proof_statement: testimonial.personalized || 'We helped similar companies achieve 300% ROI', testimonial_quote: testimonial.quote || 'This transformed our business operations completely', testimonial_author: testimonial.author || 'Sarah Chen', testimonial_company: testimonial.company || 'TechFlow Solutions', similar_company_1: this.getSimilarCompany(industry, 1), similar_company_2: this.getSimilarCompany(industry, 2), case_study_company: testimonial.caseStudyCompany || 'InnovateNow', // personalized_opportunity: metrics.opportunity || 'Revenue Acceleration Program', solution_timeframe: '30-day', timeframe: '90 days', // step_1_title: benefits.step1?.title || 'Initial Assessment', step_1_timeframe: benefits.step1?.timeframe || 'Week 1', step_1_description: benefits.step1?.description || 'Complete analysis of current processes', step_1_focus: 'process optimization', step_2_title: benefits.step2?.title || 'Implementation', step_2_timeframe: benefits.step2?.timeframe || 'Week 2-3', step_2_description: benefits.step2?.description || 'Deploy customized solution', step_2_benefit: benefits.step2?.benefit || 'immediate efficiency gains', step_3_title: benefits.step3?.title || 'Optimization', step_3_timeframe: benefits.step3?.timeframe || 'Week 4', step_3_description: benefits.step3?.description || 'Fine-tune for maximum performance', final_outcome: benefits.finalOutcome || 'sustainable growth acceleration', // Prospect prospect_job_title: prospect.persona?.estimatedRole || 'Business Leader', prospect_years_experience: this.estimateExperience(prospect.persona?.estimatedRole || 'Professional'), prospect_expertise: this.extractExpertise(prospect.persona?.estimatedRole || 'Professional', industry), // attention_grabber_question: ollamaContent?.question || baseData.attention_grabber_question || `Have you considered how AI could transform ${prospectCompany}'s operations?`, specific_area: 'operational efficiency', specific_achievement: 'market expansion', loss_metric: '$50K monthly', value: '$250K', time_saved: '15 hours', deliverable_type: this.getDeliverableType(prospect.persona?.estimatedRole || 'Professional'), meeting_duration: '20', result_timeframe: '60 days', free_resource_title: 'AI Transformation Guide', urgency_message: 'Limited spots available for Q1 partnerships' }; } /** * HTML */ /** * Generate Apple-style HTML template based on template type */ getAppleStyleHTMLTemplate(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { // 36 const templateDesignId = Math.floor(Math.random() * 36) + 1; console.log(` #${templateDesignId}/36`); return this.getAdvancedTemplateDesign(templateDesignId, templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); } /** * 36 */ getAdvancedTemplateDesign(designId, templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { // 6 const templateSections = { 'initial_contact': [1, 2, 3, 4, 5, 6], 'partnership_outreach': [7, 8, 9, 10, 11, 12], 'value_demonstration': [13, 14, 15, 16, 17, 18], 'cold_outreach': [19, 20, 21, 22, 23, 24], 'first_followup': [25, 26, 27, 28, 29, 30], 'social_proof': [31, 32, 33, 34, 35, 36] }; // ID const sectionDesigns = templateSections[templateType] || templateSections['partnership_outreach']; const randomDesignId = sectionDesigns[Math.floor(Math.random() * sectionDesigns.length)]; console.log(` : ${templateType} -> ID: ${randomDesignId}/36`); switch (randomDesignId) { // INITIAL_CONTACT ( 1-6) case 1: return this.getInitialContactMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 2: return this.getInitialContactModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 3: return this.getInitialContactExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 4: return this.getInitialContactTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 5: return this.getInitialContactLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 6: return this.getInitialContactCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); // PARTNERSHIP_OUTREACH ( 7-12) case 7: return this.getPartnershipMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 8: return this.getPartnershipModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 9: return this.getPartnershipExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 10: return this.getPartnershipTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 11: return this.getPartnershipLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 12: return this.getPartnershipCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); // VALUE_DEMONSTRATION ( 13-18) case 13: return this.getValueDemoMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 14: return this.getValueDemoModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 15: return this.getValueDemoExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 16: return this.getValueDemoTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 17: return this.getValueDemoLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 18: return this.getValueDemoCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); // COLD_OUTREACH ( 19-24) case 19: return this.getColdOutreachMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 20: return this.getColdOutreachModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 21: return this.getColdOutreachExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 22: return this.getColdOutreachTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 23: return this.getColdOutreachLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 24: return this.getColdOutreachCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); // FIRST_FOLLOWUP ( 25-30) case 25: return this.getFollowupMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 26: return this.getFollowupModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 27: return this.getFollowupExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 28: return this.getFollowupTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 29: return this.getFollowupLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 30: return this.getFollowupCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); // SOCIAL_PROOF ( 31-36) case 31: return this.getSocialProofMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 32: return this.getSocialProofModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 33: return this.getSocialProofExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 34: return this.getSocialProofTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 35: return this.getSocialProofLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); case 36: return this.getSocialProofCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); default: return this.getPartnershipMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); } } // ==================== 36 ADVANCED TEMPLATE DESIGNS ==================== // INITIAL_CONTACT ( 1-6) /** * #1: INITIAL_CONTACT - */ getInitialContactMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getInitialContactContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Initial Contact'}</title>
</head>
<body style="margin: 0; padding: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; background: #fafbfc;">
<div style="max-width: 580px; margin: 0 auto; background: #fafafa; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.05);"> <!-- --> <div style="padding: 40px 32px 20px 32px; border-bottom: 1px solid #f0f0f0;"> <div style="width: 40px; height: 2px; background: #007AFF; margin-bottom: 16px;"></div> <h1 style="color: #1d1d1f; margin: 0; font-size: 24px; font-weight: 600; line-height: 1.2;">${emailSubject || 'New Partnership Opportunity'}</h1> </div> <!-- --> <div style="padding: 32px;">${content}</div> <!-- --> <div style="padding: 24px 32px; background: #f8f9fa; border-top: 1px solid #e5e5ea;"> <div style="color: #424245; font-size: 14px;"> <div style="font-weight: 600; margin-bottom: 2px;">${senderName}</div> <div>${companyName}</div> <div style="margin-top: 8px;"> <a href="${companyWebsite}" style="color: #007AFF; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div>
</body>
</html>`; } /** * #2: INITIAL_CONTACT - */ getInitialContactModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getInitialContactContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Initial Contact'}</title>
</head>
<body style="margin: 0; padding: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
<div style="max-width: 600px; margin: 0 auto; background: #fafafa; border-radius: 16px; overflow: hidden; box-shadow: 0 20px 40px rgba(102, 126, 234, 0.3);"> <!-- --> <div style="padding: 50px 40px 30px 40px; text-align: center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); position: relative;"> <div style="position: absolute; top: 20px; right: 20px; width: 60px; height: 60px; border: 2px solid rgba(255,255,255,0.3); border-radius: 50%;"></div> <h1 style="color: #ffffff; margin: 0; font-size: 28px; font-weight: 700; letter-spacing: -0.5px; text-shadow: 0 2px 10px rgba(0,0,0,0.2);">${emailSubject || 'Let\'s Connect'}</h1> <p style="color: rgba(255,255,255,0.9); margin: 8px 0 0 0; font-size: 16px; font-weight: 500;">${companyName}</p> </div> <!-- --> <div style="padding: 40px;">${content}</div> <!-- --> <div style="padding: 32px; background: linear-gradient(135deg, #f8f9ff 0%, #fff8f8 100%); text-align: center;"> <div style="color: #424245; font-size: 15px;"> <div style="font-weight: 600; color: #1d1d1f; margin-bottom: 4px;">${senderName}</div> <div style="font-weight: 500; color: #667eea;">${companyName}</div> <div style="margin-top: 12px;"> <a href="${companyWebsite}" style="color: #667eea; text-decoration: none; font-weight: 500; padding: 8px 16px; border: 1px solid #667eea; border-radius: 20px; display: inline-block; transition: all 0.2s ease;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div>
</body>
</html>`; } /** * #3: INITIAL_CONTACT - */ getInitialContactExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getInitialContactContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Executive Communication'}</title>
</head>
<body style="margin: 0; padding: 20px; font-family: 'Times New Roman', Georgia, serif; background: #f5f5f7;">
<div style="max-width: 640px; margin: 0 auto; background: transparent; box-shadow: 0 8px 30px rgba(0,0,0,0.08);"> <!-- --> <div style="padding: 40px 48px 30px 48px; border-bottom: 3px solid #1d1d1f; background: transparent;"> <div style="text-align: center; margin-bottom: 20px;"> <div style="width: 80px; height: 1px; background: #d2d2d7; margin: 0 auto 20px auto;"></div> <h1 style="color: #1d1d1f; margin: 0; font-size: 32px; font-weight: 400; letter-spacing: -0.5px; font-family: 'Times New Roman', Georgia, serif;">${emailSubject || 'Executive Correspondence'}</h1> <div style="width: 80px; height: 1px; background: #d2d2d7; margin: 20px auto 0 auto;"></div> </div> </div> <!-- --> <div style="padding: 48px; font-family: Georgia, 'Times New Roman', serif;">${content}</div> <!-- --> <div style="padding: 40px 48px; border-top: 1px solid #d2d2d7; background: #fafbfc;"> <div style="text-align: center; color: #1d1d1f;"> <div style="font-size: 18px; font-weight: 400; margin-bottom: 8px; font-family: 'Times New Roman', Georgia, serif;">${senderName}</div> <div style="font-size: 14px; color: #424245; margin-bottom: 4px; text-transform: uppercase; letter-spacing: 1px;">${companyName}</div> <div style="margin-top: 16px;"> <a href="${companyWebsite}" style="color: #1d1d1f; text-decoration: none; font-size: 14px; border-bottom: 1px solid #d2d2d7; padding-bottom: 2px;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div>
</body>
</html>`; } /** * #4: INITIAL_CONTACT - */ getInitialContactTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getInitialContactContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Tech Communication'}</title>
</head>
<body style="margin: 0; padding: 20px; font-family: 'Monaco', 'SF Mono', Consolas, monospace; background: #0d1117;">
<div style="max-width: 600px; margin: 0 auto; background: #161b22; border: 1px solid #30363d; border-radius: 12px; overflow: hidden;"> <!-- --> <div style="padding: 32px; background: linear-gradient(135deg, #0d1117 0%, #161b22 100%); border-bottom: 1px solid #30363d;"> <div style=" margin-bottom: 16px;"> <div style="width: 8px; height: 8px; background: #10b981; border-radius: 50%; margin-right: 8px;"></div> <div style="width: 8px; height: 8px; background: #f59e0b; border-radius: 50%; margin-right: 8px;"></div> <div style="width: 8px; height: 8px; background: #ef4444; border-radius: 50%;"></div> </div> <div style="color: #7c3aed; font-size: 14px; margin-bottom: 8px; font-family: 'Monaco', monospace;">#!/usr/bin/communication</div> <h1 style="color: #f0f6fc; margin: 0; font-size: 24px; font-weight: 600; font-family: 'SF Pro Display', -apple-system, sans-serif;">${emailSubject || 'new Connection().establish()'}</h1> </div> <!-- --> <div style="padding: 32px; background: #0d1117; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; color: #f0f6fc;">${content.replace(/color: #1d1d1f/g, 'color: #f0f6fc').replace(/color: #2c2c2c/g, 'color: #c9d1d9').replace(/color: #424245/g, 'color: #8b949e')}</div> <!-- --> <div style="padding: 24px 32px; background: #161b22; border-top: 1px solid #30363d;"> <div style="color: #c9d1d9; font-family: 'Monaco', monospace; font-size: 12px;"> <div style="color: #7c3aed;">const sender = {</div> <div style="margin-left: 16px; color: #f0f6fc;">name: "${senderName}",</div> <div style="margin-left: 16px; color: #f0f6fc;">company: "${companyName}",</div> <div style="margin-left: 16px; color: #f0f6fc;">website: "<a href="${companyWebsite}" style="color: #58a6ff; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a>"</div> <div style="color: #7c3aed;">}</div> </div> </div>
</div>
</body>
</html>`; } /** * #5: INITIAL_CONTACT - */ getInitialContactLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getInitialContactContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Exclusive Communication'}</title>
</head>
<body style="margin: 0; padding: 30px; font-family: 'Palatino', 'Book Antiqua', Georgia, serif; background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);">
<div style="max-width: 600px; margin: 0 auto; background: #fafafa; border: 2px solid #d4af37; box-shadow: 0 25px 50px rgba(212, 175, 55, 0.2);"> <!-- --> <div style="padding: 50px 48px 40px 48px; text-align: center; background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%); border-bottom: 3px solid #d4af37; position: relative;"> <div style="position: absolute; top: 20px; left: 20px; width: 60px; height: 60px; border: 2px solid #d4af37; transform: rotate(45deg); opacity: 0.3;"></div> <div style="position: absolute; bottom: 20px; right: 20px; width: 40px; height: 40px; border: 2px solid #d4af37; transform: rotate(45deg); opacity: 0.3;"></div> <div style="width: 120px; height: 2px; background: linear-gradient(90deg, transparent 0%, #d4af37 50%, transparent 100%); margin: 0 auto 24px auto;"></div> <h1 style="color: #1a1a2e; margin: 0; font-size: 36px; font-weight: 400; letter-spacing: 1px; font-family: 'Palatino', Georgia, serif; text-shadow: 1px 1px 2px rgba(212, 175, 55, 0.1);">${emailSubject || 'Distinguished Correspondence'}</h1> <div style="width: 80px; height: 1px; background: #d4af37; margin: 24px auto 16px auto;"></div> <p style="color: #666; margin: 0; font-size: 16px; font-style: italic; letter-spacing: 0.5px;">${companyName}</p> </div> <!-- --> <div style="padding: 48px; background: #fefefe;">${content}</div> <!-- --> <div style="padding: 40px 48px; background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%); border-top: 2px solid #d4af37; text-align: center;"> <div style="margin-bottom: 20px;"> <div style="width: 60px; height: 1px; background: #d4af37; margin: 0 auto;"></div> </div> <div style="color: #1a1a2e;"> <div style="font-size: 20px; font-weight: 400; margin-bottom: 8px; font-family: 'Palatino', Georgia, serif;">${senderName}</div> <div style="font-size: 14px; color: #666; margin-bottom: 16px; text-transform: uppercase; letter-spacing: 2px;">${companyName}</div> <div> <a href="${companyWebsite}" style="color: #d4af37; text-decoration: none; font-size: 15px; border: 1px solid #d4af37; padding: 8px 20px; display: inline-block; letter-spacing: 1px; font-weight: 500; transition: all 0.3s ease;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div>
</body>
</html>`; } /** * #6: INITIAL_CONTACT - */ getInitialContactCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getInitialContactContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Creative Connection'}</title>
</head>
<body style="margin: 0; padding: 20px; font-family: 'Comic Neue', 'Marker Felt', cursive; background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #ffeaa7, #dda0dd); background-size: 300% 300%;">
<div style="max-width: 600px; margin: 0 auto; background: #fafafa; border-radius: 30px; overflow: hidden; box-shadow: 0 15px 35px rgba(0,0,0,0.1); transform: rotate(-1deg); position: relative;"> <div style="transform: rotate(1deg);"> <!-- --> <div style="padding: 40px 32px 30px 32px; text-align: center; background: linear-gradient(135deg, #fff5f5 0%, #f0f8ff 50%, #f0fff0 100%); position: relative;"> <div style="position: absolute; top: 15px; left: 15px; width: 30px; height: 30px; background: #ff6b6b; border-radius: 50%; opacity: 0.7;"></div> <div style="position: absolute; top: 25px; right: 20px; width: 20px; height: 20px; background: #4ecdc4; transform: rotate(45deg); opacity: 0.7;"></div> <div style="position: absolute; bottom: 20px; left: 50px; width: 25px; height: 25px; background: #ffeaa7; transform: rotate(30deg); opacity: 0.7;"></div> <h1 style="color: #2c3e50; margin: 0; font-size: 32px; font-weight: 700; transform: rotate(-2deg); display: inline-block; text-shadow: 2px 2px 0px #fff, -1px -1px 0px #ff6b6b;">${emailSubject || 'Hey There! '}</h1> <div style="margin-top: 16px; transform: rotate(1deg);"> <span style="background: #ff6b6b; color: white; padding: 4px 12px; border-radius: 15px; font-size: 14px; font-weight: 600;">${companyName}</span> </div> </div> <!-- --> <div style="padding: 32px; background: transparent; font-family: 'Nunito', -apple-system, sans-serif;">${content.replace(/font-family: [^;]+;/g, 'font-family: "Nunito", -apple-system, sans-serif;')}</div> <!-- --> <div style="padding: 32px; background: linear-gradient(135deg, #f8f9fa 0%, #fff5f5 50%, #f0f8ff 100%); text-align: center; position: relative;"> <div style="position: absolute; top: 10px; right: 10px; width: 40px; height: 40px; border: 3px dashed #dda0dd; border-radius: 50%; opacity: 0.5;"></div> <div style="transform: rotate(-1deg); display: inline-block;"> <div style="font-size: 20px; font-weight: 700; color: #2c3e50; margin-bottom: 8px; font-family: 'Comic Neue', cursive;">${senderName} </div> <div style="font-size: 16px; color: #7f8c8d; margin-bottom: 16px; font-weight: 600;">${companyName}</div> <div style="transform: rotate(2deg); display: inline-block;"> <a href="${companyWebsite}" style="color: #ffffff; background: linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 100%); text-decoration: none; padding: 10px 20px; border-radius: 25px; font-weight: 600; box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3); display: inline-block; transform: scale(1.05);">${companyWebsite.replace('https://', '').replace('http://', '')} </a> </div> </div> </div> </div>
</div>
</body>
</html>`; } // PARTNERSHIP_OUTREACH ( 7-12) /** * #7: PARTNERSHIP_OUTREACH - */ getPartnershipMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getPartnershipOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Partnership Opportunity'}</title>
</head>
<body style="margin: 0; padding: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; background: transparent;">
<div style="max-width: 560px; margin: 0 auto; border: 1px solid #e5e5ea; border-radius: 12px; overflow: hidden;"> <!-- --> <div style="padding: 32px 32px 24px 32px; background: #fafafa; border-bottom: 1px solid #f2f2f7;"> <div style=" margin-bottom: 16px;"> <div style="width: 32px; height: 32px; background: #007AFF; border-radius: 8px; margin-right: 12px;"> <div style="width: 16px; height: 16px; background: #fafafa; border-radius: 4px;"></div> </div> <h1 style="color: #1d1d1f; margin: 0; font-size: 22px; font-weight: 600;">${emailSubject || 'Partnership Proposal'}</h1> </div> <p style="color: #8e8e93; margin: 0; font-size: 15px;">From ${companyName}</p> </div> <!-- --> <div style="padding: 32px;">${content}</div> <!-- --> <div style="padding: 24px 32px; background: #f2f2f7;"> <div style="color: #424245; font-size: 14px;"> <div style="font-weight: 600; margin-bottom: 2px;">${senderName}</div> <div style="color: #8e8e93;">${companyName}</div> <div style="margin-top: 8px;"> <a href="${companyWebsite}" style="color: #007AFF; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div>
</body>
</html>`; } /** * #8: PARTNERSHIP_OUTREACH - */ getPartnershipModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getPartnershipOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Partnership Opportunity'}</title>
</head>
<body style="margin: 0; padding: 25px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh;">
<div style="max-width: 620px; margin: 0 auto; background: #fafafa; border-radius: 20px; overflow: hidden; box-shadow: 0 25px 50px rgba(102, 126, 234, 0.25);"> <!-- --> <div style="padding: 48px 40px 32px 40px; background: linear-gradient(135deg, #ffffff 0%, #f8f9ff 100%); position: relative;"> <div style="position: absolute; top: -10px; right: -10px; width: 100px; height: 100px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 50%; opacity: 0.1;"></div> <div style="position: absolute; bottom: -20px; left: -20px; width: 80px; height: 80px; background: linear-gradient(135deg, #764ba2 0%, #667eea 100%); border-radius: 50%; opacity: 0.08;"></div> <div style="position: relative; z-index: 2;"> <div style="display: inline-block; padding: 8px 16px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 20px; margin-bottom: 20px;"> <span style="color: #ffffff; font-size: 12px; font-weight: 600; text-transform: uppercase; letter-spacing: 1px;">Partnership</span> </div> <h1 style="color: #1d1d1f; margin: 0; font-size: 32px; font-weight: 700; line-height: 1.2;">${emailSubject || 'Strategic Alliance Opportunity'}</h1> </div> </div> <!-- --> <div style="padding: 40px;">${content}</div> <!-- --> <div style="padding: 32px 40px; background: linear-gradient(135deg, #f8f9ff 0%, #ffffff 100%); border-top: 1px solid #f0f0f5;"> <div style=" "> <div style="width: 48px; height: 48px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 12px; margin-right: 16px;"> <div style="color: #ffffff; font-weight: 600; font-size: 18px;">${senderName.charAt(0)}</div> </div> <div> <div style="color: #1d1d1f; font-weight: 600; font-size: 16px; margin-bottom: 2px;">${senderName}</div> <div style="color: #667eea; font-weight: 500; font-size: 14px; margin-bottom: 4px;">${companyName}</div> <a href="${companyWebsite}" style="color: #8e8e93; text-decoration: none; font-size: 13px;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div>
</body>
</html>`; } /** * #9: PARTNERSHIP_OUTREACH - */ getPartnershipExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getPartnershipOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Executive Partnership Proposal'}</title>
</head>
<body style="margin: 0; padding: 30px; font-family: 'Times New Roman', Georgia, serif; background: #f8f9fa;">
<div style="max-width: 680px; margin: 0 auto; background: transparent; box-shadow: 0 10px 40px rgba(0,0,0,0.1);"> <!-- --> <div style="padding: 48px 56px 40px 56px; background: #fafafa; border-bottom: 4px solid #1d1d1f;"> <div style="text-align: center;"> <div style="width: 120px; height: 2px; background: #1d1d1f; margin: 0 auto 32px auto;"></div> <h1 style="color: #1d1d1f; margin: 0; font-size: 36px; font-weight: 300; letter-spacing: 2px; font-family: 'Times New Roman', Georgia, serif; text-transform: uppercase;">${emailSubject || 'Strategic Partnership Proposal'}</h1> <div style="width: 120px; height: 2px; background: #1d1d1f; margin: 32px auto 24px auto;"></div> <div style="color: #424245; font-size: 16px; font-weight: 400; letter-spacing: 1px; text-transform: uppercase;">${companyName}</div> </div> </div> <!-- --> <div style="padding: 56px; font-family: Georgia, 'Times New Roman', serif; line-height: 1.8;">${content}</div> <!-- --> <div style="padding: 48px 56px; background: #fafbfc; border-top: 2px solid #e5e5ea;"> <div style="text-align: center;"> <div style="margin-bottom: 24px;"> <div style="width: 100px; height: 1px; background: #d2d2d7; margin: 0 auto;"></div> </div> <div style="color: #1d1d1f; font-family: 'Times New Roman', Georgia, serif;"> <div style="font-size: 24px; font-weight: 400; margin-bottom: 12px;">${senderName}</div> <div style="font-size: 16px; color: #424245; margin-bottom: 8px; text-transform: uppercase; letter-spacing: 2px; font-weight: 300;">${companyName}</div> <div style="margin-top: 20px;"> <a href="${companyWebsite}" style="color: #1d1d1f; text-decoration: none; font-size: 15px; border: 2px solid #1d1d1f; padding: 12px 24px; display: inline-block; letter-spacing: 1px; text-transform: uppercase; font-weight: 400; transition: all 0.3s ease;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>
</div>
</body>
</html>`; } /** * #10: PARTNERSHIP_OUTREACH - */ getPartnershipTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getPartnershipOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Tech Partnership Proposal'}</title>
</head>
<body style="margin: 0; padding: 20px; font-family: 'SF Mono', Monaco, Consolas, monospace; background: #0a0e27;">
<div style="max-width: 640px; margin: 0 auto; background: #1a1f3a; border: 1px solid #2d3561; border-radius: 16px; overflow: hidden; box-shadow: 0 20px 40px rgba(10, 14, 39, 0.5);"> <!-- --> <div style="padding: 40px; background: linear-gradient(135deg, #1a1f3a 0%, #2d3561 100%); border-bottom: 1px solid #3b4374;"> <div style=" margin-bottom: 24px;"> <div style=" margin-right: 16px;"> <div style="width: 12px; height: 12px; background: #ff5f56; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #ffbd2e; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #27ca3f; border-radius: 50%;"></div> </div> <div style="color: #64748b; font-size: 13px; font-family: 'SF Mono', monospace;">~/partnerships/new_proposal.md</div> </div> <div style="color: #38bdf8; font-size: 14px; margin-bottom: 12px; font-family: 'SF Mono', monospace;"># ${emailSubject || 'Partnership Protocol v2.0'}</div> <div style="color: #64748b; font-size: 13px; margin-bottom: 16px; font-family: 'SF Mono', monospace;">## Initiating collaboration sequence with ${prospectCompany}</div> <div style=" margin-top: 20px;"> <div style="padding: 4px 8px; background: #065f46; color: #10b981; border-radius: 4px; font-size: 11px; font-weight: 600;">ACTIVE</div> <div style="padding: 4px 8px; background: #1e3a8a; color: #60a5fa; border-radius: 4px; font-size: 11px; font-weight: 600;">TECH</div> <div style="padding: 4px 8px; background: #7c2d12; color: #fb923c; border-radius: 4px; font-size: 11px; font-weight: 600;">PRIORITY</div> </div> </div> <!-- --> <div style="padding: 40px; background: #0f172a; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; color: #e2e8f0;">${content.replace(/color: #1d1d1f/g, 'color: #e2e8f0').replace(/color: #2c2c2c/g, 'color: #cbd5e1').replace(/color: #424245/g, 'color: #94a3b8').replace(/color: #007AFF/g, 'color: #38bdf8')}</div> <!-- --> <div style="padding: 32px 40px; background: #1e293b; border-top: 1px solid #334155;"> <div style="font-family: 'SF Mono', monospace; color: #64748b; font-size: 13px;"> <div style="color: #38bdf8;">const partnership = {</div> <div style="margin-left: 20px; color: #e2e8f0;">contact: {</div> <div style="margin-left: 40px; color: #e2e8f0;">name: "${senderName}",</div> <div style="margin-left: 40px; color: #e2e8f0;">company: "${companyName}",</div> <div style="margin-left: 40px; color: #e2e8f0;">website: "<a href="${companyWebsite}" style="color: #38bdf8; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a>",</div> <div style="margin-left: 40px; color: #e2e8f0;">status: "awaiting_response"</div> <div style="margin-left: 20px; color: #e2e8f0;">}</div> <div style="color: #38bdf8;">}</div> </div> </div>
</div>
</body>
</html>`; } /** * #11: PARTNERSHIP_OUTREACH - */ getPartnershipLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getPartnershipOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Exclusive Partnership Invitation'}</title>
</head>
<body style="margin: 0; padding: 40px; font-family: 'Playfair Display', Georgia, serif; background: radial-gradient(circle at center, #1a1a2e 0%, #16213e 50%, #0f3460 100%);">
<div style="max-width: 600px; margin: 0 auto; background: #fafafa; border: 3px solid #d4af37; box-shadow: 0 30px 60px rgba(212, 175, 55, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.5);"> <!-- --> <div style="padding: 60px 56px 48px 56px; text-align: center; background: linear-gradient(135deg, #fdfcf0 0%, #ffffff 50%, #fdfcf0 100%); border-bottom: 4px double #d4af37; position: relative;"> <!-- --> <div style="position: absolute; top: 24px; left: 24px; width: 80px; height: 80px; border: 3px solid #d4af37; transform: rotate(45deg); opacity: 0.2;"></div> <div style="position: absolute; top: 24px; right: 24px; width: 60px; height: 60px; border: 2px solid #d4af37; border-radius: 50%; opacity: 0.2;"></div> <div style="position: absolute; bottom: 24px; left: 56px; width: 40px; height: 40px; border: 2px solid #d4af37; transform: rotate(45deg); opacity: 0.2;"></div> <div style="position: absolute; bottom: 24px; right: 56px; width: 50px; height: 50px; border: 2px solid #d4af37; border-radius: 50%; opacity: 0.2;"></div> <!-- --> <div style="width: 150px; height: 3px; background: linear-gradient(90deg, transparent 0%, #d4af37 20%, #f4e19c 50%, #d4af37 80%, transparent 100%); margin: 0 auto 32px auto; position: relative;"> <div style="position: absolute; left: 50%; top: -6px; transform: translateX(-50%); width: 12px; height: 12px; background: #d4af37; transform: translateX(-50%) rotate(45deg);"></div> </div> <h1 style="color: #1a1a2e; margin: 0; font-size: 42px; font-weight: 400; letter-spacing: 2px; font-family: 'Playfair Display', Georgia, serif; text-shadow: 2px 2px 4px rgba(212, 175, 55, 0.1); line-height: 1.2;">${emailSubject || 'Exclusive Partnership Invitation'}</h1> <div style="width: 100px; height: 2px; background: linear-gradient(90deg, transparent 0%, #d4af37 50%, transparent 100%); margin: 32px auto 20px auto;"></div> <p style="color: #8b7355; margin: 0; font-size: 18px; font-style: italic; letter-spacing: 1px; font-family: 'Playfair Display', Georgia, serif;">${companyName}</p> </div> <!-- --> <div style="padding: 56px; background: linear-gradient(135deg, #fefefe 0%, #ffffff 50%, #fdfcf0 100%); font-family: 'Crimson Text', Georgia, serif;">${content}</div> <!-- --> <div style="padding: 48px 56px; background: linear-gradient(135deg, #fdfcf0 0%, #ffffff 50%, #fdfcf0 100%); border-top: 3px double #d4af37; text-align: center; position: relative;"> <div style="position: absolute; top: -1.5px; left: 50%; transform: translateX(-50%); width: 30px; height: 3px; background: #d4af37;"></div> <div style="margin-bottom: 28px;"> <div style="width: 80px; height: 1px; background: #d4af37; margin: 0 auto; position: relative;"> <div style="position: absolute; left: 50%; top: -4px; transform: translateX(-50%); width: 8px; height: 8px; background: #d4af37; border-radius: 50%;"></div> </div> </div> <div style="color: #1a1a2e;"> <div style="font-size: 28px; font-weight: 400; margin-bottom: 12px; font-family: 'Playfair Display', Georgia, serif; letter-spacing: 1px;">${senderName}</div> <div style="font-size: 16px; color: #8b7355; margin-bottom: 20px; text-transform: uppercase; letter-spacing: 3px; font-weight: 300;">${companyName}</div> <div style="margin-top: 24px;"> <a href="${companyWebsite}" style="color: #1a1a2e; background: linear-gradient(90deg, transparent 0%, #d4af37 50%, transparent 100%); text-decoration: none; font-size: 16px; border: 2px solid #d4af37; padding: 14px 32px; display: inline-block; letter-spacing: 2px; font-weight: 500; text-transform: uppercase; transition: all 0.4s ease; position: relative; overflow: hidden;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div>
</body>
</html>`; } /** * #12: PARTNERSHIP_OUTREACH - */ getPartnershipCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getPartnershipOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Creative Partnership Proposal'}</title>
</head>
<body style="margin: 0; padding: 25px; font-family: 'Nunito', 'Comic Neue', sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 20%, #f093fb 40%, #f5576c 60%, #4facfe 80%, #00f2fe 100%); background-size: 400% 400%; min-height: 100vh;">
<div style="max-width: 600px; margin: 0 auto; background: #fafafa; border-radius: 30px; overflow: hidden; box-shadow: 0 20px 40px rgba(0,0,0,0.15); transform: rotate(-0.5deg); position: relative;"> <div style="transform: rotate(0.5deg);"> <!-- --> <div style="padding: 48px 40px 36px 40px; text-align: center; background: linear-gradient(135deg, #fff5f5 0%, #f0f8ff 25%, #f0fff0 50%, #fff8f0 75%, #f5f0ff 100%); position: relative; overflow: hidden;"> <!-- --> <div style="position: absolute; top: 20px; left: 20px; width: 40px; height: 40px; background: linear-gradient(45deg, #ff6b6b, #4ecdc4); border-radius: 50%; opacity: 0.7; animation: float 3s ease-in-out infinite;"></div> <div style="position: absolute; top: 30px; right: 30px; width: 30px; height: 30px; background: linear-gradient(45deg, #45b7d1, #96ceb4); transform: rotate(45deg); opacity: 0.6;"></div> <div style="position: absolute; bottom: 25px; left: 60px; width: 35px; height: 35px; background: linear-gradient(45deg, #ffeaa7, #dda0dd); transform: rotate(30deg); opacity: 0.6;"></div> <div style="position: absolute; bottom: 35px; right: 50px; width: 25px; height: 25px; background: linear-gradient(45deg, #a8e6cf, #ffaaa5); border-radius: 50%; opacity: 0.7;"></div> <!-- --> <div style="position: absolute; top: 0; left: 0; right: 0; height: 10px; background: linear-gradient(90deg, #ff6b6b 0%, #4ecdc4 25%, #45b7d1 50%, #96ceb4 75%, #ffeaa7 100%); opacity: 0.3;"></div> <div style="transform: rotate(-1deg); display: inline-block; margin-bottom: 20px;"> <h1 style="color: #2c3e50; margin: 0; font-size: 36px; font-weight: 700; text-shadow: 3px 3px 0px #ffffff, -2px -2px 0px #ff6b6b, 2px 2px 10px rgba(255, 107, 107, 0.3); line-height: 1.1;">${emailSubject || 'Let\'s Create Magic Together! '}</h1> </div> <div style="transform: rotate(2deg); margin-top: 16px;"> <span style="background: linear-gradient(45deg, #ff6b6b, #4ecdc4); color: white; padding: 8px 20px; border-radius: 25px; font-size: 16px; font-weight: 600; box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4); display: inline-block;">${companyName} × ${prospectCompany}</span> </div> </div> <!-- --> <div style="padding: 40px; background: transparent; font-family: 'Nunito', sans-serif; position: relative;"> <!-- --> <div style="position: absolute; top: 20px; left: 20px; width: 60px; height: 60px; border: 4px dashed #ff6b6b; border-radius: 50%; opacity: 0.3; transform: rotate(-15deg);"></div> <div style="position: absolute; bottom: 20px; right: 20px; width: 50px; height: 50px; border: 3px dashed #4ecdc4; transform: rotate(25deg); opacity: 0.3;"></div> ${content.replace(/font-family: [^;]+;/g, 'font-family: "Nunito", sans-serif;').replace(/color: #007AFF/g, 'color: #ff6b6b')} </div> <!-- --> <div style="padding: 40px; background: linear-gradient(135deg, #f8f9fa 0%, #fff5f5 25%, #f0f8ff 50%, #f0fff0 75%, #fff8f0 100%); text-align: center; position: relative;"> <!-- --> <div style="position: absolute; top: 15px; left: 15px; width: 50px; height: 50px; border: 4px dotted #dda0dd; border-radius: 50%; opacity: 0.4; animation: spin 8s linear infinite;"></div> <div style="position: absolute; top: 25px; right: 25px; width: 40px; height: 40px; border: 3px dotted #96ceb4; transform: rotate(45deg); opacity: 0.4;"></div> <div style="transform: rotate(-1.5deg); display: inline-block; margin-bottom: 16px;"> <div style="font-size: 24px; font-weight: 700; color: #2c3e50; margin-bottom: 8px; font-family: 'Comic Neue', cursive;">${senderName} </div> <div style="font-size: 18px; color: #7f8c8d; margin-bottom: 20px; font-weight: 600;">${companyName}</div> </div> <div style="transform: rotate(1deg); display: inline-block;"> <a href="${companyWebsite}" style="color: #ffffff; background: linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 50%, #45b7d1 100%); text-decoration: none; padding: 14px 28px; border-radius: 30px; font-weight: 700; font-size: 16px; box-shadow: 0 6px 20px rgba(255, 107, 107, 0.4); display: inline-block; transform: scale(1.05); transition: all 0.3s ease;">${companyWebsite.replace('https://', '').replace('http://', '')} </a> </div> <!-- --> <div style="position: absolute; bottom: 0; left: 0; right: 0; height: 8px; background: linear-gradient(90deg, #ff6b6b 0%, #4ecdc4 25%, #45b7d1 50%, #96ceb4 75%, #ffeaa7 100%); opacity: 0.4;"></div> </div> </div>
</div> <style>
@keyframes float { 0%, 100% { transform: translateY(0px); } 50% { transform: translateY(-10px); }
}
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); }
}
</style>
</body>
</html>`; } // ==================== VALUE_DEMONSTRATION ( 13-18) ==================== /** * VALUE_DEMONSTRATION content method - focusing on specific benefits and ROI */ getValueDemonstrationContent(prospectName, prospectCompany, companyName, senderName) { return ` <div style="color: #2d3748; line-height: 1.8; font-size: 16px;"> <p style="margin: 0 0 24px 0; font-size: 17px;">Hi ${prospectName},</p> <p style="margin: 0 0 20px 0;"> I've been researching ${prospectCompany} and I'm impressed by your innovation in the market. I wanted to share how we've helped similar companies achieve measurable results. </p> <div style="background: #f8fafc; border-left: 4px solid #4299e1; padding: 20px 24px; margin: 24px 0; border-radius: 0 8px 8px 0;"> <h3 style="margin: 0 0 12px 0; color: #2b6cb0; font-size: 18px;">Recent Success Story:</h3> <ul style="margin: 8px 0; padding-left: 20px; color: #4a5568;"> <li style="margin-bottom: 8px;"><strong>35% increase</strong> in operational efficiency</li> <li style="margin-bottom: 8px;"><strong>$180k saved</strong> annually on process optimization</li> <li style="margin-bottom: 8px;"><strong>2x faster</strong> time-to-market for new initiatives</li> </ul> </div> <p style="margin: 24px 0 20px 0;"> I'd love to discuss how ${companyName} can deliver similar value for ${prospectCompany}. Are you available for a brief 15-minute conversation next week? </p> <div style="margin-top: 32px; padding-top: 24px; border-top: 1px solid #e2e8f0;"> <p style="margin: 0; font-size: 15px; color: #718096;"> Best regards,<br> <strong style="color: #2d3748;">${senderName}</strong><br> ${companyName} </p> </div> </div>`; } /** * #13: VALUE_DEMONSTRATION - */ getValueDemoMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getValueDemonstrationContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Value Demonstration'}</title>
</head>
<body style="margin: 0; padding: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; background: #fafbfc;">
<div style="max-width: 580px; margin: 0 auto; background: #fafafa; border-radius: 12px; overflow: hidden; box-shadow: 0 8px 32px rgba(0,0,0,0.06);"> <!-- --> <div style="padding: 48px 40px 32px 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); text-align: center;"> <div style="width: 48px; height: 3px; background: #f5f5f5; margin: 0 auto 24px auto; border-radius: 2px;"></div> <h1 style="color: #ffffff; margin: 0 0 8px 0; font-size: 28px; font-weight: 700; letter-spacing: -0.5px;"> ${emailSubject || 'Proven Results for Companies Like Yours'} </h1> <p style="color: rgba(255,255,255,0.9); margin: 0; font-size: 16px; font-weight: 500;"> ${companyName} → ${prospectCompany} </p> </div> <!-- --> <div style="padding: 40px;"> ${content} <!-- CTA --> <div style="text-align: center; margin-top: 36px;"> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 16px 32px; border-radius: 8px; text-decoration: none; font-weight: 600; font-size: 15px; box-shadow: 0 8px 24px rgba(102,126,234,0.25);"> See How We Can Help </a> </div> </div> <!-- --> <div style="padding: 24px 40px 40px 40px; background: #f8fafc; border-top: 1px solid #e2e8f0;"> <div style="color: #718096; font-size: 14px; text-align: center;"> <div style="font-weight: 600; color: #2d3748; margin-bottom: 4px;">${senderName}</div> <div>${companyName} • Value Solutions</div> <div style="margin-top: 8px;"> <a href="${companyWebsite}" style="color: #667eea; text-decoration: none; font-weight: 500;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>
</body>
</html>`; } /** * #14: VALUE_DEMONSTRATION - */ getValueDemoModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getValueDemonstrationContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Value Demonstration'}</title>
</head>
<body style="margin: 0; padding: 24px; font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, Arial, sans-serif; background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); min-height: 100vh;">
<div style="max-width: 640px; margin: 0 auto; background: #fafafa; border-radius: 24px; overflow: hidden; box-shadow: 0 32px 64px rgba(240,147,251,0.15);"> <!-- --> <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%); padding: 56px 48px 48px 48px; position: relative; overflow: hidden;"> <!-- --> <div style="position: absolute; top: -20px; right: -20px; width: 120px; height: 120px; background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0.05)); border-radius: 50%; backdrop-filter: blur(10px);"></div> <div style="position: absolute; bottom: -40px; left: -40px; width: 160px; height: 160px; background: linear-gradient(225deg, rgba(255,255,255,0.08), transparent); border-radius: 50%;"></div> <div style="position: relative; z-index: 2; text-align: center;"> <div style="display: inline-block; background: #f5f5f5; padding: 8px 16px; border-radius: 20px; margin-bottom: 24px; backdrop-filter: blur(10px);"> <span style="color: rgba(255,255,255,0.95); font-size: 13px; font-weight: 600; text-transform: uppercase; letter-spacing: 1px;">ROI DEMONSTRATION</span> </div> <h1 style="color: #ffffff; margin: 0 0 16px 0; font-size: 32px; font-weight: 800; letter-spacing: -0.8px; line-height: 1.2; text-shadow: 0 4px 20px rgba(0,0,0,0.2);"> ${emailSubject || 'Measurable Results for Your Industry'} </h1> <p style="color: rgba(255,255,255,0.9); margin: 0; font-size: 18px; font-weight: 500; letter-spacing: 0.3px;"> ${prospectCompany} Partnership Opportunity </p> </div> </div> <!-- --> <div style="padding: 48px;"> ${content} <!-- CTA --> <div style="text-align: center; margin-top: 40px;"> <div style="background: linear-gradient(135deg, #667eea, #764ba2); padding: 2px; border-radius: 12px; display: inline-block;"> <a href="${companyWebsite}" style="display: block; background: transparent; color: #667eea; padding: 18px 36px; border-radius: 10px; text-decoration: none; font-weight: 700; font-size: 16px; transition: all 0.3s ease;"> Schedule Results Discussion </a> </div> <p style="margin: 16px 0 0 0; color: #9ca3af; font-size: 13px;"> 15-minute call • No commitment required </p> </div> </div> <!-- --> <div style="background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%); padding: 32px 48px; text-align: center;"> <div style="color: #64748b; font-size: 15px;"> <div style="font-weight: 700; color: #1e293b; margin-bottom: 8px; font-size: 16px;">${senderName}</div> <div style="margin-bottom: 8px;">${companyName} • ROI Specialist</div> <div> <a href="${companyWebsite}" style="color: #667eea; text-decoration: none; font-weight: 600;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>
</body>
</html>`; } /** * #15: VALUE_DEMONSTRATION - */ getValueDemoExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getValueDemonstrationContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Value Demonstration'}</title>
</head>
<body style="margin: 0; padding: 32px; font-family: 'Georgia', 'Times New Roman', serif; background: #1a202c; color: #e2e8f0;">
<div style="max-width: 680px; margin: 0 auto; background: #2d3748; border: 1px solid #4a5568; border-radius: 16px; overflow: hidden; box-shadow: 0 24px 48px rgba(0,0,0,0.3);"> <!-- --> <div style="background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%); padding: 56px 48px; text-align: center; position: relative; border-bottom: 2px solid #718096;"> <!-- --> <div style="position: absolute; top: 0; left: 48px; right: 48px; height: 2px; background: linear-gradient(90deg, transparent, #e2e8f0, transparent);"></div> <div style="display: inline-block; background: rgba(226,232,240,0.1); padding: 12px 24px; border: 1px solid rgba(226,232,240,0.2); border-radius: 4px; margin-bottom: 32px;"> <span style="color: #cbd5e0; font-size: 12px; font-weight: 600; text-transform: uppercase; letter-spacing: 2px;">EXECUTIVE BRIEF</span> </div> <h1 style="color: #e2e8f0; margin: 0 0 16px 0; font-size: 36px; font-weight: 400; letter-spacing: -0.5px; line-height: 1.2;"> ${emailSubject || 'Strategic Value Analysis'} </h1> <div style="width: 80px; height: 1px; background: #cbd5e0; margin: 0 auto 20px auto;"></div> <p style="color: #a0aec0; margin: 0; font-size: 18px; font-weight: 300; font-style: italic;"> Confidential: ${prospectCompany} Partnership Assessment </p> </div> <!-- --> <div style="padding: 48px;"> <div style="border: 1px solid #4a5568; border-radius: 8px; padding: 36px; background: linear-gradient(135deg, #2d3748 0%, #1a202c 100%);"> ${content} </div> <!-- CTA --> <div style="text-align: center; margin-top: 48px; padding-top: 32px; border-top: 1px solid #4a5568;"> <a href="${companyWebsite}" style="display: inline-block; background: transparent; color: #e2e8f0; border: 2px solid #cbd5e0; padding: 18px 48px; text-decoration: none; font-weight: 600; font-size: 15px; letter-spacing: 1px; text-transform: uppercase; transition: all 0.3s ease;"> Request Executive Consultation </a> <p style="margin: 20px 0 0 0; color: #718096; font-size: 13px; font-style: italic;"> C-Level Discussion • Strategic Planning Session </p> </div> </div> <!-- --> <div style="background: #1a202c; padding: 40px 48px; border-top: 2px solid #4a5568; text-align: center;"> <div style="color: #a0aec0; font-size: 15px;"> <div style="font-weight: 600; color: #e2e8f0; margin-bottom: 8px; font-size: 17px;">${senderName}</div> <div style="margin-bottom: 4px;">Senior Partner, ${companyName}</div> <div style="margin-bottom: 16px;">Executive Strategy & Value Realization</div> <div style="width: 60px; height: 1px; background: #4a5568; margin: 0 auto 16px auto;"></div> <div> <a href="${companyWebsite}" style="color: #cbd5e0; text-decoration: none; font-weight: 500;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>
</body>
</html>`; } /** * #16: VALUE_DEMONSTRATION - */ getValueDemoTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getValueDemonstrationContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Value Demonstration'}</title>
</head>
<body style="margin: 0; padding: 24px; font-family: 'Courier New', 'Monaco', monospace; background: #0a0e1a; color: #00ff41;">
<div style="max-width: 720px; margin: 0 auto; background: #1a1d23; border: 2px solid #00ff41; border-radius: 8px; overflow: hidden; box-shadow: 0 0 32px rgba(0,255,65,0.2);"> <!-- --> <div style="background: #000000; padding: 16px 24px; border-bottom: 1px solid #00ff41; font-family: 'Courier New', monospace;"> <div style=" margin-bottom: 16px;"> <div style=" margin-right: 16px;"> <div style="width: 12px; height: 12px; background: #ff5f56; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #ffbd2e; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #27ca3f; border-radius: 50%;"></div> </div> <span style="color: #ffffff; font-size: 14px;">value_demo_${prospectCompany.toLowerCase().replace(/\s+/g, '_')}.sh</span> </div> <div style="color: #00ff41; font-size: 13px; line-height: 1.6;"> <div>$ ./generate_roi_report --company="${prospectCompany}" --output=terminal</div> <div style="color: #ffbd2e; margin-top: 8px;"> INITIALIZING VALUE ANALYSIS </div> </div> </div> <!-- --> <div style="padding: 32px 24px; background: #1a1d23; color: #e2e8f0;"> <div style="background: #000000; padding: 24px; border: 1px solid #333; border-radius: 4px; margin-bottom: 24px;"> <div style="color: #00ff41; font-size: 14px; margin-bottom: 16px;"> > SCANNING TARGET: ${prospectCompany}<br> > STATUS: [] 100% COMPLETE<br> > MATCH FOUND: HIGH-VALUE OPTIMIZATION OPPORTUNITY </div> </div> <!-- --> <div style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif;"> ${content} </div> <!-- CTA --> <div style="background: #000000; border: 1px solid #00ff41; padding: 24px; margin-top: 32px; text-align: center;"> <div style="color: #00ff41; font-size: 14px; margin-bottom: 16px;"> > EXECUTE VALUE_CONSULTATION_PROTOCOL? [Y/N] </div> <a href="${companyWebsite}" style="display: inline-block; background: #00ff41; color: #000000; padding: 12px 24px; text-decoration: none; font-weight: 700; font-size: 14px; font-family: 'Courier New', monospace; border-radius: 4px;"> [Y] INITIATE_MEETING.exe </a> <div style="color: #666; font-size: 12px; margin-top: 12px;"> // 15-minute secure session established </div> </div> </div> <!-- --> <div style="background: #000000; padding: 20px 24px; border-top: 1px solid #333; color: #666; font-size: 12px;"> <div style=" "> <div> <div style="color: #00ff41;">[SUCCESS] Connection established with ${senderName}</div> <div style="margin-top: 4px;">${companyName} • Performance Optimization Division</div> <div style="margin-top: 4px;"> <a href="${companyWebsite}" style="color: #00ff41; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div> </div>
</body>
</html>`; } /** * #17: VALUE_DEMONSTRATION - */ getValueDemoLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getValueDemonstrationContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Value Demonstration'}</title>
</head>
<body style="margin: 0; padding: 40px; font-family: 'Playfair Display', Georgia, serif; background: radial-gradient(circle at center, #1a1a2e 0%, #16213e 100%); min-height: 100vh;">
<div style="max-width: 600px; margin: 0 auto; background: linear-gradient(135deg, #2d1b69 0%, #1a1a2e 100%); border: 2px solid #d4af37; border-radius: 20px; overflow: hidden; box-shadow: 0 40px 80px rgba(212,175,55,0.15);"> <!-- --> <div style="background: linear-gradient(135deg, #d4af37 0%, #f4d03f 50%, #d4af37 100%); padding: 64px 48px; text-align: center; position: relative;"> <!-- --> <div style="position: absolute; top: 20px; left: 50%; transform: translateX(-50%); width: 120px; height: 2px; background: #f5f5f5;"></div> <div style="position: absolute; bottom: 20px; left: 50%; transform: translateX(-50%); width: 120px; height: 2px; background: #f5f5f5;"></div> <div style="display: inline-block; background: #f5f5f5; padding: 12px 32px; border: 1px solid rgba(255,255,255,0.2); margin-bottom: 32px;"> <span style="color: rgba(255,255,255,0.9); font-size: 14px; font-weight: 600; text-transform: uppercase; letter-spacing: 3px;">PREMIUM VALUE ANALYSIS</span> </div> <h1 style="color: #ffffff; margin: 0 0 20px 0; font-size: 40px; font-weight: 400; letter-spacing: -0.5px; line-height: 1.2; text-shadow: 0 4px 20px rgba(0,0,0,0.4);"> ${emailSubject || 'Exclusive Performance Insights'} </h1> <div style="display: inline-block; background: #f5f5f5; padding: 2px 32px; border-radius: 20px;"> <p style="color: rgba(255,255,255,0.95); margin: 12px 0; font-size: 20px; font-weight: 300; font-style: italic;"> ${prospectCompany} Partnership Proposal </p> </div> </div> <!-- --> <div style="padding: 56px 48px; background: linear-gradient(135deg, #2d1b69 0%, #1a1a2e 100%); color: #e8e8e8;"> <div style="background: rgba(212,175,55,0.05); border: 1px solid rgba(212,175,55,0.2); border-radius: 12px; padding: 40px;"> ${content} </div> <!-- CTA --> <div style="text-align: center; margin-top: 48px;"> <div style="margin-bottom: 24px; color: #d4af37; font-size: 16px; font-weight: 300; letter-spacing: 1px; text-transform: uppercase;"> Executive Consultation Available </div> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(135deg, #d4af37, #f4d03f); color: #1a1a2e; padding: 20px 48px; border-radius: 40px; text-decoration: none; font-weight: 700; font-size: 16px; letter-spacing: 0.5px; box-shadow: 0 12px 32px rgba(212,175,55,0.3); text-transform: uppercase;"> Request Private Meeting </a> <p style="margin: 24px 0 0 0; color: #9ca3af; font-size: 14px; font-style: italic;"> Invitation-only • Strategic partnership discussion </p> </div> </div> <!-- --> <div style="background: linear-gradient(135deg, #1a1a2e 0%, #000 100%); padding: 48px; text-align: center; border-top: 2px solid #d4af37;"> <div style="color: #b8860b; font-size: 16px;"> <div style="font-weight: 300; color: #d4af37; margin-bottom: 12px; font-size: 20px; font-style: italic;">${senderName}</div> <div style="margin-bottom: 8px; font-weight: 300;">Executive Director</div> <div style="margin-bottom: 20px; color: #e8e8e8;">${companyName} • Strategic Partnerships</div> <div style="width: 100px; height: 1px; background: #d4af37; margin: 0 auto 20px auto;"></div> <div> <a href="${companyWebsite}" style="color: #d4af37; text-decoration: none; font-weight: 400; letter-spacing: 1px;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>
</body>
</html>`; } /** * #18: VALUE_DEMONSTRATION - */ getValueDemoCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getValueDemonstrationContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Value Demonstration'}</title>
</head>
<body style="margin: 0; padding: 24px; font-family: 'Comic Sans MS', 'Apple Chancery', cursive; background: linear-gradient(45deg, #ff9a9e 0%, #fecfef 50%, #fecfef 100%); min-height: 100vh;">
<div style="max-width: 680px; margin: 0 auto; background: #fafafa; border-radius: 32px; overflow: hidden; box-shadow: 0 24px 48px rgba(255,154,158,0.2); transform: rotate(-1deg);"> <!-- --> <div style="background: linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 50%, #45b7d1 100%); padding: 48px 40px; text-align: center; position: relative; transform: rotate(1deg);"> <!-- --> <div style="position: absolute; top: 20px; left: 30px; width: 40px; height: 40px; background: #f5f5f5; border-radius: 50%; transform: rotate(15deg);"></div> <div style="position: absolute; top: 60px; right: 40px; width: 24px; height: 24px; background: #f5f5f5; transform: rotate(-20deg);"></div> <div style="position: absolute; bottom: 30px; left: 60px; width: 32px; height: 32px; background: #f5f5f5; border-radius: 50%; transform: rotate(25deg);"></div> <div style="display: inline-block; background: #f5f5f5; color: #ff6b6b; padding: 12px 24px; border-radius: 20px; margin-bottom: 24px; transform: rotate(-2deg); font-size: 14px; font-weight: 700; text-transform: uppercase; letter-spacing: 1px;"> ROI MAGIC REVEALED </div> <h1 style="color: #ffffff; margin: 0 0 16px 0; font-size: 36px; font-weight: 900; letter-spacing: -0.5px; line-height: 1.2; text-shadow: 0 4px 20px rgba(0,0,0,0.2); transform: rotate(1deg);"> ${emailSubject || ' Your Success Story Awaits! '} </h1> <p style="color: rgba(255,255,255,0.95); margin: 0; font-size: 18px; font-weight: 600; transform: rotate(-0.5deg);"> ${prospectCompany} × ${companyName} = Amazing Results! </p> </div> <!-- --> <div style="padding: 48px 40px; background: linear-gradient(135deg, #ffffff 0%, #f8f9ff 100%); transform: rotate(-1deg); margin: -1px;"> <div style="background: linear-gradient(135deg, #fff5f5 0%, #f0f9ff 100%); border: 3px dashed #ff6b6b; border-radius: 20px; padding: 32px; position: relative; transform: rotate(1deg);"> <!-- --> <div style="position: absolute; top: -12px; right: 20px; background: #4ecdc4; color: white; padding: 8px 16px; border-radius: 16px; font-size: 12px; font-weight: 700; transform: rotate(15deg); box-shadow: 0 4px 12px rgba(78,205,196,0.3);"> NEW! </div> ${content} </div> <!-- CTA --> <div style="text-align: center; margin-top: 40px; transform: rotate(0.5deg);"> <div style="margin-bottom: 20px; color: #ff6b6b; font-size: 18px; font-weight: 700; transform: rotate(-1deg);"> Ready for the Big Show? </div> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(135deg, #ff6b6b, #4ecdc4); color: white; padding: 18px 36px; border-radius: 25px; text-decoration: none; font-weight: 900; font-size: 16px; box-shadow: 0 8px 24px rgba(255,107,107,0.3); transform: rotate(-2deg); transition: transform 0.3s ease;"> Let's Create Magic Together! </a> <p style="margin: 20px 0 0 0; color: #9ca3af; font-size: 14px; transform: rotate(0.5deg);"> Fun 15-minute chat • No boring presentations! </p> </div> </div> <!-- --> <div style="background: linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 100%); padding: 32px 40px; text-align: center; transform: rotate(1deg); margin: -1px;"> <div style="background: #f5f5f5; border-radius: 20px; padding: 24px; transform: rotate(-1deg);"> <div style="color: #ff6b6b; font-size: 16px;"> <div style="font-weight: 900; color: #ff6b6b; margin-bottom: 8px; font-size: 20px;"> ${senderName} </div> <div style="margin-bottom: 6px; font-weight: 700;">Chief Fun Officer & Value Creator</div> <div style="margin-bottom: 12px; color: #4ecdc4; font-weight: 700;">${companyName} • Where Business Meets Fun! </div> <div> <a href="${companyWebsite}" style="color: #45b7d1; text-decoration: none; font-weight: 700;"> ${companyWebsite.replace('https://', '').replace('http://', '')} </a> </div> </div> </div> </div> </div>
</body>
</html>`; } // ===== COLD_OUTREACH SECTION CONTENT ===== getColdOutreachContent(prospectName, prospectCompany, companyName, senderName) { return ` <div style="color: #2d3748; line-height: 1.8; font-size: 16px;"> <p style="margin: 0 0 24px 0; font-size: 17px;">Hi ${prospectName},</p> <p style="margin: 0 0 20px 0;"> I came across ${prospectCompany} while researching innovative companies in your industry. Your approach to solving complex challenges really caught my attention. </p> <div style="background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%); border-radius: 12px; padding: 24px; margin: 24px 0; border-left: 4px solid #4299e1;"> <h3 style="margin: 0 0 16px 0; color: #2d3748; font-size: 18px; font-weight: 600;">What ${companyName} brings to the table:</h3> <table width="100%" cellpadding="0" cellspacing="0" style=" "> <div style=" "> <div style="width: 8px; height: 8px; background: #48bb78; border-radius: 50%; "></div> <span style="color: #4a5568; font-weight: 500;">Cutting-edge technology solutions tailored to your industry</span> </div> <div style=" "> <div style="width: 8px; height: 8px; background: #48bb78; border-radius: 50%; "></div> <span style="color: #4a5568; font-weight: 500;">Proven track record with companies similar to ${prospectCompany}</span> </div> <div style=" "> <div style="width: 8px; height: 8px; background: #48bb78; border-radius: 50%; "></div> <span style="color: #4a5568; font-weight: 500;">Rapid implementation with minimal disruption to your operations</span> </div> </div> </div> <p style="margin: 24px 0 20px 0;"> I believe there's a great opportunity for collaboration here. Many companies in your space have seen significant improvements in efficiency and growth after working with us. </p> <div style="background: #f0fff4; border: 1px solid #9ae6b4; border-radius: 8px; padding: 16px; margin: 20px 0;"> <p style="margin: 0; color: #2f855a; font-weight: 600; font-size: 15px;"> Quick Question: What's the biggest challenge ${prospectCompany} is facing in scaling your operations right now? </p> </div> <p style="margin: 20px 0 0 0;"> I'd love to learn more about your current initiatives and see if there's a natural fit. Would you be open to a brief conversation this week? </p> </div>`; } // ===== COLD_OUTREACH SECTION TEMPLATES (Designs 19-24) ===== /** * Design #19: Cold Outreach Minimalist */ getColdOutreachMinimalist(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getColdOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: #fafafa; font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;"> <div style="max-width: 580px; margin: 40px auto; background: #fafafa; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 20px rgba(0,0,0,0.08);"> <!-- Clean Header --> <div style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 32px 40px; text-align: center; border-bottom: 1px solid #e1e5e9;"> <div style="width: 40px; height: 2px; background: #007aff; margin: 0 auto 20px auto; border-radius: 1px;"></div> <h1 style="color: #1d1d1f; margin: 0; font-size: 24px; font-weight: 700; letter-spacing: -0.4px;">${emailSubject}</h1> <p style="color: #86868b; margin: 8px 0 0 0; font-size: 15px; font-weight: 500;">${prospectCompany} • Cold Outreach</p> </div> <!-- Content --> <div style="padding: 40px;"> ${content} </div> <!-- CTA --> <div style="padding: 0 40px 32px 40px;"> <div style="background: linear-gradient(135deg, #007aff 0%, #0051d5 100%); border-radius: 8px; text-align: center; padding: 16px;"> <a href="mailto:${senderName.toLowerCase().replace(' ', '.')}@${companyWebsite.replace('https://', '').replace('http://', '').split('/')[0]}" style="color: white; text-decoration: none; font-weight: 600; font-size: 16px; display: block;"> Let's Connect </a> </div> </div> <!-- Signature --> <div style="padding: 0 40px 40px 40px; border-top: 1px solid #f0f0f0; margin-top: 20px; pt: 20px;"> <div style="color: #86868b; font-size: 14px; line-height: 1.5;"> <div style="font-weight: 600; color: #1d1d1f; margin-bottom: 2px;">${senderName}</div> <div>${companyName}</div> <div style="margin-top: 8px;"> <a href="${companyWebsite}" style="color: #007aff; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div> </body>
</html>`; } /** * Design #20: Cold Outreach Modern */ getColdOutreachModern(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getColdOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;"> <div style="max-width: 600px; margin: 50px auto; background: #fafafa; border-radius: 20px; overflow: hidden; box-shadow: 0 25px 50px rgba(0,0,0,0.15);"> <!-- Vibrant Header --> <div style="background: linear-gradient(45deg, #ff6b6b, #ee5a24, #feca57); padding: 50px 40px; text-align: center; position: relative;"> <div style="position: absolute; top: 20px; right: 20px; width: 60px; height: 60px; background: #f5f5f5; border-radius: 50%; backdrop-filter: blur(10px);"></div> <div style="position: absolute; bottom: 20px; left: 30px; width: 40px; height: 40px; background: #f5f5f5; border-radius: 8px; backdrop-filter: blur(8px);"></div> <h1 style="color: white; font-size: 32px; font-weight: 800; margin: 0; letter-spacing: -0.8px; text-shadow: 0 2px 10px rgba(0,0,0,0.2);">${emailSubject}</h1> <p style="color: rgba(255,255,255,0.9); margin: 16px 0 0 0; font-size: 18px; font-weight: 600;">${prospectCompany} × ${companyName}</p> </div> <!-- Content --> <div style="padding: 50px 40px;"> ${content} </div> <!-- Modern CTA --> <div style="padding: 0 40px 40px 40px;"> <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 12px; padding: 20px; text-align: center; position: relative; overflow: hidden;"> <div style="position: absolute; top: -50%; right: -20px; width: 100px; height: 200px; background: #f5f5f5; transform: rotate(45deg); border-radius: 20px;"></div> <a href="mailto:${senderName.toLowerCase().replace(' ', '.')}@${companyWebsite.replace('https://', '').replace('http://', '').split('/')[0]}" style="color: white; text-decoration: none; font-weight: 700; font-size: 18px; display: block; position: relative; z-index: 2;"> Start the Conversation </a> </div> </div> <!-- Signature --> <div style="padding: 0 40px 50px 40px; border-top: 2px solid #f1f5f9; margin-top: 20px; padding-top: 30px;"> <div style="color: #64748b; font-size: 15px; line-height: 1.6;"> <div style="font-weight: 700; color: #0f172a; margin-bottom: 4px; font-size: 16px;">${senderName}</div> <div style="font-weight: 600; color: #334155;">${companyName}</div> <div style="margin-top: 12px;"> <a href="${companyWebsite}" style="color: #667eea; text-decoration: none; font-weight: 600;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div> </body>
</html>`; } /** * Design #21: Cold Outreach Executive */ getColdOutreachExecutive(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getColdOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: #0f172a; font-family: 'Georgia', 'Times New Roman', serif; color: #e2e8f0;"> <div style="max-width: 600px; margin: 40px auto; background: #1e293b; border-radius: 16px; overflow: hidden; box-shadow: 0 20px 40px rgba(0,0,0,0.4); border: 1px solid #334155;"> <!-- Executive Header --> <div style="background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%); padding: 50px 50px 40px 50px; text-align: center; position: relative; border-bottom: 2px solid #64748b;"> <div style="position: absolute; top: 30px; left: 30px; width: 3px; height: 60px; background: linear-gradient(to bottom, #f59e0b, #d97706); border-radius: 2px;"></div> <h1 style="color: #f8fafc; margin: 0; font-size: 28px; font-weight: 700; letter-spacing: 0.5px; font-family: 'Georgia', serif;">${emailSubject}</h1> <div style="width: 80px; height: 2px; background: linear-gradient(90deg, #f59e0b, #d97706); margin: 20px auto; border-radius: 1px;"></div> <p style="color: #cbd5e1; margin: 0; font-size: 16px; font-style: italic;">Executive Communication • ${prospectCompany}</p> </div> <!-- Content --> <div style="padding: 50px; background: #1e293b;"> <div style="color: #e2e8f0;"> ${content.replace(/color: #2d3748/g, 'color: #e2e8f0').replace(/color: #4a5568/g, 'color: #cbd5e1').replace(/color: #2f855a/g, 'color: #10b981')} </div> </div> <!-- Executive CTA --> <div style="padding: 0 50px 40px 50px;"> <div style="background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); border-radius: 8px; padding: 18px; text-align: center; box-shadow: 0 10px 20px rgba(245,158,11,0.2);"> <a href="mailto:${senderName.toLowerCase().replace(' ', '.')}@${companyWebsite.replace('https://', '').replace('http://', '').split('/')[0]}" style="color: #0f172a; text-decoration: none; font-weight: 700; font-size: 16px; display: block; font-family: 'Georgia', serif;"> Schedule Executive Meeting </a> </div> </div> <!-- Executive Signature --> <div style="padding: 0 50px 50px 50px; border-top: 1px solid #475569; margin-top: 20px; padding-top: 30px;"> <div style="color: #94a3b8; font-size: 15px; line-height: 1.7; font-family: 'Georgia', serif;"> <div style="font-weight: 700; color: #f8fafc; margin-bottom: 4px; font-size: 17px;">${senderName}</div> <div style="font-style: italic; color: #cbd5e1; margin-bottom: 2px;">Executive Partnership Development</div> <div style="font-weight: 600; color: #e2e8f0;">${companyName}</div> <div style="margin-top: 12px;"> <a href="${companyWebsite}" style="color: #f59e0b; text-decoration: none; font-weight: 600;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div>
</div> </body>
</html>`; } /** * Design #22: Cold Outreach Tech Terminal */ getColdOutreachTech(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getColdOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: #0a0a0a; font-family: 'Fira Code', 'Monaco', 'Consolas', monospace; color: #00ff00;"> <div style="max-width: 680px; margin: 30px auto; background: #111111; border-radius: 8px; overflow: hidden; box-shadow: 0 0 20px rgba(0,255,0,0.2); border: 1px solid #333333;"> <!-- Terminal Header --> <div style="background: linear-gradient(90deg, #1a1a1a 0%, #2a2a2a 100%); padding: 12px 20px; border-bottom: 1px solid #333333; font-size: 12px;"> <div style=" "> <div style="width: 12px; height: 12px; background: #ff5f56; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #ffbd2e; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #27ca3f; border-radius: 50%;"></div> <span style="margin-left: 15px; color: #00ff00; font-weight: 600;">cold_outreach.exe</span> </div> </div> <!-- Terminal Content --> <div style="padding: 25px 30px; background: #111111; line-height: 1.6;"> <div style="color: #00ff00; font-size: 14px; margin-bottom: 20px;"> <span style="color: #ffbd2e;">$</span> ./init_contact --target="${prospectCompany}" --sender="${companyName}" </div> <div style="color: #00ff00; margin-bottom: 25px; font-size: 16px;"> <span style="color: #ff5f56;">[SYSTEM]</span> <span style="color: #27ca3f;">CONNECTION ESTABLISHED</span><br> <span style="color: #ffbd2e;">[INFO]</span> Subject: ${emailSubject} </div> <div style="background: #1a1a1a; border-left: 3px solid #00ff00; padding: 20px; margin: 25px 0; border-radius: 0 6px 6px 0;"> <pre style="margin: 0; color: #00ff00; font-size: 14px; white-space: pre-wrap; font-family: inherit;">// COLD_OUTREACH_PROTOCOL v2.1
// Target: ${prospectName} @ ${prospectCompany}
// Objective: Establish_Initial_Contact() ${content.replace(/<[^>]*>/g, '').replace(/&nbsp;/g, ' ').trim()}</pre> </div> <div style="color: #ffbd2e; margin: 25px 0; font-size: 14px;"> <span style="color: #ff5f56;">[DEBUG]</span> Awaiting response from ${prospectCompany}...<br> <span style="color: #27ca3f;">[SUCCESS]</span> Message transmission complete </div> </div> <!-- Terminal CTA --> <div style="padding: 0 30px 25px 30px;"> <div style="background: linear-gradient(135deg, #00ff00 0%, #27ca3f 100%); border-radius: 4px; padding: 15px; text-align: center;"> <a href="mailto:${senderName.toLowerCase().replace(' ', '.')}@${companyWebsite.replace('https://', '').replace('http://', '').split('/')[0]}" style="color: #000000; text-decoration: none; font-weight: 700; font-size: 14px; display: block; font-family: inherit;"> > EXECUTE_REPLY_PROTOCOL() </a> </div> </div> <!-- Terminal Footer --> <div style="padding: 20px 30px; background: #0a0a0a; border-top: 1px solid #333333;"> <div style="color: #666666; font-size: 12px; line-height: 1.5;"> <div style="color: #00ff00; margin-bottom: 5px;"># System Info</div> <div>User: <span style="color: #27ca3f;">${senderName}</span></div> <div>Organization: <span style="color: #ffbd2e;">${companyName}</span></div> <div>URL: <a href="${companyWebsite}" style="color: #00ff00; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a></div> </div> </div>
</div> </body>
</html>`; } /** * Design #23: Cold Outreach Luxury */ getColdOutreachLuxury(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getColdOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: linear-gradient(135deg, #f7f1e8 0%, #f3e8d0 100%); font-family: 'Playfair Display', 'Georgia', serif;"> <div style="max-width: 600px; margin: 50px auto; background: #fafafa; border-radius: 20px; overflow: hidden; box-shadow: 0 30px 60px rgba(0,0,0,0.12); border: 2px solid #d4af37;"> <!-- Luxury Header --> <div style="background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%); padding: 60px 50px; text-align: center; position: relative;"> <div style="position: absolute; top: -20px; left: 50%; transform: translateX(-50%); width: 80px; height: 40px; background: linear-gradient(45deg, #d4af37, #f1c40f); clip-path: polygon(0 100%, 50% 0, 100% 100%);"></div> <div style="width: 60px; height: 2px; background: linear-gradient(90deg, #d4af37, #f1c40f); margin: 0 auto 30px auto; border-radius: 1px;"></div> <h1 style="color: #ffffff; margin: 0; font-size: 32px; font-weight: 700; letter-spacing: 1px; text-shadow: 0 2px 4px rgba(0,0,0,0.3);">${emailSubject}</h1> <p style="color: rgba(212,175,55,0.9); margin: 20px 0 0 0; font-size: 18px; font-weight: 400; letter-spacing: 0.5px; font-style: italic;">Exclusive Business Opportunity</p> <div style="position: absolute; bottom: -10px; left: 50%; transform: translateX(-50%); width: 100px; height: 20px; background: linear-gradient(90deg, #d4af37, #f1c40f); border-radius: 20px 20px 0 0;"></div> </div> <!-- Luxury Content --> <div style="padding: 60px 50px; background: transparent; position: relative;"> <div style="position: absolute; top: 20px; right: 30px; width: 40px; height: 40px; background: linear-gradient(45deg, #d4af37, #f1c40f); opacity: 0.1; border-radius: 50%;"></div> <div style="color: #2c3e50; font-size: 16px; line-height: 1.8;"> ${content.replace(/color: #2d3748/g, 'color: #2c3e50').replace(/color: #4a5568/g, 'color: #5d6d7e')} </div> </div> <!-- Luxury CTA --> <div style="padding: 0 50px 50px 50px;"> <div style="background: linear-gradient(135deg, #d4af37 0%, #f1c40f 100%); border-radius: 12px; padding: 25px; text-align: center; position: relative; box-shadow: 0 8px 25px rgba(212,175,55,0.3);"> <div style="position: absolute; top: -5px; right: -5px; width: 20px; height: 20px; background: #f5f5f5; border-radius: 50%;"></div> <a href="mailto:${senderName.toLowerCase().replace(' ', '.')}@${companyWebsite.replace('https://', '').replace('http://', '').split('/')[0]}" style="color: #2c3e50; text-decoration: none; font-weight: 700; font-size: 18px; display: block; letter-spacing: 0.5px; font-family: 'Playfair Display', serif;"> Initiate Exclusive Partnership </a> </div> </div> <!-- Luxury Signature --> <div style="padding: 0 50px 60px 50px; border-top: 2px solid #f8f9fa; margin-top: 20px; padding-top: 40px; background: linear-gradient(135deg, #fafbfc 0%, #f8f9fa 100%);"> <div style="color: #5d6d7e; font-size: 16px; line-height: 1.8; text-align: center;"> <div style="font-weight: 700; color: #2c3e50; margin-bottom: 6px; font-size: 20px; font-family: 'Playfair Display', serif;">${senderName}</div> <div style="color: #d4af37; font-weight: 600; margin-bottom: 4px; font-style: italic;">Executive Partnership Development</div> <div style="font-weight: 600; color: #34495e; font-size: 17px;">${companyName}</div> <div style="margin-top: 15px;"> <a href="${companyWebsite}" style="color: #d4af37; text-decoration: none; font-weight: 600; font-size: 15px;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> <div style="margin-top: 25px; padding-top: 20px; border-top: 1px solid #e9ecef;"> <span style="color: #95a5a6; font-size: 14px; font-style: italic;">"Excellence in every interaction"</span> </div> </div> </div>
</div> </body>
</html>`; } /** * Design #24: Cold Outreach Creative */ getColdOutreachCreative(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getColdOutreachContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html>
<head> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: linear-gradient(45deg, #ff9a9e, #fecfef, #fecfef, #ffd1ff); font-family: 'Comic Sans MS', 'Marker Felt', cursive;"> <div style="max-width: 620px; margin: 40px auto; background: #fafafa; border-radius: 25px; overflow: hidden; box-shadow: 0 20px 40px rgba(255,105,180,0.2); border: 3px solid #ff69b4; transform: rotate(-1deg);"> <!-- Creative Header --> <div style="background: linear-gradient(135deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #ffecd2); padding: 40px; text-align: center; position: relative; transform: rotate(1deg);"> <div style="position: absolute; top: 15px; left: 20px; font-size: 24px;"></div> <div style="position: absolute; top: 20px; right: 30px; font-size: 20px;"></div> <div style="position: absolute; bottom: 15px; left: 40px; font-size: 18px;"></div> <div style="position: absolute; bottom: 20px; right: 20px; font-size: 22px;"></div> <h1 style="color: #ffffff; margin: 0; font-size: 28px; font-weight: 900; text-shadow: 3px 3px 0px rgba(0,0,0,0.2); transform: rotate(-2deg);">${emailSubject}</h1> <p style="color: rgba(255,255,255,0.95); margin: 16px 0 0 0; font-size: 16px; font-weight: 700; transform: rotate(1deg);"> ${prospectCompany} ${companyName} </p> </div> <!-- Creative Content --> <div style="padding: 40px; background: transparent; position: relative;"> <div style="position: absolute; top: 20px; right: 20px; width: 30px; height: 30px; background: #ff69b4; border-radius: 50%; opacity: 0.3; transform: rotate(45deg);"></div> <div style="position: absolute; bottom: 30px; left: 30px; width: 20px; height: 20px; background: #4ecdc4; border-radius: 0; opacity: 0.4; transform: rotate(30deg);"></div> <div style="background: linear-gradient(135deg, #fff8e1, #f3e5f5); border-radius: 20px; padding: 30px; border: 2px dashed #ff69b4; transform: rotate(0.5deg);"> <div style="color: #333; font-size: 16px; line-height: 1.7; font-family: 'Arial', sans-serif;"> ${content} </div> </div> <div style="text-align: center; margin-top: 30px; transform: rotate(-1deg);"> <span style="font-size: 32px;"></span> <p style="color: #666; font-size: 14px; margin: 10px 0; font-weight: 600;">Let's make something awesome together!</p> <span style="font-size: 28px;"></span> </div> </div> <!-- Creative CTA --> <div style="padding: 0 40px 35px 40px;"> <div style="background: linear-gradient(135deg, #ff69b4, #ff1493); border-radius: 25px; padding: 20px; text-align: center; position: relative; transform: rotate(-0.5deg); box-shadow: 0 8px 20px rgba(255,105,180,0.3);"> <div style="position: absolute; top: -8px; left: 20px; font-size: 20px;"></div> <div style="position: absolute; top: -5px; right: 25px; font-size: 16px;"></div> <a href="mailto:${senderName.toLowerCase().replace(' ', '.')}@${companyWebsite.replace('https://', '').replace('http://', '').split('/')[0]}" style="color: white; text-decoration: none; font-weight: 900; font-size: 18px; display: block; text-shadow: 2px 2px 0px rgba(0,0,0,0.2);"> Let's Chat! </a> </div> </div> <!-- Creative Signature --> <div style="padding: 0 40px 40px 40px; background: linear-gradient(135deg, #f8f9ff, #fff0f8); border-top: 3px dotted #ff69b4; margin-top: 20px; transform: rotate(0.3deg);"> <div style="padding-top: 25px; text-align: center;"> <div style="color: #333; font-size: 16px; line-height: 1.6; font-family: 'Arial', sans-serif;"> <div style="font-weight: 900; color: #ff1493; margin-bottom: 6px; font-size: 20px; transform: rotate(-1deg);">${senderName} </div> <div style="color: #666; font-weight: 700; margin-bottom: 4px;">Creative Partnerships @ ${companyName}</div> <div style="margin-top: 12px;"> <a href="${companyWebsite}" style="color: #ff69b4; text-decoration: none; font-weight: 700; font-size: 15px;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> <div style="margin-top: 20px; font-size: 24px;"> </div> </div> </div> </div>
</div> </body>
</html>`; } // ==================================== // FIRST FOLLOWUP CONTENT (Designs 25-30) // ==================================== /** * Get content specifically for first followup emails * Focus: Building on previous connection, addressing follow-up needs */ getFirstFollowupContent(prospectName, prospectCompany, companyName, senderName) { return ` <div style="color: #2d3748; line-height: 1.8; font-size: 16px;"> <p style="margin: 0 0 24px 0; font-size: 17px;">Hi ${prospectName},</p> <p style="margin: 0 0 20px 0;"> I wanted to follow up on my previous message about ${companyName}'s potential partnership with ${prospectCompany}. I understand you're busy, so I thought I'd share some additional insights that might be relevant. </p> <div style="background: linear-gradient(135deg, #f0fff4 0%, #c6f6d5 100%); border-radius: 12px; padding: 24px; margin: 24px 0; border-left: 4px solid #48bb78;"> <h3 style="margin: 0 0 16px 0; color: #2d3748; font-size: 18px; font-weight: 600;">Since our last conversation:</h3> <table width="100%" cellpadding="0" cellspacing="0" style=" "> <div style=" "> <div style="width: 8px; height: 8px; background: #48bb78; border-radius: 50%; "></div> <span style="color: #4a5568; font-weight: 500;">We've helped 3 more companies achieve 40%+ efficiency gains</span> </div> <div style=" "> <div style="width: 8px; height: 8px; background: #48bb78; border-radius: 50%; "></div> <span style="color: #4a5568; font-weight: 500;">Launched new features specifically for your industry</span> </div> <div style=" "> <div style="width: 8px; height: 8px; background: #48bb78; border-radius: 50%; "></div> <span style="color: #4a5568; font-weight: 500;">Secured additional partnerships with industry leaders</span> </div> </div> </div> <p style="margin: 0 0 20px 0;"> I'm particularly excited about how our recent innovations could address the challenges I noticed ${prospectCompany} might be facing in scaling operations while maintaining quality. </p> <div style="background: #fff5f5; border-radius: 8px; padding: 20px; margin: 20px 0; border-left: 3px solid #fc8181;"> <p style="margin: 0; color: #4a5568; font-style: italic; font-size: 15px;"> "<em>Sometimes the best opportunities come from the second conversation.</em>" - This has been true for many of our most successful partnerships. </p> </div> <p style="margin: 24px 0 32px 0; font-weight: 500; color: #2d3748;"> Would you be open to a brief 15-minute call this week to explore how we might work together? I promise to keep it focused and valuable for your time. </p> </div>`; } // ==================================== // FIRST FOLLOWUP TEMPLATES (Designs 25-30) // ==================================== /** * Design #25: FIRST_FOLLOWUP - Minimalist Follow-up */ getFirstFollowupMinimalist(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getFirstFollowupContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background-color: #fafafa; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;"> <div style="max-width: 600px; margin: 40px auto; background: #fafafa; border-radius: 16px; box-shadow: 0 4px 20px rgba(0,0,0,0.08); overflow: hidden;"> <!-- Header with subtle follow-up indicator --> <div style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 32px 40px; text-align: center; border-bottom: 1px solid #dee2e6;"> <div style="width: 40px; height: 3px; background: #6c757d; margin: 0 auto 20px auto; border-radius: 2px; opacity: 0.7;"></div> <h1 style="color: #495057; margin: 0; font-size: 28px; font-weight: 700; letter-spacing: -0.5px;">${emailSubject || 'Following Up'}</h1> <p style="color: #6c757d; margin: 12px 0 0 0; font-size: 16px; font-weight: 500;">Continuing our conversation</p> </div> <!-- Content --> <div style="padding: 40px;"> ${content} <!-- Clean CTA --> <div style="text-align: center; margin: 32px 0 0 0;"> <a href="${companyWebsite}" style="display: inline-block; background: #495057; color: white; padding: 14px 28px; border-radius: 8px; text-decoration: none; font-weight: 600; font-size: 16px; transition: background-color 0.2s ease;"> Schedule Brief Call </a> </div> </div> <!-- Minimal footer --> <div style="padding: 24px 40px; background: #f8f9fa; border-top: 1px solid #dee2e6;"> <div style="color: #6c757d; font-size: 14px; text-align: center;"> <div style="font-weight: 600; color: #495057; margin-bottom: 4px;">${senderName}</div> <div>${companyName}</div> </div> </div> </div>
</body>
</html>`; } /** * Design #26: FIRST_FOLLOWUP - Modern Progress Design */ getFirstFollowupModern(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getFirstFollowupContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;"> <div style="max-width: 600px; margin: 40px auto; background: #fafafa; border-radius: 20px; box-shadow: 0 20px 40px rgba(0,0,0,0.15); overflow: hidden;"> <!-- Progress header with timeline --> <div style="background: linear-gradient(45deg, #4facfe 0%, #00f2fe 100%); padding: 40px; text-align: center; position: relative;"> <!-- Progress indicator --> <div style=" margin-bottom: 24px;"> <div style="width: 12px; height: 12px; background: #f5f5f5; border-radius: 50%; margin-right: 8px;"></div> <div style="width: 30px; height: 2px; background: #f5f5f5; margin-right: 8px;"></div> <div style="width: 12px; height: 12px; background: #fafafa; border-radius: 50%; box-shadow: 0 0 0 3px rgba(255,255,255,0.3);"></div> <div style="width: 30px; height: 2px; background: #f5f5f5; margin-left: 8px;"></div> <div style="width: 12px; height: 12px; background: #f5f5f5; border-radius: 50%; margin-left: 8px;"></div> </div> <h1 style="color: #ffffff; margin: 0; font-size: 32px; font-weight: 800; letter-spacing: -0.8px; text-shadow: 0 2px 10px rgba(0,0,0,0.1);">${emailSubject || 'Progress Update '}</h1> <p style="color: rgba(255,255,255,0.9); margin: 12px 0 0 0; font-size: 18px; font-weight: 500;">Building on our conversation</p> </div> <!-- Content with modern styling --> <div style="padding: 40px;"> ${content} <!-- Modern CTA with hover effect --> <div style="text-align: center; margin: 36px 0 0 0;"> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(45deg, #4facfe 0%, #00f2fe 100%); color: white; padding: 16px 36px; border-radius: 50px; text-decoration: none; font-weight: 700; font-size: 16px; box-shadow: 0 10px 30px rgba(79,172,254,0.3); transition: all 0.3s ease; transform: translateY(0px);"> Continue Our Conversation </a> </div> </div> <!-- Modern footer --> <div style="padding: 32px 40px; background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); text-align: center;"> <div style="color: #495057; font-size: 15px;"> <div style="font-weight: 700; color: #343a40; margin-bottom: 6px; font-size: 16px;">${senderName}</div> <div style="font-weight: 500;">${companyName}</div> <div style="margin-top: 12px;"> <a href="${companyWebsite}" style="color: #4facfe; text-decoration: none; font-weight: 600;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>
</body>
</html>`; } /** * Design #27: FIRST_FOLLOWUP - Executive Follow-up */ getFirstFollowupExecutive(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getFirstFollowupContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background-color: #1a1a1a; font-family: 'Times New Roman', Times, serif;"> <div style="max-width: 600px; margin: 40px auto; background: #fafafa; border-radius: 12px; box-shadow: 0 8px 32px rgba(0,0,0,0.3); overflow: hidden; border: 1px solid #e0e0e0;"> <!-- Executive header with status indicator --> <div style="background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%); padding: 48px 50px; text-align: center; position: relative;"> <!-- Status indicator --> <div style="position: absolute; top: 20px; right: 20px; background: #f39c12; color: #ffffff; padding: 6px 12px; border-radius: 4px; font-size: 12px; font-weight: 600; text-transform: uppercase; letter-spacing: 1px;"> Follow-up </div> <!-- Professional emblem --> <div style="width: 60px; height: 60px; background: linear-gradient(45deg, #f39c12 0%, #e67e22 100%); margin: 0 auto 24px auto; border-radius: 8px; box-shadow: 0 4px 15px rgba(243,156,18,0.3);"> <span style="color: #ffffff; font-size: 24px; font-weight: 800;">II</span> </div> <h1 style="color: #ffffff; margin: 0; font-size: 30px; font-weight: 400; letter-spacing: 1px; font-family: 'Times New Roman', Times, serif;">${emailSubject || 'Executive Follow-up'}</h1> <p style="color: #bdc3c7; margin: 16px 0 0 0; font-size: 16px; font-style: italic;">Continuing strategic discussions</p> </div> <!-- Executive content --> <div style="padding: 50px; background: transparent;"> ${content} <!-- Executive CTA --> <div style="text-align: center; margin: 40px 0 0 0;"> <a href="${companyWebsite}" style="display: inline-block; background: #2c3e50; color: #ffffff; padding: 16px 40px; border: none; border-radius: 4px; text-decoration: none; font-weight: 600; font-size: 16px; letter-spacing: 0.5px; text-transform: uppercase; transition: background-color 0.3s ease;"> Schedule Executive Call </a> </div> </div> <!-- Executive footer --> <div style="padding: 30px 50px; background: #f8f9fa; border-top: 3px solid #f39c12;"> <div style="text-align: center;"> <div style="color: #2c3e50; font-size: 18px; font-weight: 600; margin-bottom: 8px; font-family: 'Times New Roman', Times, serif;">${senderName}</div> <div style="color: #7f8c8d; font-size: 14px; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 12px;">${companyName}</div> <div style="width: 40px; height: 2px; background: #f39c12; margin: 0 auto;"></div> </div> </div> </div>
</body>
</html>`; } /** * Design #28: FIRST_FOLLOWUP - Tech Reminder System */ getFirstFollowupTech(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getFirstFollowupContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background-color: #000000; font-family: 'Courier New', monospace; color: #00ff00;"> <div style="max-width: 800px; margin: 20px auto; background: #0a0a0a; border: 2px solid #00ff00; border-radius: 8px; box-shadow: 0 0 30px rgba(0,255,0,0.2); overflow: hidden;"> <!-- Terminal header --> <div style="background: linear-gradient(90deg, #1a1a1a 0%, #2a2a2a 100%); padding: 12px 20px; border-bottom: 1px solid #00ff00; "> <div style=" margin-right: 20px;"> <div style="width: 12px; height: 12px; background: #ff5f56; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #ffbd2e; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #27ca3f; border-radius: 50%;"></div> </div> <span style="color: #00ff00; font-size: 14px; font-weight: bold;">followup_system.exe - [REMINDER_ACTIVE]</span> </div> <!-- Terminal content --> <div style="padding: 20px; background: #000000;"> <!-- System status --> <div style="margin-bottom: 20px; padding: 15px; background: #1a1a1a; border: 1px solid #333333; border-radius: 4px;"> <div style="color: #00ff00; font-size: 14px; margin-bottom: 10px;"> <span style="color: #ffff00;">[SYSTEM]</span> Reminder protocol initiated... </div> <div style="color: #00ffff; font-size: 13px;"> > Previous connection detected with: ${prospectCompany}<br> > Contact: ${prospectName}<br> > Status: AWAITING_RESPONSE<br> > Follow-up sequence: ACTIVATED </div> </div> <!-- Main content in terminal style --> <div style="color: #00ff00; font-size: 16px; line-height: 1.6; margin: 20px 0;"> <div style="margin-bottom: 15px;"> <span style="color: #ffff00;">root@${companyName.toLowerCase().replace(/\s+/g, '')}:~$</span> <span style="color: #00ffff;">cat followup_message.txt</span> </div> <div style="background: #111111; padding: 20px; border-left: 4px solid #00ff00; margin: 15px 0; white-space: pre-line;">${content.replace(/<[^>]*>/g, '').replace(/&nbsp;/g, ' ')}</div> </div> <!-- Command prompt --> <div style="margin: 25px 0; padding: 15px; background: #1a1a1a; border: 1px solid #00ff00;"> <div style="color: #00ff00; margin-bottom: 10px;"> <span style="color: #ffff00;">System Recommendation:</span> </div> <div style="color: #00ffff; font-size: 14px;"> > Execute: schedule_call --priority=high --duration=15min<br> > Target: strategic_partnership.init()<br> > Expected output: MUTUAL_BENEFIT_CONFIRMED </div> </div> <!-- CTA button styled as command --> <div style="text-align: center; margin: 25px 0;"> <a href="${companyWebsite}" style="display: inline-block; background: #00ff00; color: #000000; padding: 12px 24px; text-decoration: none; font-weight: bold; font-size: 14px; border-radius: 4px; font-family: 'Courier New', monospace;"> [EXECUTE] SCHEDULE_CALL.exe </a> </div> <!-- System footer --> <div style="margin-top: 30px; padding: 15px; background: #1a1a1a; border-top: 1px solid #333333;"> <div style="color: #666666; font-size: 12px;"> <span style="color: #00ff00;">[INFO]</span> Message generated by: ${senderName}<br> <span style="color: #00ff00;">[ORG]</span> ${companyName} - Advanced Partnership Systems<br> <span style="color: #00ff00;">[TIME]</span> $(date '+%Y-%m-%d %H:%M:%S') - Followup Protocol Active </div> </div> </div> </div>
</body>
</html>`; } /** * Design #29: FIRST_FOLLOWUP - Luxury Continuation */ getFirstFollowupLuxury(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getFirstFollowupContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: linear-gradient(135deg, #f4f1e8 0%, #e8dcc0 100%); font-family: 'Georgia', 'Times New Roman', serif;"> <div style="max-width: 600px; margin: 40px auto; background: #fafafa; border-radius: 16px; box-shadow: 0 15px 35px rgba(0,0,0,0.1); overflow: hidden; border: 2px solid #d4af37;"> <!-- Luxury header with continuation theme --> <div style="background: linear-gradient(135deg, #2c1810 0%, #8b4513 50%, #2c1810 100%); padding: 50px; text-align: center; position: relative;"> <!-- Decorative continuation symbol --> <div style="position: absolute; top: 20px; right: 20px; width: 60px; height: 60px; background: rgba(212,175,55,0.2); border: 2px solid #d4af37; border-radius: 50%; "> <span style="color: #d4af37; font-size: 24px; font-weight: bold;">II</span> </div> <!-- Elegant emblem --> <div style="width: 80px; height: 80px; background: radial-gradient(circle, #d4af37 0%, #b8941f 100%); margin: 0 auto 30px auto; border-radius: 12px; box-shadow: 0 8px 25px rgba(212,175,55,0.3); border: 3px solid rgba(255,255,255,0.2);"> <span style="color: #2c1810; font-size: 28px; font-weight: 900;"></span> </div> <h1 style="color: #d4af37; margin: 0; font-size: 36px; font-weight: 300; letter-spacing: 2px; text-shadow: 0 2px 10px rgba(0,0,0,0.3);">${emailSubject || 'Continuing Our Dialogue'}</h1> <p style="color: rgba(212,175,55,0.9); margin: 20px 0 0 0; font-size: 18px; font-style: italic; letter-spacing: 1px;">Following up with distinction</p> <!-- Decorative line --> <div style="width: 100px; height: 2px; background: linear-gradient(90deg, transparent 0%, #d4af37 50%, transparent 100%); margin: 25px auto 0 auto;"></div> </div> <!-- Luxury content --> <div style="padding: 60px 50px; background: transparent; position: relative;"> <!-- Subtle background pattern --> <div style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-image: radial-gradient(circle at 20% 80%, rgba(212,175,55,0.03) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(212,175,55,0.03) 0%, transparent 50%); pointer-events: none;"></div> <div style="position: relative;"> ${content} </div> <!-- Luxury CTA --> <div style="text-align: center; margin: 50px 0 0 0;"> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(135deg, #d4af37 0%, #b8941f 100%); color: #2c1810; padding: 20px 50px; text-decoration: none; font-weight: 600; font-size: 16px; letter-spacing: 1px; text-transform: uppercase; border-radius: 8px; box-shadow: 0 8px 25px rgba(212,175,55,0.3); transition: all 0.3s ease; border: 2px solid transparent;"> Resume Our Conversation </a> </div> </div> <!-- Luxury footer --> <div style="padding: 40px 50px; background: linear-gradient(135deg, #f8f6f0 0%, #f0ebd8 100%); text-align: center; border-top: 1px solid #d4af37;"> <div style="margin-bottom: 20px;"> <div style="width: 60px; height: 3px; background: linear-gradient(90deg, transparent 0%, #d4af37 50%, transparent 100%); margin: 0 auto 20px auto;"></div> </div> <div style="color: #8b4513;"> <div style="font-size: 20px; font-weight: 400; margin-bottom: 8px; letter-spacing: 1px;">${senderName}</div> <div style="font-size: 14px; text-transform: uppercase; letter-spacing: 2px; color: #b8941f; margin-bottom: 12px;">${companyName}</div> <div style="font-size: 12px; font-style: italic; color: #8b4513;">Excellence in Partnership Development</div> </div> </div> </div>
</body>
</html>`; } /** * Design #30: FIRST_FOLLOWUP - Creative Follow-up Art */ getFirstFollowupCreative(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getFirstFollowupContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject}</title>
</head>
<body style="margin: 0; padding: 0; background: linear-gradient(45deg, #ff9a9e 0%, #fecfef 25%, #fecfef 75%, #ff9a9e 100%); font-family: 'Comic Sans MS', cursive, sans-serif;"> <div style="max-width: 600px; margin: 30px auto; background: #fafafa; border-radius: 25px; box-shadow: 0 20px 40px rgba(0,0,0,0.15); overflow: hidden; transform: rotate(-0.5deg); border: 4px solid #ff6b9d;"> <!-- Creative header with follow-up theme --> <div style="background: linear-gradient(135deg, #ff6b9d 0%, #c44569 50%, #ff6b9d 100%); padding: 40px; text-align: center; position: relative; overflow: hidden;"> <!-- Floating elements --> <div style="position: absolute; top: 15px; left: 20px; width: 30px; height: 30px; background: #f5f5f5; border-radius: 50%; transform: rotate(15deg);"></div> <div style="position: absolute; top: 25px; right: 30px; width: 20px; height: 20px; background: #f5f5f5; border-radius: 50%; transform: rotate(-20deg);"></div> <div style="position: absolute; bottom: 20px; left: 50px; width: 25px; height: 25px; background: #f5f5f5; border-radius: 50%; transform: rotate(10deg);"></div> <!-- Follow-up badge --> <div style="display: inline-block; background: #f5f5f5; color: #c44569; padding: 8px 16px; border-radius: 20px; font-size: 12px; font-weight: bold; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 20px; transform: rotate(2deg);"> Round 2! </div> <h1 style="color: #ffffff; margin: 0; font-size: 32px; font-weight: 900; letter-spacing: -1px; text-shadow: 0 3px 10px rgba(0,0,0,0.2); transform: rotate(-1deg);">${emailSubject || 'Back for More! '}</h1> <p style="color: rgba(255,255,255,0.95); margin: 16px 0 0 0; font-size: 18px; font-weight: 600; transform: rotate(0.5deg);">Continuing our creative journey!</p> </div> <!-- Creative content container --> <div style="padding: 40px; background: transparent; position: relative;"> <!-- Decorative elements --> <div style="position: absolute; top: -10px; left: 30px; width: 40px; height: 40px; background: #ffeaa7; border-radius: 50%; transform: rotate(25deg); opacity: 0.7;"></div> <div style="position: absolute; top: 20px; right: 20px; width: 30px; height: 30px; background: #81ecec; border-radius: 50%; transform: rotate(-15deg); opacity: 0.6;"></div> <!-- Content with creative styling --> <div style="background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%); border-radius: 20px; padding: 30px; margin: 20px 0; transform: rotate(1deg); box-shadow: 0 10px 20px rgba(0,0,0,0.1);"> ${content} </div> <!-- Creative shapes --> <div style=" margin: 30px 0;"> <div style="width: 15px; height: 15px; background: #fd79a8; transform: rotate(45deg);"></div> <div style="width: 20px; height: 20px; background: #fdcb6e; border-radius: 50%;"></div> <div style="width: 18px; height: 18px; background: #6c5ce7; transform: rotate(45deg);"></div> <div style="width: 16px; height: 16px; background: #a29bfe; border-radius: 50%;"></div> <div style="width: 14px; height: 14px; background: #fd79a8; transform: rotate(45deg);"></div> </div> <!-- Fun CTA --> <div style="text-align: center; margin: 35px 0 0 0;"> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(135deg, #ff6b9d 0%, #c44569 100%); color: white; padding: 16px 32px; border-radius: 25px; text-decoration: none; font-weight: 800; font-size: 16px; text-transform: uppercase; letter-spacing: 1px; box-shadow: 0 10px 25px rgba(255,107,157,0.4); transform: rotate(-1deg); transition: all 0.3s ease;"> Let's Keep Going! </a> </div> </div> <!-- Creative footer --> <div style="padding: 30px; background: linear-gradient(135deg, #dda0dd 0%, #ff6b9d 100%); text-align: center; transform: rotate(0deg);"> <div style="color: #ffffff;"> <div style="font-size: 20px; font-weight: 800; margin-bottom: 8px; transform: rotate(-0.5deg);">${senderName} </div> <div style="font-size: 16px; font-weight: 600; transform: rotate(0.3deg);">${companyName}</div> <div style="margin: 15px 0; "> <span style="font-size: 20px;"></span> <span style="font-size: 20px;"></span> <span style="font-size: 20px;"></span> </div> <div style="font-size: 12px; font-weight: 500; opacity: 0.9; transform: rotate(-0.3deg);">Creativity meets business magic!</div> </div> </div> </div>
</body>
</html>`; } // ===== SECTION 6: SOCIAL_PROOF TEMPLATES (Designs 31-36) ===== /** * Social proof content emphasizing credibility, testimonials, and industry recognition */ getSocialProofContent(prospectName, prospectCompany, companyName, senderName) { return ` <div style="color: #2d3748; line-height: 1.8; font-size: 16px;"> <p style="margin: 0 0 24px 0; font-size: 17px;">Hi ${prospectName},</p> <p style="margin: 0 0 20px 0;"> I hope this message finds you well. I'm reaching out because ${companyName} has been making significant waves in the industry, and I believe ${prospectCompany} would be interested in the results we're achieving for companies like yours. </p> <div style="background: linear-gradient(135deg, #edf2f7 0%, #e2e8f0 100%); border-radius: 12px; padding: 28px; margin: 24px 0; border-left: 4px solid #4299e1;"> <h3 style="margin: 0 0 20px 0; color: #2d3748; font-size: 18px; font-weight: 600; "> <span style="font-size: 20px;"></span> Recent Industry Recognition </h3> <table width="100%" cellpadding="0" cellspacing="0" style=" "> <div style="background: transparent; padding: 16px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.05);"> <div style="font-weight: 600; color: #2b6cb0; margin-bottom: 6px;">Featured in TechCrunch & Forbes</div> <div style="color: #4a5568; font-size: 14px;">Our innovative approach has been recognized by leading industry publications</div> </div> <div style="background: transparent; padding: 16px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.05);"> <div style="font-weight: 600; color: #2b6cb0; margin-bottom: 6px;">500+ Companies Trust Us</div> <div style="color: #4a5568; font-size: 14px;">From startups to Fortune 500 companies across 25+ countries</div> </div> <div style="background: transparent; padding: 16px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.05);"> <div style="font-weight: 600; color: #2b6cb0; margin-bottom: 6px;">Industry Awards Winner</div> <div style="color: #4a5568; font-size: 14px;">Best Innovation Award 2024 & Customer Choice Excellence</div> </div> </div> </div> <div style="background: linear-gradient(135deg, #f0fff4 0%, #c6f6d5 100%); border-radius: 12px; padding: 24px; margin: 24px 0;"> <h4 style="margin: 0 0 16px 0; color: #2d3748; font-size: 16px; font-weight: 600; "> <span style="font-size: 18px;"></span> What Our Partners Are Saying </h4> <div style="font-style: italic; color: #4a5568; margin: 12px 0; padding: 16px; background: #fafafa; border-radius: 8px; border-left: 3px solid #48bb78;"> "Working with ${companyName} has transformed our operations completely. We've seen a 65% improvement in efficiency within just 3 months." </div> <div style="font-size: 14px; color: #718096; font-weight: 500;">— Sarah Johnson, CEO at TechVenture Solutions</div> </div> <p style="margin: 20px 0;"> I'd love to share how we can bring similar results to ${prospectCompany}. Would you be open to a brief conversation this week to explore how we might work together? </p> <p style="margin: 20px 0 0 0; color: #4a5568;"> Best regards,<br> ${senderName} </p> </div>`; } /** * Design 31: Social Proof Minimalist - Clean testimonials with subtle credibility indicators */ getSocialProofMinimalist(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getSocialProofContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Social Proof'}</title>
</head>
<body style="margin: 0; padding: 0; font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif; background-color: #fafbfc;"> <div style="max-width: 600px; margin: 0 auto; background: transparent;"> <!-- Trust Badge Header --> <div style="text-align: center; padding: 40px 40px 20px 40px; background: linear-gradient(135deg, #f8fafc 0%, #edf2f7 100%); border-bottom: 1px solid #e2e8f0;"> <div style="display: inline-flex; background: transparent; padding: 12px 24px; border-radius: 50px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); margin-bottom: 20px;"> <div style="width: 8px; height: 8px; background: #48bb78; border-radius: 50%; animation: pulse 2s infinite;"></div> <span style="font-size: 12px; font-weight: 600; color: #4a5568; text-transform: uppercase; letter-spacing: 0.5px;">Trusted by 500+ Companies</span> </div> <h1 style="margin: 0; font-size: 28px; font-weight: 700; color: #2d3748; line-height: 1.2;">${emailSubject || 'Industry Recognition'}</h1> <p style="margin: 8px 0 0 0; color: #718096; font-size: 16px;">${companyName} Social Proof</p> </div> <!-- Content --> <div style="padding: 40px;"> ${content} </div> <!-- Subtle CTA --> <div style="padding: 0 40px 40px 40px; text-align: center;"> <div style="background: #f7fafc; border-radius: 12px; padding: 24px; border: 1px solid #e2e8f0;"> <p style="margin: 0 0 16px 0; color: #4a5568; font-size: 14px;">Ready to join our success stories?</p> <a href="${companyWebsite}" style="display: inline-block; background: #4299e1; color: white; padding: 12px 28px; text-decoration: none; border-radius: 25px; font-weight: 600; font-size: 14px; transition: all 0.3s ease;">Schedule a Call</a> </div> </div> <!-- Footer --> <div style="background: #f8fafc; padding: 30px 40px; text-align: center; border-top: 1px solid #e2e8f0;"> <div style="color: #718096; font-size: 14px;"> <div style="font-weight: 600; color: #2d3748; margin-bottom: 4px;">${senderName}</div> <div>${companyName}</div> <div style="margin-top: 8px;"> <a href="${companyWebsite}" style="color: #4299e1; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>
</body>
</html>`; } /** * Design 32: Social Proof Modern - Dynamic testimonial cards with industry metrics */ getSocialProofModern(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getSocialProofContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Social Proof Dashboard'}</title>
</head>
<body style="margin: 0; padding: 0; font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);"> <div style="max-width: 600px; margin: 0 auto; background: transparent; box-shadow: 0 25px 50px rgba(0,0,0,0.2);"> <!-- Header with Live Metrics --> <div style="background: linear-gradient(135deg, #4299e1 0%, #3182ce 100%); padding: 50px 40px; text-align: center; color: white; position: relative; overflow: hidden;"> <div style="position: absolute; top: 20px; right: 20px; background: #f5f5f5; backdrop-filter: blur(10px); padding: 8px 16px; border-radius: 20px; font-size: 12px; font-weight: 600;"> LIVE METRICS </div> <!-- Floating Stats --> <div style=" margin-bottom: 30px;"> <div style="text-align: center; background: #f5f5f5; backdrop-filter: blur(10px); padding: 16px; border-radius: 12px; border: 1px solid rgba(255,255,255,0.2);"> <div style="font-size: 24px; font-weight: 800; margin-bottom: 4px;">500+</div> <div style="font-size: 11px; opacity: 0.9; text-transform: uppercase; letter-spacing: 0.5px;">Partners</div> </div> <div style="text-align: center; background: #f5f5f5; backdrop-filter: blur(10px); padding: 16px; border-radius: 12px; border: 1px solid rgba(255,255,255,0.2);"> <div style="font-size: 24px; font-weight: 800; margin-bottom: 4px;">98%</div> <div style="font-size: 11px; opacity: 0.9; text-transform: uppercase; letter-spacing: 0.5px;">Satisfaction</div> </div> <div style="text-align: center; background: #f5f5f5; backdrop-filter: blur(10px); padding: 16px; border-radius: 12px; border: 1px solid rgba(255,255,255,0.2);"> <div style="font-size: 24px; font-weight: 800; margin-bottom: 4px;">25</div> <div style="font-size: 11px; opacity: 0.9; text-transform: uppercase; letter-spacing: 0.5px;">Countries</div> </div> </div> <h1 style="margin: 0; font-size: 36px; font-weight: 800; line-height: 1.1; text-shadow: 0 4px 20px rgba(0,0,0,0.3);">${emailSubject || 'Trusted Globally'}</h1> <p style="margin: 12px 0 0 0; font-size: 18px; opacity: 0.95; font-weight: 500;">${companyName} Success Stories</p> </div> <!-- Interactive Content Cards --> <div style="padding: 50px 40px;"> ${content} <!-- Award Showcase --> <div style="background: linear-gradient(135deg, #ffd89b 0%, #19547b 100%); color: white; border-radius: 16px; padding: 30px; margin: 30px 0; text-align: center; position: relative; overflow: hidden;"> <div style="position: absolute; top: -20px; right: -20px; background: #f5f5f5; width: 80px; height: 80px; border-radius: 50%; font-size: 30px;"></div> <h3 style="margin: 0 0 16px 0; font-size: 22px; font-weight: 700;">Industry Recognition</h3> <div style=" flex-wrap: wrap;"> <span style="background: #f5f5f5; padding: 8px 16px; border-radius: 20px; font-size: 14px; font-weight: 600;">TechCrunch Featured</span> <span style="background: #f5f5f5; padding: 8px 16px; border-radius: 20px; font-size: 14px; font-weight: 600;">Forbes Recognized</span> <span style="background: #f5f5f5; padding: 8px 16px; border-radius: 20px; font-size: 14px; font-weight: 600;">Best Innovation 2024</span> </div> </div> </div> <!-- CTA Section --> <div style="background: #f8fafc; padding: 40px; text-align: center; border-top: 1px solid #e2e8f0;"> <h3 style="margin: 0 0 16px 0; color: #2d3748; font-size: 20px; font-weight: 700;">Join Our Success Community</h3> <p style="margin: 0 0 24px 0; color: #4a5568; font-size: 16px;">Ready to become our next success story?</p> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(135deg, #4299e1 0%, #3182ce 100%); color: white; padding: 16px 32px; text-decoration: none; border-radius: 30px; font-weight: 700; font-size: 16px; box-shadow: 0 8px 25px rgba(66, 153, 225, 0.3); transition: all 0.3s ease;">Get Started Today</a> </div> <!-- Footer --> <div style="background: #2d3748; color: white; padding: 30px 40px; text-align: center;"> <div style="font-size: 16px; font-weight: 600; margin-bottom: 8px;">${senderName}</div> <div style="font-size: 14px; opacity: 0.8; margin-bottom: 12px;">${companyName}</div> <a href="${companyWebsite}" style="color: #63b3ed; text-decoration: none; font-weight: 500;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div>
</body>
</html>`; } /** * Design 33: Social Proof Executive - Premium testimonials with executive-level credibility */ getSocialProofExecutive(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getSocialProofContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Executive Social Proof'}</title>
</head>
<body style="margin: 0; padding: 0; font-family: 'Playfair Display', 'Times New Roman', serif; background: #f8f9fa;"> <div style="max-width: 600px; margin: 0 auto; background: transparent; box-shadow: 0 20px 60px rgba(0,0,0,0.08);"> <!-- Executive Header --> <div style="background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%); color: white; padding: 60px 50px; text-align: center; position: relative;"> <div style="position: absolute; top: 30px; left: 50px; "> <div style="width: 8px; height: 8px; background: #48bb78; border-radius: 50%;"></div> <span style="font-size: 11px; font-weight: 600; text-transform: uppercase; letter-spacing: 1px; opacity: 0.9;">Verified Excellence</span> </div> <!-- Executive Badge --> <div style="display: inline-flex; background: #f5f5f5; backdrop-filter: blur(10px); padding: 16px 24px; border-radius: 50px; margin-bottom: 30px; border: 1px solid rgba(255,255,255,0.2);"> <span style="font-size: 20px;"></span> <span style="font-size: 14px; font-weight: 600; text-transform: uppercase; letter-spacing: 0.5px;">Executive Endorsement</span> </div> <h1 style="margin: 0; font-size: 42px; font-weight: 400; line-height: 1.1; letter-spacing: -1px;">${emailSubject || 'Distinguished Recognition'}</h1> <p style="margin: 16px 0 0 0; font-size: 18px; opacity: 0.9; font-weight: 300; font-family: 'Inter', sans-serif;">${companyName} Leadership Excellence</p> </div> <!-- Credibility Indicators --> <div style="padding: 0 50px; margin-top: -30px; position: relative; z-index: 10;"> <div style="background: #fafafa; border-radius: 16px; padding: 30px; box-shadow: 0 15px 35px rgba(0,0,0,0.1); border: 1px solid #e2e8f0;"> <div style=" text-align: center;"> <div style="flex: 1;"> <div style="font-size: 32px; font-weight: 700; color: #1a202c; margin-bottom: 8px;">C-Suite</div> <div style="font-size: 12px; color: #718096; text-transform: uppercase; letter-spacing: 0.5px; font-family: 'Inter', sans-serif;">Endorsements</div> </div> <div style="width: 1px; background: #e2e8f0; margin: 0 20px;"></div> <div style="flex: 1;"> <div style="font-size: 32px; font-weight: 700; color: #1a202c; margin-bottom: 8px;">Fortune 500</div> <div style="font-size: 12px; color: #718096; text-transform: uppercase; letter-spacing: 0.5px; font-family: 'Inter', sans-serif;">Partners</div> </div> <div style="width: 1px; background: #e2e8f0; margin: 0 20px;"></div> <div style="flex: 1;"> <div style="font-size: 32px; font-weight: 700; color: #1a202c; margin-bottom: 8px;">Awards</div> <div style="font-size: 12px; color: #718096; text-transform: uppercase; letter-spacing: 0.5px; font-family: 'Inter', sans-serif;">Industry Recognition</div> </div> </div> </div> </div> <!-- Executive Content --> <div style="padding: 50px; font-family: 'Inter', sans-serif;"> ${content} <!-- Executive Testimonial --> <div style="background: #f8f9fa; border-radius: 12px; padding: 35px; margin: 35px 0; border-left: 4px solid #d69e2e; position: relative;"> <div style="position: absolute; top: 20px; right: 25px; font-size: 40px; opacity: 0.1;">"</div> <p style="margin: 0 0 20px 0; font-size: 18px; line-height: 1.6; color: #2d3748; font-style: italic;"> "${companyName}'s strategic approach to business transformation has been instrumental in our 40% growth this year. Their executive team understands the complexities of large-scale operations." </p> <div style=" "> <div style="width: 50px; height: 50px; background: linear-gradient(135deg, #d69e2e 0%, #b7791f 100%); border-radius: 50%; color: white; font-weight: 700; font-size: 20px;">M</div> <div> <div style="font-weight: 600; color: #1a202c; margin-bottom: 2px;">Michael Richardson</div> <div style="font-size: 14px; color: #718096;">CEO, Global Enterprises Inc.</div> </div> </div> </div> </div> <!-- Executive CTA --> <div style="background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%); color: white; padding: 50px; text-align: center;"> <h3 style="margin: 0 0 20px 0; font-size: 28px; font-weight: 400;">Executive Consultation Available</h3> <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.9; line-height: 1.6;">Join distinguished leaders who trust ${companyName} for strategic business transformation.</p> <a href="${companyWebsite}" style="display: inline-block; background: #d69e2e; color: white; padding: 18px 40px; text-decoration: none; border-radius: 6px; font-weight: 600; font-size: 16px; text-transform: uppercase; letter-spacing: 0.5px; transition: all 0.3s ease;">Schedule Executive Meeting</a> </div> <!-- Executive Footer --> <div style="background: #1a202c; color: white; padding: 40px 50px; text-align: center;"> <div style="font-size: 18px; font-weight: 600; margin-bottom: 8px;">${senderName}</div> <div style="font-size: 14px; opacity: 0.7; margin-bottom: 4px;">Executive Partnership Director</div> <div style="font-size: 16px; font-weight: 500; margin-bottom: 16px;">${companyName}</div> <div style="width: 40px; height: 1px; background: #d69e2e; margin: 20px auto;"></div> <a href="${companyWebsite}" style="color: #d69e2e; text-decoration: none; font-weight: 500; font-size: 14px;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div>
</body>
</html>`; } /** * Design 34: Social Proof Tech - Developer-focused testimonials with tech metrics */ getSocialProofTech(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getSocialProofContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Social Proof Metrics'}</title>
</head>
<body style="margin: 0; padding: 0; font-family: 'JetBrains Mono', 'Monaco', 'Consolas', monospace; background: #0d1117; color: #f0f6fc;"> <div style="max-width: 600px; margin: 0 auto; background: #161b22; border: 1px solid #30363d; border-radius: 6px; overflow: hidden;"> <!-- Terminal Header --> <div style="background: #21262d; padding: 12px 20px; border-bottom: 1px solid #30363d; "> <div style=" "> <div style="width: 12px; height: 12px; background: #ff5f57; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #ffbd2e; border-radius: 50%;"></div> <div style="width: 12px; height: 12px; background: #28ca42; border-radius: 50%;"></div> </div> <span style="color: #7d8590; font-size: 13px; margin-left: 10px;">~/social-proof-metrics</span> </div> <!-- Command Output --> <div style="padding: 20px;"> <div style="color: #58a6ff; margin-bottom: 20px;"> <span style="color: #7d8590;">$ </span>./social-proof-analyzer --company="${companyName}" --target="${prospectCompany}" </div> <!-- Metrics Dashboard --> <div style="background: #0d1117; border: 1px solid #30363d; border-radius: 6px; padding: 20px; margin: 20px 0;"> <div style="color: #7ee787; font-weight: 600; margin-bottom: 16px; font-size: 16px;"> Social Proof Analysis Complete </div> <table width="100%" cellpadding="0" cellspacing="0"> <div style="background: #21262d; padding: 16px; border-radius: 6px; border-left: 3px solid #7ee787;"> <div style="color: #7ee787; font-size: 24px; font-weight: 700; margin-bottom: 4px;">99.2%</div> <div style="color: #7d8590; font-size: 12px; text-transform: uppercase;">UPTIME RELIABILITY</div> </div> <div style="background: #21262d; padding: 16px; border-radius: 6px; border-left: 3px solid #58a6ff;"> <div style="color: #58a6ff; font-size: 24px; font-weight: 700; margin-bottom: 4px;">500+</div> <div style="color: #7d8590; font-size: 12px; text-transform: uppercase;">ACTIVE DEPLOYMENTS</div> </div> </div> <table width="100%" cellpadding="0" cellspacing="0"> <div style="background: #21262d; padding: 16px; border-radius: 6px; border-left: 3px solid #f85149;"> <div style="color: #f85149; font-size: 24px; font-weight: 700; margin-bottom: 4px;">&lt;50ms</div> <div style="color: #7d8590; font-size: 12px; text-transform: uppercase;">AVERAGE RESPONSE</div> </div> <div style="background: #21262d; padding: 16px; border-radius: 6px; border-left: 3px solid #d2a8ff;"> <div style="color: #d2a8ff; font-size: 24px; font-weight: 700; margin-bottom: 4px;">24/7</div> <div style="color: #7d8590; font-size: 12px; text-transform: uppercase;">DEV SUPPORT</div> </div> </div> </div> <!-- GitHub-style Activity --> <div style="background: #0d1117; border: 1px solid #30363d; border-radius: 6px; padding: 20px; margin: 20px 0;"> <div style="color: #f0f6fc; margin-bottom: 16px; "> <span style="font-size: 16px;"></span> <span style="font-weight: 600;">Recent Developer Feedback</span> </div> <div style="background: #21262d; border-radius: 6px; padding: 16px; margin: 12px 0;"> <div style=" margin-bottom: 8px;"> <div style="width: 20px; height: 20px; background: #7ee787; border-radius: 50%; font-size: 10px; color: #0d1117; font-weight: 700;"></div> <span style="color: #58a6ff; font-weight: 600;">alex-dev</span> <span style="color: #7d8590; font-size: 12px;">merged pull request #247</span> </div> <div style="color: #f0f6fc; font-size: 14px; margin-left: 32px;"> "Integration with ${companyName} APIs was seamless. Documentation is top-tier and support response is incredibly fast." </div> </div> <div style="background: #21262d; border-radius: 6px; padding: 16px; margin: 12px 0;"> <div style=" margin-bottom: 8px;"> <div style="width: 20px; height: 20px; background: #58a6ff; border-radius: 50%; font-size: 10px; color: white; font-weight: 700;"></div> <span style="color: #58a6ff; font-weight: 600;">sarah-cto</span> <span style="color: #7d8590; font-size: 12px;">starred repository</span> </div> <div style="color: #f0f6fc; font-size: 14px; margin-left: 32px;"> "Best developer experience we've encountered. Our team productivity increased 3x after implementing their solutions." </div> </div> </div> <!-- Content Integration --> <div style="border-top: 1px solid #30363d; padding-top: 20px; font-family: 'Inter', sans-serif; color: #f0f6fc; line-height: 1.6;"> ${content} </div> <!-- Tech CTA --> <div style="background: #21262d; border: 1px solid #30363d; border-radius: 6px; padding: 24px; margin: 24px 0; text-align: center;"> <div style="color: #7ee787; margin-bottom: 12px; font-size: 14px; font-weight: 600;"> > Ready to integrate with our APIs? </div> <div style="margin: 16px 0;"> <a href="${companyWebsite}" style="display: inline-block; background: #238636; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 600; font-size: 14px; font-family: inherit;"> npm install @${companyName.toLowerCase()}/sdk </a> </div> <div style="color: #7d8590; font-size: 12px;"> Or schedule a technical deep-dive session </div> </div> <!-- Terminal Footer --> <div style="border-top: 1px solid #30363d; padding-top: 16px; color: #7d8590; font-size: 12px;"> <div style="margin-bottom: 4px;"> <span style="color: #58a6ff;">Author:</span> ${senderName} &lt;${senderName.toLowerCase().replace(' ', '.')}@${companyName.toLowerCase()}.dev&gt; </div> <div style="margin-bottom: 4px;"> <span style="color: #58a6ff;">Company:</span> ${companyName} </div> <div> <span style="color: #58a6ff;">Repository:</span> <a href="${companyWebsite}" style="color: #7d8590; text-decoration: none;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>
</body>
</html>`; } /** * Design 35: Social Proof Luxury - Premium testimonials with gold accents and exclusivity */ getSocialProofLuxury(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getSocialProofContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Exclusive Social Proof'}</title>
</head>
<body style="margin: 0; padding: 0; font-family: 'Playfair Display', 'Times New Roman', serif; background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%); color: #f5f5f5;"> <div style="max-width: 600px; margin: 0 auto; background: transparent; box-shadow: 0 30px 80px rgba(0,0,0,0.3); position: relative;"> <!-- Luxury Border --> <div style="position: absolute; top: 0; left: 0; right: 0; height: 4px; background: linear-gradient(90deg, #d4af37 0%, #ffd700 50%, #d4af37 100%);"></div> <!-- Premium Header --> <div style="background: linear-gradient(135deg, #1a1a2e 0%, #2d2d44 100%); color: #f5f5f5; padding: 80px 60px; text-align: center; position: relative;"> <!-- Exclusive Badge --> <div style="position: absolute; top: 40px; right: 40px;"> <div style="background: linear-gradient(135deg, #d4af37 0%, #ffd700 100%); color: #1a1a2e; padding: 8px 20px; border-radius: 25px; font-size: 11px; font-weight: 700; text-transform: uppercase; letter-spacing: 1px; box-shadow: 0 4px 15px rgba(212, 175, 55, 0.4);"> Exclusive </div> </div> <!-- Premium Ornament --> <div style=" margin-bottom: 30px;"> <div style="width: 80px; height: 1px; background: linear-gradient(90deg, transparent 0%, #d4af37 50%, transparent 100%); position: relative;"> <div style="position: absolute; top: -6px; left: 50%; transform: translateX(-50%); width: 12px; height: 12px; background: #d4af37; border-radius: 50%; box-shadow: 0 0 20px rgba(212, 175, 55, 0.6);"></div> </div> </div> <h1 style="margin: 0; font-size: 48px; font-weight: 300; line-height: 1.1; color: #f5f5f5; letter-spacing: -2px; text-shadow: 0 4px 20px rgba(0,0,0,0.5);">${emailSubject || 'Distinguished Recognition'}</h1> <p style="margin: 20px 0 0 0; font-size: 20px; color: #d4af37; font-weight: 400; letter-spacing: 2px; text-transform: uppercase;">${companyName} Excellence</p> <!-- Luxury Separator --> <div style=" margin-top: 40px; "> <div style="width: 40px; height: 1px; background: linear-gradient(90deg, transparent 0%, #d4af37 100%);"></div> <div style="color: #d4af37; font-size: 24px;"></div> <div style="width: 40px; height: 1px; background: linear-gradient(90deg, #d4af37 0%, transparent 100%);"></div> </div> </div> <!-- Prestige Metrics --> <div style="padding: 0 60px; margin-top: -40px; position: relative; z-index: 10;"> <div style="background: #fafafa; border-radius: 12px; padding: 40px; box-shadow: 0 20px 50px rgba(0,0,0,0.1); border: 2px solid #f8f8f8; position: relative;"> <div style="position: absolute; top: -15px; left: 50%; transform: translateX(-50%); background: linear-gradient(135deg, #d4af37 0%, #ffd700 100%); padding: 8px 24px; border-radius: 25px; color: #1a1a2e; font-weight: 700; font-size: 12px; text-transform: uppercase; letter-spacing: 1px; box-shadow: 0 8px 25px rgba(212, 175, 55, 0.3);"> Prestige Metrics </div> <div style=" text-align: center; margin-top: 20px;"> <div style="flex: 1; color: #1a1a2e;"> <div style="font-size: 36px; font-weight: 300; margin-bottom: 8px; color: #d4af37;">Elite</div> <div style="font-size: 13px; color: #666; text-transform: uppercase; letter-spacing: 1px; font-family: 'Inter', sans-serif;">Partnership Tier</div> </div> <div style="width: 1px; background: linear-gradient(180deg, transparent 0%, #e0e0e0 50%, transparent 100%); margin: 0 30px;"></div> <div style="flex: 1; color: #1a1a2e;"> <div style="font-size: 36px; font-weight: 300; margin-bottom: 8px; color: #d4af37;">Platinum</div> <div style="font-size: 13px; color: #666; text-transform: uppercase; letter-spacing: 1px; font-family: 'Inter', sans-serif;">Service Level</div> </div> <div style="width: 1px; background: linear-gradient(180deg, transparent 0%, #e0e0e0 50%, transparent 100%); margin: 0 30px;"></div> <div style="flex: 1; color: #1a1a2e;"> <div style="font-size: 36px; font-weight: 300; margin-bottom: 8px; color: #d4af37;">VIP</div> <div style="font-size: 13px; color: #666; text-transform: uppercase; letter-spacing: 1px; font-family: 'Inter', sans-serif;">Client Status</div> </div> </div> </div> </div> <!-- Luxury Content --> <div style="padding: 60px; color: #2d2d2d; font-family: 'Inter', sans-serif;"> ${content} <!-- Premium Testimonial --> <div style="background: linear-gradient(135deg, #f8f8f8 0%, #ffffff 100%); border-radius: 16px; padding: 50px; margin: 50px 0; position: relative; border: 1px solid #f0f0f0;"> <div style="position: absolute; top: -20px; left: 40px; background: linear-gradient(135deg, #d4af37 0%, #ffd700 100%); width: 40px; height: 40px; border-radius: 50%; color: #1a1a2e; font-size: 20px; font-weight: 700; box-shadow: 0 8px 25px rgba(212, 175, 55, 0.4);"> " </div> <p style="margin: 20px 0 30px 0; font-size: 20px; line-height: 1.7; color: #2d2d2d; font-style: italic; font-weight: 300;"> Working with ${companyName} has been transformational for our organization. Their premium approach to business partnership and unwavering commitment to excellence sets them apart in the industry. </p> <div style=" border-top: 1px solid #e8e8e8; padding-top: 30px;"> <div style="width: 70px; height: 70px; background: linear-gradient(135deg, #d4af37 0%, #ffd700 100%); border-radius: 50%; color: #1a1a2e; font-weight: 700; font-size: 24px; box-shadow: 0 8px 25px rgba(212, 175, 55, 0.3);"> V </div> <div> <div style="font-weight: 600; color: #1a1a2e; margin-bottom: 6px; font-size: 18px;">Victoria Sterling</div> <div style="color: #666; font-size: 14px; margin-bottom: 2px;">Chief Executive Officer</div> <div style="color: #d4af37; font-size: 13px; font-weight: 600;">Platinum Global Enterprises</div> </div> </div> </div> </div> <!-- Exclusive CTA --> <div style="background: linear-gradient(135deg, #1a1a2e 0%, #2d2d44 100%); color: #f5f5f5; padding: 80px 60px; text-align: center;"> <div style="margin-bottom: 30px;"> <div style="display: inline-flex; background: rgba(212, 175, 55, 0.1); backdrop-filter: blur(10px); padding: 12px 24px; border-radius: 50px; border: 1px solid rgba(212, 175, 55, 0.3);"> <span style="font-size: 18px;"></span> <span style="font-size: 13px; font-weight: 600; text-transform: uppercase; letter-spacing: 1px; color: #d4af37;">Exclusive Invitation</span> </div> </div> <h3 style="margin: 0 0 20px 0; font-size: 32px; font-weight: 300; line-height: 1.3;">Join Our Distinguished Partners</h3> <p style="margin: 0 0 40px 0; font-size: 18px; color: rgba(245, 245, 245, 0.8); line-height: 1.6; font-family: 'Inter', sans-serif; font-weight: 300;"> Experience the pinnacle of business partnership with ${companyName}'s exclusive services. </p> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(135deg, #d4af37 0%, #ffd700 100%); color: #1a1a2e; padding: 20px 50px; text-decoration: none; border-radius: 30px; font-weight: 700; font-size: 16px; text-transform: uppercase; letter-spacing: 1px; box-shadow: 0 12px 35px rgba(212, 175, 55, 0.4); transition: all 0.3s ease; font-family: 'Inter', sans-serif;"> Request Private Consultation </a> </div> <!-- Luxury Footer --> <div style="background: #1a1a2e; color: #f5f5f5; padding: 60px; text-align: center;"> <div style="margin-bottom: 40px;"> <div style="width: 60px; height: 1px; background: linear-gradient(90deg, transparent 0%, #d4af37 50%, transparent 100%); margin: 0 auto; position: relative;"> <div style="position: absolute; top: -4px; left: 50%; transform: translateX(-50%); width: 8px; height: 8px; background: #d4af37; border-radius: 50%;"></div> </div> </div> <div style="font-size: 20px; font-weight: 400; margin-bottom: 12px;">${senderName}</div> <div style="color: #d4af37; font-size: 14px; margin-bottom: 8px; text-transform: uppercase; letter-spacing: 2px; font-family: 'Inter', sans-serif;">Distinguished Partnership Director</div> <div style="font-size: 18px; margin-bottom: 25px;">${companyName}</div> <div style=" margin: 30px 0;"> <div style="width: 30px; height: 1px; background: linear-gradient(90deg, transparent 0%, #d4af37 100%);"></div> <div style="color: #d4af37; font-size: 16px;"></div> <div style="width: 30px; height: 1px; background: linear-gradient(90deg, #d4af37 0%, transparent 100%);"></div> </div> <a href="${companyWebsite}" style="color: #d4af37; text-decoration: none; font-family: 'Inter', sans-serif; font-weight: 500;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> <!-- Luxury Bottom Border --> <div style="height: 4px; background: linear-gradient(90deg, #d4af37 0%, #ffd700 50%, #d4af37 100%);"></div> </div>
</body>
</html>`; } /** * Design 36: Social Proof Creative - Artistic testimonials with creative visual elements */ getSocialProofCreative(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject, templateData) { const content = this.getSocialProofContent(prospectName, prospectCompany, companyName, senderName); return `<!DOCTYPE html>
<html lang="en">
<head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${emailSubject || 'Creative Social Proof'}</title>
</head>
<body style="margin: 0; padding: 0; font-family: 'Comic Sans MS', 'Marker Felt', cursive; background: linear-gradient(45deg, #ff9a9e 0%, #fecfef 25%, #fecfef 75%, #ffd1d9 100%); min-height: 100vh;"> <div style="max-width: 600px; margin: 0 auto; background: transparent; position: relative; overflow: hidden;"> <!-- Creative Header --> <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 60px 40px; text-align: center; position: relative; overflow: hidden;"> <!-- Floating Elements --> <div style="position: absolute; top: 20px; left: 20px; width: 40px; height: 40px; background: #f5f5f5; border-radius: 50%; transform: rotate(15deg);"></div> <div style="position: absolute; top: 80px; right: 30px; width: 25px; height: 25px; background: #f5f5f5; transform: rotate(-20deg);"></div> <div style="position: absolute; bottom: 30px; left: 50px; width: 60px; height: 20px; background: #f5f5f5; border-radius: 10px; transform: rotate(8deg);"></div> <div style="position: absolute; bottom: 60px; right: 20px; width: 30px; height: 30px; background: #f5f5f5; clip-path: polygon(50% 0%, 0% 100%, 100% 100%); transform: rotate(45deg);"></div> <!-- Playful Badge --> <div style="display: inline-flex; background: #f5f5f5; color: #667eea; padding: 12px 24px; border-radius: 25px; margin-bottom: 30px; transform: rotate(-2deg); box-shadow: 0 8px 25px rgba(0,0,0,0.1);"> <span style="font-size: 18px; animation: bounce 2s infinite;"></span> <span style="font-weight: 700; text-transform: uppercase; letter-spacing: 1px; font-size: 12px; font-family: 'Arial', sans-serif;">Loved by Thousands</span> </div> <h1 style="margin: 0; font-size: 42px; font-weight: 800; color: white; line-height: 1.1; text-shadow: 0 4px 20px rgba(0,0,0,0.3); transform: rotate(-1deg); position: relative; z-index: 5;">${emailSubject || 'Amazing Social Proof!'}</h1> <p style="margin: 16px 0 0 0; font-size: 20px; color: rgba(255,255,255,0.9); font-weight: 600; transform: rotate(1deg); font-family: 'Arial', sans-serif;">${companyName} Love Stories</p> <!-- Wavy Separator --> <div style="margin-top: 30px; text-align: center; font-size: 30px; color: rgba(255,255,255,0.6); transform: rotate(5deg);"> ~ ~ ~ ~ ~ </div> </div> <!-- Creative Stats --> <div style="background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%); padding: 40px; text-align: center; position: relative;"> <div style="position: absolute; top: -20px; left: 50%; transform: translateX(-50%) rotate(-5deg); background: transparent; padding: 8px 20px; border-radius: 20px; box-shadow: 0 8px 25px rgba(0,0,0,0.1); color: #e17055; font-weight: 800; font-family: 'Arial', sans-serif; font-size: 14px;"> SUPER STATS! </div> <div style=" margin-top: 20px;"> <div style="text-align: center; transform: rotate(-3deg);"> <div style="font-size: 36px; font-weight: 800; color: #e17055; margin-bottom: 8px; text-shadow: 2px 2px 0px rgba(0,0,0,0.1);">500+</div> <div style="font-size: 13px; color: #d63031; font-weight: 700; font-family: 'Arial', sans-serif; text-transform: uppercase; letter-spacing: 0.5px;">Happy Clients</div> </div> <div style="text-align: center; transform: rotate(2deg);"> <div style="font-size: 36px; font-weight: 800; color: #e17055; margin-bottom: 8px; text-shadow: 2px 2px 0px rgba(0,0,0,0.1);">99%</div> <div style="font-size: 13px; color: #d63031; font-weight: 700; font-family: 'Arial', sans-serif; text-transform: uppercase; letter-spacing: 0.5px;">Satisfaction</div> </div> <div style="text-align: center; transform: rotate(-1deg);"> <div style="font-size: 36px; font-weight: 800; color: #e17055; margin-bottom: 8px; text-shadow: 2px 2px 0px rgba(0,0,0,0.1);">24/7</div> <div style="font-size: 13px; color: #d63031; font-weight: 700; font-family: 'Arial', sans-serif; text-transform: uppercase; letter-spacing: 0.5px;">Fun Support</div> </div> </div> </div> <!-- Content with Doodles --> <div style="padding: 50px 40px; position: relative; background: transparent;"> <!-- Doodle Elements --> <div style="position: absolute; top: 40px; right: 30px; width: 80px; height: 80px; border: 3px dashed #fd79a8; border-radius: 50%; transform: rotate(15deg); opacity: 0.3;"></div> <div style="position: absolute; bottom: 100px; left: 20px; width: 0; height: 0; border-left: 20px solid transparent; border-right: 20px solid transparent; border-bottom: 35px solid #fdcb6e; opacity: 0.4; transform: rotate(-20deg);"></div> <div style="position: absolute; top: 200px; left: 10px; font-size: 60px; color: #a29bfe; opacity: 0.2; transform: rotate(-30deg); z-index: 1;"></div> <div style="font-family: 'Arial', sans-serif; color: #2d3436; line-height: 1.7; position: relative; z-index: 2;"> ${content} </div> <!-- Creative Testimonial --> <div style="background: linear-gradient(135deg, #fd79a8 0%, #fdcb6e 100%); border-radius: 25px; padding: 40px; margin: 40px 0; transform: rotate(-1deg); position: relative; overflow: hidden; box-shadow: 0 15px 35px rgba(253, 121, 168, 0.3);"> <!-- Speech Bubble Tail --> <div style="position: absolute; bottom: -15px; left: 60px; width: 0; height: 0; border-left: 15px solid transparent; border-right: 15px solid transparent; border-top: 15px solid #fd79a8; transform: rotate(20deg);"></div> <div style=" margin-bottom: 20px;"> <div style="font-size: 40px; transform: rotate(-10deg);"></div> <div style="color: white; font-weight: 800; font-size: 18px; font-family: 'Arial', sans-serif; text-shadow: 1px 1px 2px rgba(0,0,0,0.2);"> What Our Amazing Clients Say! </div> </div> <p style="margin: 0 0 25px 0; font-size: 18px; line-height: 1.6; color: white; font-style: italic; font-family: 'Arial', sans-serif; font-weight: 600;"> "${companyName} is absolutely fantastic! Their creative approach and innovative solutions have completely transformed our business. We couldn't be happier with the results!" </p> <div style=" "> <div style="width: 55px; height: 55px; background: #fafafa; border-radius: 50%; font-weight: 800; font-size: 22px; color: #fd79a8; transform: rotate(-5deg); box-shadow: 0 4px 12px rgba(0,0,0,0.2);"> J </div> <div> <div style="color: white; font-weight: 700; margin-bottom: 4px; font-family: 'Arial', sans-serif; font-size: 16px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2);">Jessica Rainbow</div> <div style="color: rgba(255,255,255,0.9); font-size: 14px; font-weight: 600; font-family: 'Arial', sans-serif;">Creative Director, Rainbow Innovations</div> </div> </div> </div> </div> <!-- Playful CTA --> <div style="background: linear-gradient(135deg, #6c5ce7 0%, #a29bfe 100%); padding: 60px 40px; text-align: center; position: relative; overflow: hidden;"> <!-- Floating Icons --> <div style="position: absolute; top: 30px; left: 30px; font-size: 30px; animation: float 3s ease-in-out infinite; opacity: 0.7;"></div> <div style="position: absolute; top: 50px; right: 40px; font-size: 25px; animation: float 2.5s ease-in-out infinite reverse; opacity: 0.7;"></div> <div style="position: absolute; bottom: 40px; left: 50px; font-size: 28px; animation: float 3.5s ease-in-out infinite; opacity: 0.7;"></div> <div style="margin-bottom: 25px;"> <div style="display: inline-block; background: #f5f5f5; color: #6c5ce7; padding: 12px 28px; border-radius: 25px; font-weight: 800; font-family: 'Arial', sans-serif; text-transform: uppercase; letter-spacing: 1px; font-size: 12px; transform: rotate(-2deg); box-shadow: 0 8px 25px rgba(0,0,0,0.1);"> Ready to Join the Fun? </div> </div> <h3 style="margin: 0 0 20px 0; font-size: 32px; font-weight: 800; color: white; line-height: 1.2; text-shadow: 0 4px 20px rgba(0,0,0,0.3); font-family: 'Arial', sans-serif;">Let's Create Something Amazing!</h3> <p style="margin: 0 0 35px 0; font-size: 18px; color: rgba(255,255,255,0.9); font-family: 'Arial', sans-serif; font-weight: 600;"> Join our creative community and experience the magic of ${companyName}! </p> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(135deg, #fd79a8 0%, #fdcb6e 100%); color: white; padding: 18px 40px; text-decoration: none; border-radius: 35px; font-weight: 800; font-size: 16px; font-family: 'Arial', sans-serif; text-transform: uppercase; letter-spacing: 0.5px; box-shadow: 0 12px 30px rgba(253, 121, 168, 0.4); transform: rotate(-1deg); transition: all 0.3s ease;"> Start Our Adventure! </a> </div> <!-- Creative Footer --> <div style="background: #2d3436; color: white; padding: 50px 40px; text-align: center; position: relative;"> <!-- Decorative Elements --> <div style="position: absolute; top: 20px; left: 20px; width: 30px; height: 30px; background: #fd79a8; clip-path: polygon(50% 0%, 0% 100%, 100% 100%); transform: rotate(45deg); opacity: 0.6;"></div> <div style="position: absolute; top: 30px; right: 30px; width: 25px; height: 25px; background: #fdcb6e; border-radius: 50%; opacity: 0.6;"></div> <div style="position: absolute; bottom: 25px; left: 40px; width: 35px; height: 15px; background: #a29bfe; border-radius: 10px; transform: rotate(-15deg); opacity: 0.6;"></div> <div style="margin-bottom: 20px;"> <span style="font-size: 24px;"></span> </div> <div style="font-size: 22px; font-weight: 700; margin-bottom: 8px; font-family: 'Arial', sans-serif;">${senderName}</div> <div style="color: #fd79a8; font-size: 14px; margin-bottom: 6px; font-weight: 600; text-transform: uppercase; letter-spacing: 1px; font-family: 'Arial', sans-serif;">Chief Creative Officer</div> <div style="font-size: 18px; font-weight: 600; margin-bottom: 20px; font-family: 'Arial', sans-serif;">${companyName}</div> <div style="margin: 25px 0; "> <span style="font-size: 20px;"></span> <span style="font-size: 20px;"></span> <span style="font-size: 20px;"></span> </div> <div style="font-size: 16px; font-weight: 600; transform: rotate(0.3deg);">${companyName}</div> <div style="margin: 15px 0; "> <span style="font-size: 20px;"></span> <span style="font-size: 20px;"></span> <span style="font-size: 20px;"></span> </div> <div style="font-size: 12px; font-weight: 500; opacity: 0.9; transform: rotate(-0.3deg);">Creativity meets business magic!</div> </div> </div>
</body>
</html>`; } /** * #1: () */ getMinimalistGradientDesign(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getTemplateSpecificContent(templateType, prospectName, prospectCompany, companyName, senderName); return `<div style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'SF Pro Display', system-ui, Arial, sans-serif; max-width: 600px; margin: 0 auto; background: linear-gradient(135deg, #ffffff 0%, #fafbfc 100%); box-shadow: 0 20px 40px rgba(0,0,0,0.08); border-radius: 20px; overflow: hidden;"> <div style="padding: 50px 40px 20px 40px; text-align: center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); position: relative;"> <div style="width: 60px; height: 4px; background: #f5f5f5; margin: 0 auto 30px auto; border-radius: 2px; box-shadow: 0 2px 10px rgba(255,255,255,0.3);"></div> <h1 style="color: #ffffff; margin: 0; font-size: 32px; font-weight: 800; letter-spacing: -0.8px; line-height: 1.1; text-shadow: 0 2px 20px rgba(0,0,0,0.3);">${emailSubject || prospectCompany}</h1> <p style="color: rgba(255,255,255,0.9); margin: 12px 0 0 0; font-size: 18px; font-weight: 500; letter-spacing: 0.3px;">× ${companyName}</p> </div> <div style="padding: 40px; background: transparent;">${content}</div> <div style="padding: 0 32px 40px 32px; text-align: left;"> <div style="width: 100%; height: 1px; background: linear-gradient(90deg, transparent 0%, #d2d2d7 50%, transparent 100%); margin: 24px 0;"></div> <div style="color: #6b6b6b; font-size: 15px; line-height: 1.4;"> <div style="font-weight: 600; color: #1d1d1f; margin-bottom: 2px;">${senderName}</div> <div>${companyName}</div> <div style="margin-top: 8px;"> <a href="${companyWebsite}" style="color: #007AFF; text-decoration: none; font-weight: 500;">${companyWebsite.replace('https://', '').replace('http://', '')}</a> </div> </div> </div> </div>`; } /** * #2: */ getModernCardDesign(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getTemplateSpecificContent(templateType, prospectName, prospectCompany, companyName, senderName); return `<div style="font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif; max-width: 600px; margin: 0 auto; background: #f8fafc; padding: 30px;"> <div style="background: #fafafa; border-radius: 24px; box-shadow: 0 25px 50px rgba(0,0,0,0.1); overflow: hidden;"> <div style="background: linear-gradient(45deg, #ff6b6b, #ee5a24); padding: 60px 40px; text-align: center; position: relative;"> <div style="position: absolute; top: 20px; right: 20px; width: 80px; height: 80px; background: #f5f5f5; border-radius: 50%; backdrop-filter: blur(10px);"></div> <h1 style="color: white; font-size: 36px; font-weight: 900; margin: 0; letter-spacing: -1px;">${emailSubject || 'Partnership Opportunity'}</h1> <p style="color: rgba(255,255,255,0.9); margin: 16px 0 0 0; font-size: 20px; font-weight: 600;">${prospectCompany} × ${companyName}</p> </div> <div style="padding: 50px 40px; background: transparent;"> <div style="background: linear-gradient(135deg, #667eea10, #764ba210); border: 1px solid #e2e8f0; border-radius: 16px; padding: 30px; margin-bottom: 30px;"> ${content} </div> <div style="text-align: center; margin-top: 40px;"> <a href="${companyWebsite}" style="display: inline-block; background: linear-gradient(45deg, #ff6b6b, #ee5a24); color: white; padding: 16px 32px; border-radius: 50px; text-decoration: none; font-weight: 700; font-size: 16px; box-shadow: 0 10px 30px rgba(255,107,107,0.3); transition: transform 0.2s ease;">Schedule Call</a> </div> </div> <div style="background: #f8fafc; padding: 30px 40px; border-top: 1px solid #e2e8f0;"> <div style="text-align: center; color: #64748b; font-size: 14px;"> <div style="font-weight: 600; color: #1e293b; margin-bottom: 8px;">${senderName}</div> <div>${companyName} • ${companyWebsite.replace('https://', '').replace('http://', '')}</div> </div> </div> </div> </div>`; } /** * #3: */ getExecutiveDarkDesign(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getTemplateSpecificContent(templateType, prospectName, prospectCompany, companyName, senderName); return `<div style="font-family: 'SF Pro Display', -apple-system, system-ui, sans-serif; max-width: 600px; margin: 0 auto; background: #0f0f0f; color: #ffffff; border-radius: 16px; overflow: hidden; box-shadow: 0 20px 40px rgba(0,0,0,0.5);"> <div style="background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%); padding: 50px 40px; text-align: center; border-bottom: 1px solid #333;"> <div style="width: 40px; height: 2px; background: #ffd700; margin: 0 auto 20px; border-radius: 1px;"></div> <h1 style="color: #ffffff; font-size: 28px; font-weight: 700; margin: 0; letter-spacing: -0.5px;">${emailSubject || 'Executive Brief'}</h1> <p style="color: #888; margin: 12px 0 0 0; font-size: 16px; font-weight: 500;">${prospectCompany} Leadership Team</p> </div> <div style="padding: 40px; background: #1a1a1a; color: #e0e0e0; line-height: 1.7;"> <div style="border-left: 3px solid #ffd700; padding-left: 20px; margin-bottom: 30px;"> ${content} </div> <div style="background: #2d2d2d; border-radius: 12px; padding: 25px; text-align: center;"> <div style="color: #ffd700; font-size: 14px; font-weight: 600; margin-bottom: 8px;">CONFIDENTIAL BRIEFING</div> <a href="${companyWebsite}" style="color: #ffffff; background: linear-gradient(45deg, #ffd700, #ffed4e); padding: 12px 24px; border-radius: 6px; text-decoration: none; font-weight: 600; font-size: 14px; display: inline-block; color: #000;">Request Meeting</a> </div> </div> <div style="background: #0f0f0f; padding: 25px 40px; border-top: 1px solid #333; text-align: center;"> <div style="color: #888; font-size: 13px;"> <div style="font-weight: 600; color: #fff; margin-bottom: 4px;">${senderName}</div> <div>${companyName} • Executive Relations</div> </div> </div> </div>`; } /** * #4: */ getTechStartupDesign(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { const content = this.getTemplateSpecificContent(templateType, prospectName, prospectCompany, companyName, senderName); return `<div style="font-family: 'Roboto', 'Helvetica Neue', Arial, sans-serif; max-width: 620px; margin: 0 auto; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 2px; border-radius: 20px;"> <div style="background: #fafafa; border-radius: 18px; overflow: hidden;"> <div style="background: linear-gradient(45deg, #00c6ff, #0072ff); padding: 45px 35px; text-align: center; position: relative;"> <div style="position: absolute; top: 15px; left: 15px; width: 60px; height: 60px; background: #f5f5f5; border-radius: 12px; backdrop-filter: blur(10px);"></div> <div style="position: absolute; bottom: 15px; right: 15px; width: 40px; height: 40px; background: #f5f5f5; border-radius: 50%; backdrop-filter: blur(10px);"></div> <h1 style="color: white; font-size: 32px; font-weight: 800; margin: 0; letter-spacing: -0.8px; text-shadow: 0 2px 10px rgba(0,0,0,0.2);">${emailSubject || ' Innovation Partnership'}</h1> <p style="color: rgba(255,255,255,0.95); margin: 16px 0 0 0; font-size: 18px; font-weight: 600;">${prospectCompany} × ${companyName}</p> </div> <div style="padding: 40px 35px;"> <div style="background: linear-gradient(135deg, #f1f5f9, #e2e8f0); border-radius: 16px; padding: 30px; margin-bottom: 25px; border: 1px solid #cbd5e1;"> ${content} </div> <div style=" background: #0072ff; color: white; padding: 20px 25px; border-radius: 12px; margin-top: 30px;"> <div> <div style="font-weight: 700; font-size: 16px;">Ready to innovate together?</div> <div style="font-size: 14px; opacity: 0.9;">Join 500+ companies already partnering with us</div> </div> <a href="${companyWebsite}" style="background: transparent; color: #0072ff; padding: 12px 20px; border-radius: 8px; text-decoration: none; font-weight: 700; font-size: 14px;">Let's Talk</a> </div> </div> <div style="background: #f8fafc; padding: 25px 35px; border-top: 1px solid #e2e8f0; text-align: center;"> <div style="color: #64748b; font-size: 14px;"> <div style="font-weight: 600; color: #1e293b; margin-bottom: 6px;">${senderName}</div> <div>${companyName} • Innovation Partnerships</div> </div> </div> </div> </div>`; } /** * Get template-specific content for each email type */ getTemplateSpecificContent(templateType, prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData) { switch (templateType) { case 'partnership_outreach': return this.getPartnershipOutreachContent(prospectName, prospectCompany, companyName, senderName); case 'initial_contact': return this.getInitialContactContent(prospectName, prospectCompany, companyName); case 'first_followup': return this.getFirstFollowupContent(prospectName, prospectCompany, companyName); case 'value_demonstration': return this.getValueDemonstrationContent(prospectName, prospectCompany, companyName); case 'social_proof': return this.getSocialProofContent(prospectName, prospectCompany, companyName); default: return this.getPartnershipOutreachContent(prospectName, prospectCompany, companyName); } } /** * Partnership Outreach Content - Apple Style */ getPartnershipOutreachContent(prospectName, prospectCompany, companyName, senderName) { return ` <!-- - --> <div style="margin-bottom: 32px; text-align: left;"> <p style="color: #1d1d1f; font-size: 18px; line-height: 1.4; margin: 0 0 20px 0; font-weight: 500;"> Hi ${prospectName} </p> <p style="color: #2c2c2c; font-size: 17px; line-height: 1.5; margin: 0; font-weight: 400;"> I noticed ${prospectCompany}'s impressive work in the industry. <span style="color: #007AFF; font-weight: 500;">What if we could accelerate that growth together?</span> </p> </div> <!-- - --> <div style="background: linear-gradient(135deg, #f8f9ff 0%, #fff8f8 100%); border-radius: 16px; padding: 28px; margin: 32px 0; border: 1px solid #f0f0f5;"> <div style=" margin-bottom: 20px;"> <div style="width: 8px; height: 8px; background: #34C759; border-radius: 50%; margin-right: 12px;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 600; line-height: 1.3;"> 40% faster execution </span> </div> <div style=" margin-bottom: 20px;"> <div style="width: 8px; height: 8px; background: #FF9500; border-radius: 50%; margin-right: 12px;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 600; line-height: 1.3;"> Zero integration complexity </span> </div> <div style=" "> <div style="width: 8px; height: 8px; background: #5856D6; border-radius: 50%; margin-right: 12px;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 600; line-height: 1.3;"> Measurable ROI in 30 days </span> </div> </div> <!-- - --> <div style="text-align: center; margin: 32px 0; padding: 24px; background: #fafafa; border-radius: 12px;"> <div style="font-size: 36px; font-weight: 800; color: #007AFF; margin-bottom: 8px; line-height: 1;"> 95% </div> <p style="color: #4a4a4a; font-size: 14px; margin: 0; font-weight: 500; text-transform: uppercase; letter-spacing: 1px;"> Client satisfaction rate </p> </div> <!-- CTA - --> <div style="text-align: center; margin: 36px 0;"> <p style="color: #424245; font-size: 17px; line-height: 1.4; margin: 0 0 24px 0;"> Ready for a 15-minute conversation about ${prospectCompany}'s next chapter? </p> <a href="mailto:${prospect.templateData?.senderEmail || 'contact@your-company.com'}?subject=Partnership%20-%20${encodeURIComponent(prospectCompany)}" style="display: inline-block; background: linear-gradient(135deg, #007AFF 0%, #5856D6 100%); color: white; padding: 16px 32px; text-decoration: none; border-radius: 25px; font-weight: 600; font-size: 16px; letter-spacing: 0.3px; box-shadow: 0 4px 20px rgba(0,122,255,0.3); transition: all 0.2s ease;"> Let's connect </a> </div>`; } /** * Initial Contact Content - Apple Style */ getInitialContactContent(prospectName, prospectCompany, companyName) { return ` <!-- - --> <div style="margin-bottom: 32px; text-align: left;"> <p style="color: #1d1d1f; font-size: 18px; line-height: 1.4; margin: 0 0 20px 0; font-weight: 500;"> Hi ${prospectName} </p> <p style="color: #2c2c2c; font-size: 17px; line-height: 1.5; margin: 0; font-weight: 400;"> I've been researching innovative companies in your space and <span style="color: #007AFF; font-weight: 500;">${prospectCompany} caught my attention.</span> </p> </div> <!-- --> <div style="background: linear-gradient(135deg, #f0fff4 0%, #f0f8ff 100%); border-radius: 16px; padding: 28px; margin: 32px 0; text-align: center;"> <table width="100%" cellpadding="0" cellspacing="0"> <div> <div style="font-size: 24px; font-weight: 800; color: #34C759; margin-bottom: 4px;">40%</div> <div style="font-size: 12px; color: #4a4a4a; text-transform: uppercase; letter-spacing: 1px;">Efficiency</div> </div> <div> <div style="font-size: 24px; font-weight: 800; color: #FF9500; margin-bottom: 4px;">30%</div> <div style="font-size: 12px; color: #4a4a4a; text-transform: uppercase; letter-spacing: 1px;">Cost Save</div> </div> <div> <div style="font-size: 24px; font-weight: 800; color: #5856D6; margin-bottom: 4px;">2x</div> <div style="font-size: 12px; color: #4a4a4a; text-transform: uppercase; letter-spacing: 1px;">Growth</div> </div> </div> <p style="color: #424245; font-size: 14px; margin: 0; font-style: italic;"> Results from similar companies in your industry </p> </div> <!-- CTA --> <div style="text-align: center; margin: 36px 0;"> <p style="color: #424245; font-size: 17px; line-height: 1.4; margin: 0 0 24px 0;"> Curious how this could apply to ${prospectCompany}? </p> <a href="mailto:${prospect.templateData?.senderEmail || 'contact@your-company.com'}?subject=Initial%20Discussion%20-%20${encodeURIComponent(prospectCompany)}" style="display: inline-block; background: linear-gradient(135deg, #34C759 0%, #30D158 100%); color: white; padding: 16px 32px; text-decoration: none; border-radius: 25px; font-weight: 600; font-size: 16px; letter-spacing: 0.3px; box-shadow: 0 4px 20px rgba(52,199,89,0.3);"> Quick 15-min chat </a> </div>`; } /** * First Follow-up Content - Apple Style */ getFirstFollowupContent(prospectName, prospectCompany, companyName) { return ` <!-- - --> <div style="margin-bottom: 32px; text-align: left;"> <p style="color: #1d1d1f; font-size: 18px; line-height: 1.4; margin: 0 0 20px 0; font-weight: 500;"> Hi ${prospectName} </p> <p style="color: #424245; font-size: 17px; line-height: 1.5; margin: 0 0 16px 0; font-weight: 400;"> I know you're incredibly busy, so I'll keep this brief. </p> <p style="color: #2c2c2c; font-size: 17px; line-height: 1.5; margin: 0; font-weight: 400;"> Since reaching out, I've been thinking about challenges <span style="color: #007AFF; font-weight: 500;">${prospectCompany} might be navigating.</span> </p> </div> <!-- - --> <div style="background: linear-gradient(135deg, #fff8f0 0%, #f0f8ff 100%); border-radius: 16px; padding: 28px; margin: 32px 0; border-left: 4px solid #FF9500;"> <div style="color: #FF9500; font-size: 14px; font-weight: 600; margin-bottom: 16px; text-transform: uppercase; letter-spacing: 1px;"> Recent Results </div> <div style=" margin-bottom: 16px;"> <div style="width: 6px; height: 6px; background: #FF9500; border-radius: 50%; margin-right: 12px;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 500;">35% efficiency improvement in 60 days</span> </div> <div style=" margin-bottom: 16px;"> <div style="width: 6px; height: 6px; background: #34C759; border-radius: 50%; margin-right: 12px;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 500;">Significant cost reduction through automation</span> </div> <div style=" "> <div style="width: 6px; height: 6px; background: #5856D6; border-radius: 50%; margin-right: 12px;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 500;">Better insights, faster decisions</span> </div> </div> <!-- CTA - --> <div style="text-align: center; margin: 36px 0;"> <p style="color: #424245; font-size: 17px; line-height: 1.4; margin: 0 0 24px 0;"> Just 10 minutes to see if this fits ${prospectCompany}? </p> <a href="mailto:${prospect.templateData?.senderEmail || 'contact@your-company.com'}?subject=Follow%20up%20-%20${encodeURIComponent(prospectCompany)}" style="display: inline-block; background: linear-gradient(135deg, #FF9500 0%, #FFAD33 100%); color: white; padding: 16px 32px; text-decoration: none; border-radius: 25px; font-weight: 600; font-size: 16px; letter-spacing: 0.3px; box-shadow: 0 4px 20px rgba(255,149,0,0.3);"> Quick call this week </a> </div>`; } /** * Value Demonstration Content - Apple Style */ getValueDemonstrationContent(prospectName, prospectCompany, companyName) { return ` <!-- - --> <div style="margin-bottom: 32px; text-align: left;"> <p style="color: #1d1d1f; font-size: 18px; line-height: 1.4; margin: 0 0 20px 0; font-weight: 500;"> Hi ${prospectName} </p> <p style="color: #2c2c2c; font-size: 17px; line-height: 1.5; margin: 0; font-weight: 400;"> I wanted to share a story that might resonate with <span style="color: #007AFF; font-weight: 500;">${prospectCompany}'s situation.</span> </p> </div> <!-- - --> <div style="background: linear-gradient(135deg, #f0f8ff 0%, #fff0f8 100%); border-radius: 16px; padding: 32px; margin: 32px 0; position: relative; overflow: hidden;"> <div style="position: absolute; top: 0; right: 0; width: 60px; height: 60px; background: rgba(0,122,255,0.1); border-radius: 50%; transform: translate(30px, -30px);"></div> <div style="color: #5856D6; font-size: 14px; font-weight: 600; margin-bottom: 20px; text-transform: uppercase; letter-spacing: 1px;"> Case Study </div> <table width="100%" cellpadding="0" cellspacing="0"> <div style="text-align: center;"> <div style="font-size: 32px; font-weight: 800; color: #34C759; margin-bottom: 8px;">+40%</div> <div style="font-size: 14px; color: #1d1d1f; font-weight: 500;">Productivity</div> </div> <div style="text-align: center;"> <div style="font-size: 32px; font-weight: 800; color: #FF9500; margin-bottom: 8px;">-25%</div> <div style="font-size: 14px; color: #1d1d1f; font-weight: 500;">Costs</div> </div> <div style="text-align: center;"> <div style="font-size: 32px; font-weight: 800; color: #5856D6; margin-bottom: 8px;">50%</div> <div style="font-size: 14px; color: #1d1d1f; font-weight: 500;">Faster</div> </div> </div> <p style="color: #4a4a4a; font-size: 14px; margin: 0; text-align: center; font-style: italic;"> Results achieved within 90 days </p> </div> <!-- CTA - --> <div style="text-align: center; margin: 36px 0;"> <p style="color: #424245; font-size: 17px; line-height: 1.4; margin: 0 0 24px 0;"> Could ${prospectCompany} see similar results? </p> <a href="mailto:${prospect.templateData?.senderEmail || 'contact@your-company.com'}?subject=Value%20Discussion%20-%20${encodeURIComponent(prospectCompany)}" style="display: inline-block; background: linear-gradient(135deg, #5856D6 0%, #7B68EE 100%); color: white; padding: 16px 32px; text-decoration: none; border-radius: 25px; font-weight: 600; font-size: 16px; letter-spacing: 0.3px; box-shadow: 0 4px 20px rgba(88,86,214,0.3);"> Explore possibilities </a> </div>`; } /** * Social Proof Content - Apple Style */ getSocialProofContent(prospectName, prospectCompany, companyName) { return ` <!-- - --> <div style="margin-bottom: 32px; text-align: left;"> <p style="color: #1d1d1f; font-size: 18px; line-height: 1.4; margin: 0 0 20px 0; font-weight: 500;"> Hi ${prospectName} </p> <p style="color: #2c2c2c; font-size: 17px; line-height: 1.5; margin: 0; font-weight: 400;"> I thought you'd find it interesting what <span style="color: #007AFF; font-weight: 500;">industry leaders are saying about working with ${companyName}.</span> </p> </div> <!-- - --> <div style="background: #fafafa; border-left: 4px solid #34C759; padding: 28px; margin: 32px 0; border-radius: 0 12px 12px 0; position: relative;"> <div style="position: absolute; top: 16px; left: 16px; width: 24px; height: 24px; background: #34C759; border-radius: 50%; color: white; font-size: 14px; font-weight: bold;">"</div> <p style="color: #1d1d1f; font-size: 16px; line-height: 1.5; margin: 0 0 16px 32px; font-style: italic; font-weight: 500;"> The results exceeded our expectations. We saw immediate improvements in efficiency and significant cost savings. </p> <div style="color: #4a4a4a; font-size: 14px; margin-left: 32px; font-weight: 500;"> — CEO, Leading Tech Company </div> </div> <!-- --> <div style="background: linear-gradient(135deg, #f0fff4 0%, #fff8f0 100%); border-radius: 16px; padding: 28px; margin: 32px 0;"> <div style="color: #34C759; font-size: 14px; font-weight: 600; margin-bottom: 20px; text-transform: uppercase; letter-spacing: 1px; text-align: center;"> Typical Results </div> <div style=" margin-bottom: 16px;"> <div style="width: 20px; height: 20px; background: #34C759; border-radius: 4px; margin-right: 12px; color: white; font-size: 12px; font-weight: bold;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 500;">30-50% improvement in operational metrics</span> </div> <div style=" margin-bottom: 16px;"> <div style="width: 20px; height: 20px; background: #FF9500; border-radius: 4px; margin-right: 12px; color: white; font-size: 12px; font-weight: bold;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 500;">Significant cost reduction through automation</span> </div> <div style=" "> <div style="width: 20px; height: 20px; background: #5856D6; border-radius: 4px; margin-right: 12px; color: white; font-size: 12px; font-weight: bold;"></div> <span style="color: #1d1d1f; font-size: 16px; font-weight: 500;">Enhanced customer satisfaction scores</span> </div> </div> <!-- CTA - --> <div style="text-align: center; margin: 36px 0;"> <p style="color: #424245; font-size: 17px; line-height: 1.4; margin: 0 0 24px 0;"> Ready for ${prospectCompany} to achieve similar results? </p> <a href="mailto:${prospect.templateData?.senderEmail || 'contact@your-company.com'}?subject=Success%20Discussion%20-%20${encodeURIComponent(prospectCompany)}" style="display: inline-block; background: linear-gradient(135deg, #34C759 0%, #30D158 100%); color: white; padding: 16px 32px; text-decoration: none; border-radius: 25px; font-weight: 600; font-size: 16px; letter-spacing: 0.3px; box-shadow: 0 4px 20px rgba(52,199,89,0.3);"> Join our success stories </a> </div>`; } getFallbackAdvancedHTMLTemplate(prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject) { // Use the new Apple-style template system - defaulting to partnership_outreach return this.getAppleStyleHTMLTemplate('partnership_outreach', prospectName, prospectCompany, companyName, senderName, companyWebsite, personalizedData, emailSubject); } async applyPremium2025Template(selectedTemplate, personalizedContent, prospect, businessAnalysis, templateInfo, campaignGoal) { console.log(` Generating dynamic premium template: ${selectedTemplate} with design #${Math.floor(Math.random() * 5) + 1}`); // const extractPersonalizedElements = (content) => { // const lines = content.split('\n').filter(line => line.trim()); return { opening: lines[0] || `Hi ${prospect.name || prospect.email.split('@')[0]}`, mainContent: lines.slice(1, -1).join('\n') || `I believe there's a strong synergy between our companies.`, closing: lines[lines.length - 1] || 'Best regards' }; }; console.log(` Ollama ...`); const elements = extractPersonalizedElements(personalizedContent); console.log(` `); // const designStyles = ['minimalist_tech', 'modern_gradient', 'professional_corporate', 'creative_startup', 'luxury_premium']; const selectedDesign = designStyles[Math.floor(Math.random() * designStyles.length)]; console.log(` Using ${selectedDesign} design inspired by Stripe partnership emails`); // prospect const prospectName = prospect.name || prospect.email.split('@')[0]; const prospectCompany = prospect.company || prospect.domain?.split('.')[0] || 'your company'; const companyName = businessAnalysis?.companyName || 'FruitAI'; const senderName = prospect.templateData?.senderName || 'James Wilson'; const companyWebsite = prospect.templateData?.companyWebsite || businessAnalysis?.website || (prospect.templateData?.senderEmail?.split('@')[1] ? `https://${prospect.templateData.senderEmail.split('@')[1]}` : 'https://your-website.com'); // Premium 2025 - generateDynamicPremiumEmail let templateContent; try { console.log(` Premium 2025 generateDynamicPremiumEmail...`); templateContent = this.premiumTemplates2025.generateDynamicPremiumEmail( selectedTemplate, prospect, businessAnalysis, null, // marketingStrategy { design: selectedDesign, personalizedContent: personalizedContent, campaignGoal: campaignGoal, elements: elements, variationIndex: this.templateRotationIndex % 10 } ); console.log(` PREMIUM 2025 `); console.log(` : 2024 + + `); console.log(` : ${selectedTemplate}_${selectedDesign}_${Math.floor(Math.random() * 10) + 1}`); console.log(` : premium_dynamic`); console.log(` - `); if (templateContent && templateContent.body) { return templateContent.body; } else if (templateContent) { return templateContent; } } catch (error) { console.log(` Premium 2025: ${error.message}`); } // console.log(` `); return this.getAppleStyleHTMLTemplate(selectedTemplate, prospectName, prospectCompany, companyName, senderName, companyWebsite, elements, templateInfo.subject); } /** * UNIVERSAL FALLBACK: Ensure ANY Ollama output fits into HTML templates * This is the final safety net that handles any possible Ollama format */ universalOllamaToHtmlConverter(ollamaOutput, prospect, businessAnalysis, templateData) { console.log(' UNIVERSAL FALLBACK: Converting any Ollama output to HTML template...'); if (!ollamaOutput || typeof ollamaOutput !== 'string') { console.log(' Invalid Ollama output, using emergency template'); return this.createEmergencyEmailTemplate(prospect, businessAnalysis, templateData); } // Stage 1: Extract content with maximum flexibility const extractedContent = this.extractActualEmailContent(ollamaOutput); // Stage 2: Ensure we have all required components const safeSubject = extractedContent.subject || `Business Opportunity for ${prospect.company || 'Your Company'}`; const safeIntro = extractedContent.intro || `Dear ${prospect.name || 'Valued Partner'},`; const safeBody = extractedContent.body || extractedContent.cleanedContent || this.createFallbackBody(prospect, businessAnalysis); const safeCta = extractedContent.cta || `I'd love to discuss this opportunity further with ${prospect.company || 'your team'}.`; // Stage 3: Create structured HTML template data const htmlTemplateData = { subject: safeSubject, greeting: safeIntro, paragraphs: extractedContent.paragraphs || this.splitIntoParagraphs(safeBody), cta: safeCta, signature: `Best regards,\n${templateData?.senderName || 'Business Development Team'}`, // Company info senderCompany: templateData?.companyName || businessAnalysis?.companyName || 'Our Company', senderWebsite: templateData?.companyWebsite || businessAnalysis?.website || '#', recipientName: prospect.name || 'Valued Partner', recipientCompany: prospect.company || 'Your Company', // Template styling template_type: prospect.preferredTemplate || 'partnership_outreach', html_content: extractedContent.htmlSafebody || this.formatForHtml(safeBody) }; console.log(` Universal conversion complete: Subject, ${htmlTemplateData.paragraphs.length} paragraphs, CTA, signature`); return htmlTemplateData; } /** * Emergency template when all parsing fails */ createEmergencyEmailTemplate(prospect, businessAnalysis, templateData) { console.log(' Creating emergency email template...'); const recipientName = prospect.name || 'Valued Partner'; const recipientCompany = prospect.company || 'your organization'; const senderName = templateData?.senderName || 'Business Development Team'; const senderCompany = templateData?.companyName || businessAnalysis?.companyName || 'Our Company'; const senderWebsite = templateData?.companyWebsite || businessAnalysis?.website || '#'; return { subject: `Business Opportunity for ${recipientCompany}`, greeting: `Dear ${recipientName},`, paragraphs: [ `I hope this message finds you well. I'm reaching out regarding a potential business opportunity that could benefit ${recipientCompany}.`, `Our team at ${senderCompany} specializes in innovative solutions that help organizations like yours achieve their goals more efficiently.`, `I believe there could be significant synergy between our organizations and would welcome the opportunity to explore this further.` ], cta: `Would you be interested in a brief call to discuss how we might work together?`, signature: `Best regards,\n${senderName}\n${senderCompany}`, senderCompany, senderWebsite, recipientName, recipientCompany, template_type: 'emergency_fallback', html_content: this.formatForHtml(`I hope this message finds you well. I'm reaching out regarding a potential business opportunity that could benefit ${recipientCompany}.\n\nOur team at ${senderCompany} specializes in innovative solutions that help organizations like yours achieve their goals more efficiently.\n\nI believe there could be significant synergy between our organizations and would welcome the opportunity to explore this further.`) }; } /** * Create fallback body content when extraction fails */ createFallbackBody(prospect, businessAnalysis) { const recipientCompany = prospect.company || 'your organization'; const senderCompany = businessAnalysis?.companyName || 'our company'; const industry = prospect.industry || businessAnalysis?.industry || 'business'; return `I hope this message finds you well. I'm reaching out because I noticed ${recipientCompany}'s work in the ${industry} sector and believe there could be valuable opportunities for collaboration. Our team at ${senderCompany} has been helping organizations like yours achieve significant improvements in operational efficiency and growth. I'd love to share some insights that might be relevant to ${recipientCompany}'s current objectives and explore how we might work together.`; } /** * Generate unique, personalized email subjects based on recipient context * Eliminates duplicate "Partnership Opportunity" subjects */ generateUniqueSubject(prospect, businessAnalysis, templateType) { const companyName = businessAnalysis?.companyName || 'FruitAI'; const prospectCompany = prospect?.company || prospect?.name || 'Your Team'; const industry = businessAnalysis?.industry || 'Technology'; // Create unique subject variations based on context const subjectVariations = [ // Value-focused subjects `${companyName} × ${prospectCompany}: Innovation Opportunity`, `Boost ${prospectCompany}'s ${industry} Performance with ${companyName}`, `${prospectCompany}: Ready for Next-Gen ${industry} Solutions?`, `${companyName} + ${prospectCompany} = Exponential Growth`, `Exclusive ${industry} Innovation for ${prospectCompany}`, // Curiosity-driven subjects `${prospectCompany}: This Could Change Everything`, `${prospectCompany}, see what industry leaders are saying`, `The ${industry} breakthrough ${prospectCompany} needs`, `${prospectCompany}: Your competitors don't know about this yet`, `Quick question about ${prospectCompany}'s growth`, // Solution-focused subjects `${companyName} Solution for ${prospectCompany}'s Challenges`, `How ${prospectCompany} Can Lead ${industry} Innovation`, `${prospectCompany}: Transform Your ${industry} Strategy`, `${companyName}'s New ${industry} Solution for ${prospectCompany}`, `${prospectCompany}, let's discuss your ${industry} goals`, // Time-sensitive subjects `${prospectCompany}: Limited-Time ${industry} Opportunity`, `${prospectCompany}, don't miss this ${industry} advantage`, `Exclusive ${industry} preview for ${prospectCompany}`, `${prospectCompany}: Early access to ${companyName}'s innovation`, // Personal touch subjects `Re: ${prospectCompany}'s ${industry} expansion`, `Following up on ${prospectCompany}'s recent success`, `${prospectCompany}: Inspired by your ${industry} work`, `${companyName} team has been following ${prospectCompany}`, `${prospectCompany}: Let's explore synergies` ]; // Select random subject but ensure uniqueness by company const hash = (prospect?.email || prospect?.company || '').split('').reduce((a, b) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0); const index = Math.abs(hash) % subjectVariations.length; return subjectVariations[index]; } /** * Generate email from user-selected and user-edited template * This method preserves the exact template selection and edits made by the user */ async generateEmailFromUserTemplate(prospect, businessAnalysis, marketingStrategy, userTemplate) { console.log(' Generating email from user-selected template...'); try { // Extract prospect information const prospectName = prospect.name || prospect.email.split('@')[0].replace(/[^a-zA-Z]/g, ' ').trim(); const prospectCompany = prospect.company || prospect.email.split('@')[1].split('.')[0]; const companyName = businessAnalysis?.companyName || 'FruitAI'; const senderName = businessAnalysis?.senderInfo?.senderName || 'James Wilson'; // Use the user template exactly as provided let finalHtml = userTemplate.html || ''; let finalSubject = userTemplate.subject || `Partnership Opportunity with ${companyName}`; // Generate template-specific personalized content using Ollama console.log(' Generating template-specific personalized content...'); const templateType = userTemplate.templateId || userTemplate.id || 'custom'; const templateName = userTemplate.name || templateType; // Create template-specific Ollama prompt const templateSpecificPrompt = this.createTemplateSpecificPrompt( templateType, templateName, userTemplate, prospectName, prospectCompany, senderName, companyName, businessAnalysis ); let personalizedContent = ''; try { const response = await axios.post(`${this.ollamaUrl}/api/generate`, { model: this.emailModel, prompt: templateSpecificPrompt, stream: false, options: { temperature: 0.7, top_k: 40, top_p: 0.9, num_predict: 800 } }); personalizedContent = response.data.response?.trim() || ''; console.log(' Generated template-specific content:', personalizedContent.length, 'characters'); } catch (ollamaError) { console.error(' Ollama failed for template-specific content:', ollamaError.message); // Fallback to basic replacement personalizedContent = `Dear ${prospectName},\n\nI hope this message finds you well. I'm reaching out from ${companyName} to explore potential collaboration opportunities with ${prospectCompany}.\n\nWe specialize in innovative solutions that could benefit your organization.\n\nBest regards,\n${senderName}`; } // Apply personalization replacements to the user template const replacements = { '{name}': prospectName, '{company}': prospectCompany, '{prospect_name}': prospectName, '{prospect_company}': prospectCompany, '{sender_name}': senderName, '{sender_company}': companyName, '{your_name}': senderName, '{your_company}': companyName, '{personalized_content}': personalizedContent, '{main_content}': personalizedContent }; // Apply replacements to HTML content Object.entries(replacements).forEach(([placeholder, value]) => { finalHtml = finalHtml.replace(new RegExp(placeholder, 'gi'), value); finalSubject = finalSubject.replace(new RegExp(placeholder, 'gi'), value); }); // If the user template has components, preserve them exactly let finalComponents = userTemplate.components; if (finalComponents && Array.isArray(finalComponents)) { finalComponents = finalComponents.map(component => { const updatedComponent = { ...component }; // Apply personalization to component content if (updatedComponent.content) { Object.entries(replacements).forEach(([placeholder, value]) => { updatedComponent.content = updatedComponent.content.replace(new RegExp(placeholder, 'gi'), value); }); } // Apply personalization to component properties if (updatedComponent.properties) { Object.keys(updatedComponent.properties).forEach(key => { if (typeof updatedComponent.properties[key] === 'string') { Object.entries(replacements).forEach(([placeholder, value]) => { updatedComponent.properties[key] = updatedComponent.properties[key].replace(new RegExp(placeholder, 'gi'), value); }); } }); } return updatedComponent; }); } // Generate plain text version const plainText = finalHtml.replace(/<[^>]*>/g, '').replace(/\s+/g, ' ').trim(); const result = { success: true, email: { subject: finalSubject, body: finalHtml, plainText: plainText, template_used: 'user_template', content_type: 'html', customized: true, components: finalComponents, styles: userTemplate.styles || {}, layout: userTemplate.layout || 'default' }, metadata: { template_type: 'user_template', customized: true, generated_at: new Date().toISOString(), method: 'user_template_preservation', prospect_personalization: { name: prospectName, company: prospectCompany }, user_edits_preserved: true } }; console.log(' User template email generated successfully'); console.log(' Subject:', finalSubject); console.log(' Components preserved:', finalComponents?.length || 0); console.log(' Styles preserved:', Object.keys(userTemplate.styles || {}).length); return result; } catch (error) { console.error(' Error generating user template email:', error); throw new Error(`User template email generation failed: ${error.message}`); } } /** * Create template-specific Ollama prompts for different template types */ createTemplateSpecificPrompt(templateType, templateName, userTemplate, prospectName, prospectCompany, senderName, companyName, businessAnalysis) { console.log(` Creating template-specific prompt for: ${templateType} (${templateName})`); // Base information const industry = businessAnalysis?.industry || 'Technology'; const productDescription = businessAnalysis?.mainProducts?.[0]?.description || 'innovative solutions'; const valueProposition = businessAnalysis?.valueProposition || 'cutting-edge technology solutions'; // Template-specific prompts const templatePrompts = { 'professional_partnership': `Write a professional partnership email for ${prospectName} at ${prospectCompany}. TEMPLATE: Professional Partnership Email
SENDER: ${senderName} from ${companyName}
TARGET: ${prospectName} at ${prospectCompany}
INDUSTRY: ${industry}
PRODUCT: ${productDescription} Create a formal, professional email that:
1. Opens with a professional greeting and company introduction
2. Explains our ${valueProposition} and how it could benefit ${prospectCompany}
3. Proposes a specific partnership opportunity
4. Includes concrete next steps and call to action
5. Maintains a confident, professional tone throughout Keep it concise (2-3 paragraphs) and focus on mutual business value.`, 'casual_partnership': `Write a casual, friendly partnership email for ${prospectName} at ${prospectCompany}. TEMPLATE: Casual Partnership Email
SENDER: ${senderName} from ${companyName}
TARGET: ${prospectName} at ${prospectCompany}
APPROACH: Warm, conversational, relationship-focused Create a friendly email that:
1. Opens with a warm, personal greeting
2. Mentions something specific about ${prospectCompany}
3. Casually introduces our ${valueProposition}
4. Suggests collaboration in a non-pushy way
5. Uses conversational language and shows genuine interest Keep it short, authentic, and relationship-building focused.`, 'business_introduction': `Write a business introduction email for ${prospectName} at ${prospectCompany}. TEMPLATE: Business Introduction
SENDER: ${senderName} from ${companyName}
TARGET: ${prospectName} at ${prospectCompany}
PURPOSE: Introduce our company and establish initial contact Create an introduction email that:
1. Clearly introduces ${companyName} and our mission
2. Explains what we do: ${productDescription}
3. Shows understanding of ${prospectCompany}'s business
4. Suggests potential ways we could work together
5. Keeps the door open for future conversation Professional but approachable tone, 2-3 short paragraphs.`, 'value_proposition': `Write a value-focused email for ${prospectName} at ${prospectCompany}. TEMPLATE: Value Proposition Email
SENDER: ${senderName} from ${companyName}
TARGET: ${prospectName} at ${prospectCompany}
FOCUS: Clear value and benefits Create a value-driven email that:
1. Opens by acknowledging ${prospectCompany}'s success/challenges
2. Presents our ${valueProposition} with specific benefits
3. Uses numbers, metrics, or concrete examples where possible
4. Shows ROI or business impact potential
5. Includes a clear, specific call to action Direct, benefit-focused, and results-oriented tone.` }; // Get template-specific prompt or use generic fallback return templatePrompts[templateType] || templatePrompts['professional_partnership'] || `Write a professional business email from ${senderName} at ${companyName} to ${prospectName} at ${prospectCompany}. Focus on:
- Professional introduction of ${companyName}
- Our ${valueProposition}
- Potential partnership opportunities
- Clear next steps Keep it concise and professional.`; } } module.exports = PersonalizedEmailGenerator;
